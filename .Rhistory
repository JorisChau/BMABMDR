dp = abs(diff(seq(0,1,0.01))) # differenced quantiles
fx = dp/w # estimated height of pdf
hist(full_post_bkg, prob = T, ylim = c(0,15))
lines(q_post_bkg[-length(q_post_bkg)], fx, col = 2, lwd = 3)
# approx_post_bmd <- (diff(q_post_bmd)/diff(seq(0,1,0.01)))
approx_post_bkg <- sample(q_post_bkg[-length(q_post_bkg)], size = 5000, prob = fx, replace = TRUE)
hist(approx_post_bkg, prob = T)
par(mfrow = c(2,1))
hist(approx_post_bkg, prob = T, xlim = c(0,0.3))
hist(full_post_bkg, prob = T, xlim = c(0,0.3))
dx1 <- density(full_post_bkg); dx2 <- density(approx_post_bkg)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'Background', ylab = 'Density')
lines(dx1$x, dx1$y)
legend('topright', c("Full posterior", "Approx. posterior"), col = c(1,2), lty = c(1,2))
abline(v = getmode(full_post_bkg))
abline(v = getmode(approx_post_bkg), col = 2, lty = 2)
## Fit PERT
data_full_approx_bkg <- list(N = length(approx_post_bkg), y = approx_post_bkg, min_obs = min(approx_post_bkg), max_obs = max(approx_post_bkg),
mode_obs = getmode(approx_post_bkg))
opt_approx_bkg <- rstan::optimizing(mod_pert, data = data_full_approx_bkg, draws = 30000)
opt_approx_bkg$par
par(mfrow = c(1,1))
hist(full_post_bkg, prob = T, ylim = c(0,16), xlab = "Background", ylab = "Density", main = "")
curve(dpert(x, min = min(approx_post_bkg), mode = opt_approx_bkg$par[2], max = max(approx_post_bkg), shape = opt_approx_bkg$par[1]), col = 2, from = 0, to = 0.3, add = T, lwd = 2)
legend('topright', c("optim","sampling"), col = c(2,3), lty = c (1,1), lwd = c(2,2))
fitmcmc_approx_bkg <- rstan::sampling(mod_pert, data = data_full_approx_bkg, init = init_ll, chains = 3)
head(as.matrix(fitmcmc_approx_bkg))
head(as.matrix(fitmcmc_approx_bkg))
# est.min.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,5])
est.mode.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,2])
# est.max.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,6])
est.shape.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,1])
curve(dpert(x, min = min(approx_post_bkg), mode = est.mode.approx.bkg, max = max(approx_post_bkg), shape = est.shape.approx.bkg),
col = 3, from = 0, to = 0.3, add = T, lwd = 2)
approx_post_bkg2 <- sample(q_post_bkg[-length(q_post_bkg)], size = 100, prob = fx, replace = TRUE)
hist(approx_post_bkg2, prob = T)
par(mfrow = c(3,1))
hist(approx_post_bkg, prob = T, xlim = c(0,0.3))
hist(approx_post_bkg2, prob = T, xlim = c(0,0.3))
hist(full_post_bkg, prob = T, xlim = c(0,0.3))
dx1 <- density(full_post_bkg); dx2 <- density(approx_post_bkg); dx3 <- density(approx_post_bkg2)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'Background', ylab = 'Density')
lines(dx1$x, dx1$y)
lines(dx3$x, dx3$y, lty = 2, col = 3)
legend('topleft', c("Full posterior", "Approx. posterior (5000)", "Approx. posterior (500)"), col = c(1,2,3), lty = c(1,2,2))
dx1 <- density(full_post_bkg); dx2 <- density(approx_post_bkg); dx3 <- density(approx_post_bkg2)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'Background', ylab = 'Density')
lines(dx1$x, dx1$y)
lines(dx3$x, dx3$y, lty = 2, col = 3)
legend('topleft', c("Full posterior", "Approx. posterior (5000)", "Approx. posterior (100)"), col = c(1,2,3), lty = c(1,2,2))
## Fit PERT
data_full_approx_bkg2 <- list(N = length(approx_post_bkg2), y = approx_post_bkg2, min_obs = min(approx_post_bkg2), max_obs = max(approx_post_bkg2),
mode_obs = getmode(approx_post_bkg2))
fitmcmc_approx_bkg2 <- rstan::sampling(mod_pert, data = data_full_approx_bkg2, init = init_ll, chains = 3)
# est.min.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,5])
est.mode.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,2])
# est.max.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,6])
est.shape.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,1])
par(mfrow = c(1,1))
hist(full_post_bkg, prob = T, xlab = "Background", ylab = 'Density', main = "", ylim = c(0,16))
# PERT based on full posterior
curve(dpert(x, min = min(full_post_bkg), mode = est.mode.bkg, max = max(full_post_bkg), shape = est.shape.bkg), col = 2, from = 0, to = 1, add = T, lwd = 2)
# PERT based on approximated posterior
curve(dpert(x, min = min(approx_post_bkg), mode = est.mode.approx.bkg, max = max(approx_post_bkg), shape = est.shape.approx.bkg),
col = 3, from = 0, to = 1, add = T, lwd = 2)
curve(dpert(x, min = min(approx_post_bkg2), mode = est.mode.approx.bkg2, max = max(approx_post_bkg2), shape = est.shape.approx.bkg2),
col = 4, from = 0, to = 1, add = T, lwd = 2)
hist(full_post_bkg, prob = T, xlab = "Background", ylab = 'Density', main = "", ylim = c(0,20))
# PERT based on full posterior
curve(dpert(x, min = min(full_post_bkg), mode = est.mode.bkg, max = max(full_post_bkg), shape = est.shape.bkg), col = 2, from = 0, to = 1, add = T, lwd = 2)
# PERT based on approximated posterior
curve(dpert(x, min = min(approx_post_bkg), mode = est.mode.approx.bkg, max = max(approx_post_bkg), shape = est.shape.approx.bkg),
col = 3, from = 0, to = 1, add = T, lwd = 2)
curve(dpert(x, min = min(approx_post_bkg2), mode = est.mode.approx.bkg2, max = max(approx_post_bkg2), shape = est.shape.approx.bkg2),
col = 4, from = 0, to = 1, add = T, lwd = 2)
legend("topright", c("Full posterior", "Approx posterior (5000)", "Approx posterior (100)"), col = c(2,3,4), lty = c(1,1,1), lwd = c(2,2,2))
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_SBMDQ.RData")
library(mc2d)
setwd('G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS')
SBMD_Q$parsQ
SBMD_Q$parsQ[1]
head(SBMD_Q$parsQ[1])
head(SBMD_Q$parsQ[[1]])
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y)
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l')
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1)
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.5))
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.7))
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.65))
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.65), xlim = c(0,30))
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/parameter_d.R")
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_SBMDQ.RData")
setwd('G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS')
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.65))
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.65), xlim = c(0,30))
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
library(BMABMDR)
legend('topright', get_models('quantal'))
legend('topright', get_models('quantal'), col = c(1:8), lty = rep(1,8))
plot(density(SBMD_Q$parsQ[[1]][,"d"])$x, density(SBMD_Q$parsQ[[1]][,"d"])$y, type = 'l', col = 1, ylim = c(0, 0.65), xlim = c(0,30),
xlab = 'Parameter d', ylab = 'Density')
cl = 2
for(i in 2:8){
lines(density(SBMD_Q$parsQ[[i]][,"d"])$x, density(SBMD_Q$parsQ[[i]][,"d"])$y, col = i)
}
legend('topright', get_models('quantal'), col = c(1:8), lty = rep(1,8))
abline(v = 1, lty = 3)
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_SBMDQ.RData")
library(mc2d)
library(rstan)
full_post_bmd <- SBMD_Q$MA_post_full_bs
full_post_bkg <- SBMD_Q$bkg_post_bs
q_post_bmd <- quantile(SBMD_Q$MA_post_full_bs, seq(0,1,0.01))
q_post_bkg <- quantile(SBMD_Q$bkg_post_bs, seq(0,1,0.01))
getmode <- function(v){
dx <- density(v)
dx$x[dx$y == max(dx$y)]
}
mod_pert <- stan_model("pert_v2.stan")
opt <- rstan::optimizing(mod_pert, data = data_full_post, draws = 30000, init = list(mode = getmode(full_post_bmd)))
data_full_post <- list(N = length(full_post_bmd), y = full_post_bmd, min_obs = min(full_post_bmd), max_obs = max(full_post_bmd))
opt <- rstan::optimizing(mod_pert, data = data_full_post, draws = 30000, init = list(mode = getmode(full_post_bmd)))
opt$par
par(mfrow = c(1,1))
hist(full_post_bmd, prob = T, ylim = c(0,0.0015), xlab = "BMD", ylab = "Density", main = "")
curve(dpert(x, min = min(full_post_bmd), mode = opt$par[2], max = max(full_post_bmd), shape = opt$par[1]), col = 2, from = 0, to = 4000, add = T, lwd = 2)
legend('topright', c("optim","sampling"), col = c(2,3), lty = c (1,1), lwd = c(2,2))
initf2 <- function(chain_id = 1){
list(shape = 1)
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
fitmcmc <- rstan::sampling(mod_pert, data = data_full_post, init = init_ll, chains = 3)
head(as.matrix(fitmcmc))
# est.min = median(as.matrix(fitmcmc)[,5])
est.mode = median(as.matrix(fitmcmc)[,2])
# est.max = median(as.matrix(fitmcmc)[,6])
est.shape = median(as.matrix(fitmcmc)[,1])
# par(mfrow = c(1,1))
# hist(full_post_bmd, prob = T)
curve(dpert(x, min = min(full_post_bmd), mode = est.mode, max = max(full_post_bmd), shape = est.shape), col = 3, from = 0, to = 4000, add = T, lwd = 2)
init_ll
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(full_post_bmd))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
init_ll
fitmcmc <- rstan::sampling(mod_pert, data = data_full_post, init = init_ll, chains = 3)
head(as.matrix(fitmcmc))
# est.min = median(as.matrix(fitmcmc)[,5])
est.mode = median(as.matrix(fitmcmc)[,2])
# est.max = median(as.matrix(fitmcmc)[,6])
est.shape = median(as.matrix(fitmcmc)[,1])
# par(mfrow = c(1,1))
# hist(full_post_bmd, prob = T)
curve(dpert(x, min = min(full_post_bmd), mode = est.mode, max = max(full_post_bmd), shape = est.shape), col = 3, from = 0, to = 4000, add = T, lwd = 2)
## approximate pdf
w = abs(diff(q_post_bmd)) # interval width
dp = abs(diff(seq(0,1,0.01))) # differenced quantiles
fx = dp/w # estimated height of pdf
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
# approx_post_bmd <- (diff(q_post_bmd)/diff(seq(0,1,0.01)))
approx_post_bmd <- sample(q_post_bmd[-length(q_post_bmd)], size = 5000, prob = fx, replace = TRUE)
hist(approx_post_bmd, prob = T)
par(mfrow = c(2,1))
hist(approx_post_bmd, prob = T)
hist(full_post_bmd, prob = T)
dx1 <- density(full_post_bmd); dx2 <- density(approx_post_bmd)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'BMD', ylab = 'Density')
lines(dx1$x, dx1$y)
legend('topright', c("Full posterior", "Approx. posterior"), col = c(1,2), lty = c(1,2))
abline(v = getmode(full_post_bmd))
abline(v = getmode(approx_post_bmd), col = 2, lty = 2)
## Fit PERT
data_full_approx <- list(N = length(approx_post_bmd), y = approx_post_bmd, min_obs = min(approx_post_bmd), max_obs = max(approx_post_bmd),
mode_obs = getmode(approx_post_bmd))
opt_approx <- rstan::optimizing(mod_pert, data = data_full_approx, draws = 30000, init = list(shape = 1, mode = getmode(approx_post_bmd)))
opt_approx$par
hist(full_post_bmd, prob = T, ylim = c(0,0.0011), xlab = "BMD", ylab = "Density", main = "")
curve(dpert(x, min =min(approx_post_bmd), mode = opt$par[2], max = max(approx_post_bmd), shape = opt$par[1]), col = 2, from = 0, to = 4000, add = T, lwd = 2)
legend('topright', c("optim","sampling"), col = c(2,3), lty = c (1,1), lwd = c(2,2))
init_ll
fitmcmc_approx <- rstan::sampling(mod_pert, data = data_full_approx, init = init_ll, chains = 3)
head(as.matrix(fitmcmc_approx))
# est.min.approx = median(as.matrix(fitmcmc_approx)[,5])
est.mode.approx = median(as.matrix(fitmcmc_approx)[,2])
# est.max.approx = median(as.matrix(fitmcmc_approx)[,6])
est.shape.approx = median(as.matrix(fitmcmc_approx)[,1])
par(mfrow = c(1,1))
hist(full_post_bmd, prob = T, ylim = c(0,0.0011), xlab = 'BMD', ylab = 'Density', main = "")
# PERT based on full posterior
curve(dpert(x, min = min(full_post_bmd), mode = est.mode, max = max(full_post_bmd), shape = est.shape), col = 2, from = 0, to = 4000, add = T, lwd = 2)
# PERT based on approximated posterior
curve(dpert(x, min = min(approx_post_bmd), mode = est.mode.approx, max = max(approx_post_bmd), shape = est.shape.approx), col = 3, from = 0, to = 4000, add = T, lwd = 2)
legend('topright', c("full","approx"), col = c(2,3), lty = c (1,1), lwd = c(2,2))
# est.min; est.min.approx
est.mode; est.mode.approx
# est.max; est.max.approx
est.shape; est.shape.approx
## Approximation using N = 500
approx_post_bmd2 <- sample(q_post_bmd[-length(q_post_bmd)], size = 100, prob = fx, replace = TRUE)
par(mfrow = c(3,1))
hist(approx_post_bmd, prob = T)
hist(approx_post_bmd2, prob = T)
hist(full_post_bmd, prob = T)
dx3 <- density(approx_post_bmd2)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'BMD', ylab = 'Density')
lines(dx1$x, dx1$y)
lines(dx3$x, dx3$y, lty = 2, col = 3)
legend('topright', c("Full posterior", "Approx. posterior (5000)", "Approx. posterior (500)"), col = c(1,2,3), lty = c(1,2,2))
data_full_approx2 <- list(N = length(approx_post_bmd2), y = approx_post_bmd2, min_obs = min(approx_post_bmd2), max_obs = max(approx_post_bmd2),
mode_obs = getmode(approx_post_bmd2))
init_ll
fitmcmc_approx2 <- rstan::sampling(mod_pert, data = data_full_approx2, init = init_ll, chains = 3)
head(as.matrix(fitmcmc_approx2))
# est.min.approx2 = median(as.matrix(fitmcmc_approx2)[,5])
est.mode.approx2 = median(as.matrix(fitmcmc_approx2)[,2])
# est.max.approx2 = median(as.matrix(fitmcmc_approx2)[,6])
est.shape.approx2 = median(as.matrix(fitmcmc_approx2)[,1])
par(mfrow = c(1,1))
hist(full_post_bmd, prob = T, ylim = c(0,0.0011), xlab = 'BMD', ylab = 'Density', main = "")
# PERT based on full posterior
curve(dpert(x, min = min(full_post_bmd), mode = est.mode, max = max(full_post_bmd), shape = est.shape), col = 2, from = 0, to = 4000, add = T, lwd = 2)
# PERT based on approximated posterior
curve(dpert(x, min = min(approx_post_bmd), mode = est.mode.approx, max = max(approx_post_bmd), shape = est.shape.approx), col = 3, from = 0, to = 4000, add = T, lwd = 2)
curve(dpert(x, min = min(approx_post_bmd2), mode = est.mode.approx2, max = max(approx_post_bmd2), shape = est.shape.approx2), col = 4, from = 0, to = 4000, add = T, lwd = 2)
legend('topright', c("Full posterior", "Approx posterior (5000)", "Approx posterior (500)"), col = c(2,3,4), lty = c (1,1,1), lwd = c(2,2,2))
legend('topright', c("Full posterior", "Approx posterior (5000)", "Approx posterior (100)"), col = c(2,3,4), lty = c (1,1,1), lwd = c(2,2,2))
legend('topright', c("Full posterior", "Approx. posterior (5000)", "Approx. posterior (100)"), col = c(1,2,3), lty = c(1,2,2))
data_full_post_bkg <- list(N = length(full_post_bkg), y = full_post_bkg, min_obs = min(full_post_bkg), max_obs = max(full_post_bkg),
mode_obs = getmode(full_post_bkg))
opt_bkg <- rstan::optimizing(mod_pert, data = data_full_post_bkg, draws = 30000, init = list(shape = 1, mode = getmode(full_post_bkg)))
getmode(full_post_bkg)
opt_bkg <- rstan::optimizing(mod_pert, data = data_full_post_bkg, draws = 30000, init = list(shape = 1, mode = getmode(full_post_bkg)))
opt_bkg$par
par(mfrow = c(1,1))
hist(full_post_bkg, prob = T, ylim = c(0,16), xlab = "BMD", ylab = "Density", main = "")
curve(dpert(x, min = min(full_post_bkg), mode = opt_bkg$par[2], max = max(full_post_bkg), shape = opt_bkg$par[1]), col = 2, from = 0, to = 0.3, add = T, lwd = 2)
legend('topright', c("optim","sampling"), col = c(2,3), lty = c (1,1), lwd = c(2,2))
init_ll
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(full_post_bkg))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
init_ll
fitmcmc_bkg <- rstan::sampling(mod_pert, data = data_full_post_bkg, init = init_ll, chains = 3)
save.image("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_SBMDQ_fit_v2.RData")
head(as.matrix(fitmcmc_bkg))
# est.min.bkg = median(as.matrix(fitmcmc_bkg)[,5])
est.mode.bkg = median(as.matrix(fitmcmc_bkg)[,2])
# est.max.bkg = median(as.matrix(fitmcmc_bkg)[,6])
est.shape.bkg = median(as.matrix(fitmcmc_bkg)[,1])
# par(mfrow = c(1,1))
# hist(full_post_bkg, prob = T, breaks = length(unique(full_post_bkg)))
curve(dpert(x, min = min(full_post_bkg), mode = est.mode.bkg, max = max(full_post_bkg), shape = est.shape.bkg), col = 3, from = 0, to = 0.3, add = T, lwd = 2)
## approximate pdf
w = abs(diff(q_post_bkg)) # interval width
dp = abs(diff(seq(0,1,0.01))) # differenced quantiles
fx = dp/w # estimated height of pdf
hist(full_post_bkg, prob = T, ylim = c(0,15))
lines(q_post_bkg[-length(q_post_bkg)], fx, col = 2, lwd = 3)
# approx_post_bmd <- (diff(q_post_bmd)/diff(seq(0,1,0.01)))
approx_post_bkg <- sample(q_post_bkg[-length(q_post_bkg)], size = 5000, prob = fx, replace = TRUE)
hist(approx_post_bkg, prob = T)
par(mfrow = c(2,1))
hist(approx_post_bkg, prob = T, xlim = c(0,0.3))
hist(full_post_bkg, prob = T, xlim = c(0,0.3))
dx1 <- density(full_post_bkg); dx2 <- density(approx_post_bkg)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'Background', ylab = 'Density')
lines(dx1$x, dx1$y)
legend('topright', c("Full posterior", "Approx. posterior"), col = c(1,2), lty = c(1,2))
abline(v = getmode(full_post_bkg))
abline(v = getmode(approx_post_bkg), col = 2, lty = 2)
## Fit PERT
data_full_approx_bkg <- list(N = length(approx_post_bkg), y = approx_post_bkg, min_obs = min(approx_post_bkg), max_obs = max(approx_post_bkg),
mode_obs = getmode(approx_post_bkg))
opt_approx_bkg <- rstan::optimizing(mod_pert, data = data_full_approx_bkg, draws = 30000, init = list(shape = 1, mode = getmode(approx_post_bkg)))
opt_approx_bkg$par
par(mfrow = c(1,1))
hist(full_post_bkg, prob = T, ylim = c(0,16), xlab = "Background", ylab = "Density", main = "")
curve(dpert(x, min = min(approx_post_bkg), mode = opt_approx_bkg$par[2], max = max(approx_post_bkg), shape = opt_approx_bkg$par[1]), col = 2, from = 0, to = 0.3, add = T, lwd = 2)
legend('topright', c("optim","sampling"), col = c(2,3), lty = c (1,1), lwd = c(2,2))
init_ll
fitmcmc_approx_bkg <- rstan::sampling(mod_pert, data = data_full_approx_bkg, init = init_ll, chains = 3)
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(approx_post_bkg))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
fitmcmc_approx_bkg <- rstan::sampling(mod_pert, data = data_full_approx_bkg, init = init_ll, chains = 3)
head(as.matrix(fitmcmc_approx_bkg))
# est.min.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,5])
est.mode.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,2])
# est.max.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,6])
est.shape.approx.bkg = median(as.matrix(fitmcmc_approx_bkg)[,1])
curve(dpert(x, min = min(approx_post_bkg), mode = est.mode.approx.bkg, max = max(approx_post_bkg), shape = est.shape.approx.bkg),
col = 3, from = 0, to = 0.3, add = T, lwd = 2)
approx_post_bkg2 <- sample(q_post_bkg[-length(q_post_bkg)], size = 100, prob = fx, replace = TRUE)
hist(approx_post_bkg2, prob = T)
par(mfrow = c(3,1))
hist(approx_post_bkg, prob = T, xlim = c(0,0.3))
hist(approx_post_bkg2, prob = T, xlim = c(0,0.3))
hist(full_post_bkg, prob = T, xlim = c(0,0.3))
dx1 <- density(full_post_bkg); dx2 <- density(approx_post_bkg); dx3 <- density(approx_post_bkg2)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'Background', ylab = 'Density')
lines(dx1$x, dx1$y)
lines(dx3$x, dx3$y, lty = 2, col = 3)
legend('topleft', c("Full posterior", "Approx. posterior (5000)", "Approx. posterior (100)"), col = c(1,2,3), lty = c(1,2,2))
## Fit PERT
data_full_approx_bkg2 <- list(N = length(approx_post_bkg2), y = approx_post_bkg2, min_obs = min(approx_post_bkg2), max_obs = max(approx_post_bkg2),
mode_obs = getmode(approx_post_bkg2))
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(full_post_bkg2))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
fitmcmc_approx_bkg2 <- rstan::sampling(mod_pert, data = data_full_approx_bkg2, init = init_ll, chains = 3)
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(approx_post_bkg2))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
fitmcmc_approx_bkg2 <- rstan::sampling(mod_pert, data = data_full_approx_bkg2, init = init_ll, chains = 3)
head(as.matrix(fitmcmc_approx_bkg2))
# est.min.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,5])
est.mode.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,2])
# est.max.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,6])
est.shape.approx.bkg2 = median(as.matrix(fitmcmc_approx_bkg2)[,1])
par(mfrow = c(1,1))
hist(full_post_bkg, prob = T, xlab = "Background", ylab = 'Density', main = "", ylim = c(0,20))
# PERT based on full posterior
curve(dpert(x, min = min(full_post_bkg), mode = est.mode.bkg, max = max(full_post_bkg), shape = est.shape.bkg), col = 2, from = 0, to = 1, add = T, lwd = 2)
# PERT based on approximated posterior
curve(dpert(x, min = min(approx_post_bkg), mode = est.mode.approx.bkg, max = max(approx_post_bkg), shape = est.shape.approx.bkg),
col = 3, from = 0, to = 1, add = T, lwd = 2)
curve(dpert(x, min = min(approx_post_bkg2), mode = est.mode.approx.bkg2, max = max(approx_post_bkg2), shape = est.shape.approx.bkg2),
col = 4, from = 0, to = 1, add = T, lwd = 2)
legend("topright", c("Full posterior", "Approx posterior (5000)", "Approx posterior (100)"), col = c(2,3,4), lty = c(1,1,1), lwd = c(2,2,2))
est.min.bkg; est.min.approx.bkg
6/115
0.05/100
0.05*100
1000*5
1000/5000
1000/20000
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_SBMDQ_fit.RData")
library(mc2d)
library(rstan)
getmode <- function(v){
dx <- density(v)
dx$x[dx$y == max(dx$y)]
}
setwd("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS")
hist(q_post_bmd)
length(q_post_bmd)
q_post_bmd
hist(q_post_bmd, breaks = 100)
hist(q_post_bmd, breaks = 101)
hist(q_post_bmd, breaks = 100)
hist(q_post_bmd, breaks = 4000)
hist(q_post_bmd)
hist(full_post_bmd)
## approximate pdf
w = abs(diff(q_post_bmd)) # interval width
dp = abs(diff(seq(0,1,0.01))) # differenced quantiles
dp
w
fx = dp/w # estimated height of pdf
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
fx
# approx_post_bmd <- (diff(q_post_bmd)/diff(seq(0,1,0.01)))
approx_post_bmd <- sample(q_post_bmd[-length(q_post_bmd)], size = 5000, prob = fx, replace = TRUE)
hist(approx_post_bmd, prob = T)
hist(approx_post_bmd)
par(mfrow = c(2,1))
hist(approx_post_bmd, prob = T)
hist(full_post_bmd, prob = T)
par(mfrow = c(2,1))
hist(approx_post_bmd, prob = F)
hist(full_post_bmd, prob = F)
?hist
dx1 <- density(full_post_bmd); dx2 <- density(approx_post_bmd)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'BMD', ylab = 'Density')
lines(dx1$x, dx1$y)
legend('topright', c("Full posterior", "Approx. posterior"), col = c(1,2), lty = c(1,2))
# approx_post_bmd <- (diff(q_post_bmd)/diff(seq(0,1,0.01)))
approx_post_bmd <- sample(q_post_bmd[-length(q_post_bmd)], size = 5000, prob = fx, replace = TRUE)
dx1 <- density(full_post_bmd); dx2 <- density(approx_post_bmd)
lines(dx1$x, dx1$y)
?quantile
fx
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(q_post_bmd, prob = T)
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(q_post_bmd, prob = T, ylim = c(0,0.003))
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(q_post_bmd, prob = T, ylim = c(0,0.003), breaks=4000)
hist(q_post_bmd, prob = T, ylim = c(0,0.003), breaks=100)
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(q_post_bmd, prob = T, ylim = c(0,0.003), breaks=200)
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(q_post_bmd, prob = T, ylim = c(0,0.003), breaks=2000)
hist(q_post_bmd, prob = T, ylim = c(0,0.003), breaks=500)
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(approx_post_bmd)
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
hist(approx_post_bmd,prob=T)
lines(q_post_bmd[-length(q_post_bmd)], fx, col = 2, lwd = 3)
?sample
y = rnorm(10000,2,1)
hist(y)
qy = quantile(y, seq(0,1,0.01))
hist(qy)
length(qy)
wy = abs(diff(qy))
hist(wy)
wy
fy = dp/wy
fy
hist(y)
lines(qy[-length(qy)], fx, col = 2, lwd = 3)
hist(y,prob=T)
lines(qy[-length(qy)], fx, col = 2, lwd = 3)
fx=dp/wy
## approximate pdf
w = abs(diff(q_post_bmd)) # interval width
dp = abs(diff(seq(0,1,0.01))) # differenced quantiles
fx = dp/w # estimated height of pdf
lines(qy[-length(qy)], fy, col = 2, lwd = 3)
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
hist(y, prob=T)
lines(qy[-length(qy)], fy, col = 2, lwd = 3)
sy = sample(qy[-length(qy)], size = 5000, prob = fy, replace = T)
hist(sy)
par(mfrow = c(2,1))
hist(y)
hist(sy)
hist(y)
hist(sy,xlim=c(-2,6))
hist(y,xlim=c(-2,6))
hist(sy,xlim=c(-2,6))
dy1=density(y)
dy2=density(sy)
par(mfrow = c(1,1))
plot(dy1$x,dy1$y,type='l')
lines(dy2$x,dy2$y,lty=3,col=2)
plot(dy1$x,dy1$y,type='l',ylim=c(0,0.5))
lines(dy2$x,dy2$y,lty=3,col=2)
sy = sample(qy[-length(qy)], size = 10000, prob = fy, replace = T)
dy2=density(sy)
lines(dy2$x,dy2$y,col=3,lty=2)
q_post_bmd2 <- quantile(SBMD_Q$MA_post_full_bs, seq(0,1,0.001))
hist(q_post_bmd2)
length(q_post_bmd2)
w = abs(diff(q_post_bmd2)) # interval width
dp = abs(diff(seq(0,1,0.01))) # differenced quantiles
fx = dp/w # estimated height of pdf
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
lines(q_post_bmd2[-length(q_post_bmd2)], fx, col = 2, lwd = 3)
hist(full_post_bmd, prob = T, ylim = c(0,0.03))
lines(q_post_bmd2[-length(q_post_bmd2)], fx, col = 2, lwd = 3)
w = abs(diff(q_post_bmd2)) # interval width
dp = abs(diff(seq(0,1,0.001))) # differenced quantiles
fx = dp/w # estimated height of pdf
hist(full_post_bmd, prob = T, ylim = c(0,0.003))
lines(q_post_bmd2[-length(q_post_bmd2)], fx, col = 2, lwd = 3)
approx_post_bmd <- sample(q_post_bmd2[-length(q_post_bmd2)], size = 5000, prob = fx, replace = TRUE)
par(mfrow = c(2,1))
hist(approx_post_bmd, prob = T)
hist(full_post_bmd, prob = T)
dx1 <- density(full_post_bmd); dx2 <- density(approx_post_bmd)
par(mfrow = c(1,1))
plot(dx2$x, dx2$y, type = 'l', col = 2, lty = 2, xlab = 'BMD', ylab = 'Density')
lines(dx1$x, dx1$y)
legend('topright', c("Full posterior", "Approx. posterior"), col = c(1,2), lty = c(1,2))
abline(v = getmode(full_post_bmd))
abline(v = getmode(approx_post_bmd), col = 2, lty = 2)
