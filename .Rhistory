Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
packageVersion('BMABMDR')
## Huang 2015 apoptotic cells data
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/apoptotic cell_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$apoptotic_cell_., s = data$SD, n = data$animals.n.)
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
q = 0.2
pvec = c(0.05,0.5,0.95)
prior.weights = c(rep(1,4), rep(0,12))
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, bkg = c(2,4,6))
# data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
# data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
# data_N6$start$par4 <- log(0.2); data_LN6$start$par4 <- log(0.2)
# data_N6$data$truncd <- 0; data_LN6$data$truncd <- 0
data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
data_N6 <- data_N; data_LN6 <- data_LN
# data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
# data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
# data_N6$start$par4 <- log(0.2); data_LN6$start$par4 <- log(0.2)
# data_N6$data$truncd <- 0; data_LN6$data$truncd <- 0
data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
data_N6$start$par4 <- log(0.2); data_LN6$start$par4 <- log(0.2)
data_N6$data$truncd <- 1; data_LN6$data$truncd <- 1
prior.weights <- c(rep(1,4), rep(0,12))
FLBMD5 <- full.laplace_MA(data_N6, data_LN6, prior.weights = prior.weights)
pFLBMD5 <- plot.BMADR(FLBMD5, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD5$model_fit_N
pFLBMD5$model_fit_LN
SBMD5 <- sampling_MA(data_N6, data_LN6, prior.weights = prior.weights, nrchains = 5, nriterations = 5000)
pSBMD5 <- plot.BMADR(SBMD5, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD5$model_fit_N
data_N6$data$truncd <- 0; data_LN6$data$truncd <- 0
prior.weights <- c(rep(1,4), rep(0,12))
FLBMD5 <- full.laplace_MA(data_N6, data_LN6, prior.weights = prior.weights)
pFLBMD5 <- plot.BMADR(FLBMD5, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD5$model_fit_N
pFLBMD5$model_fit_LN
SBMD5 <- sampling_MA(data_N6, data_LN6, prior.weights = prior.weights, nrchains = 5, nriterations = 5000)
pSBMD5 <- plot.BMADR(SBMD5, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD5$model_fit_N
plot(summ.data$x, summ.data$m)
round(SBMD5$E4_N, 4)
lines(seq(0,1,0.01)*20, DRM.E4_NI(par = c(4.1,3.81/20,3.26,0.20), x = seq(0,1,0.01), q = 0.2), col = 3)
3.81/21
DRM.E4_NI(par = c(4.1,3.81/20,3.26,0.20), x = seq(0,1,0.01), q = 0.2)
DRM.E4_NI(par = c(4.1,3.81/20,3.26,0.20), x = summ.data$x, q = 0.2)
DRM.E4_NI(par = c(4.1,3.81/20,3.26,0.20), x = summ.data$x/20, q = 0.2)
round(FLBMD5$E4_N, 4)
DRM.E4_NI(par = c(4.065,exp(-18.6132),), x = summ.data$x/20, q = 0.2)
exp(-18.6132)
exp(-18.6132)*20
DRM.E4_NI(par = c(4.065,exp(-18.6132),2.9944,0.1961), x = summ.data$x/20, q = 0.2)
summ.data
DRM.E4_NI(par = c(4.065,0,2.9944,0.1961), x = summ.data$x/20, q = 0.2)
DRM.E4_NI(par = c(4.065,0.0002,2.9944,0.1961), x = summ.data$x/20, q = 0.2)
DRM.E4_NI(par = c(4.065,0,2.9944,log(0.1961)), x = summ.data$x/20, q = 0.2)
DRM.E4_NI(par = c(4.065,exp(-18.6132),2.9944,log(0.1961)), x = summ.data$x/20, q = 0.2)
summ.data$m
round(SBMD5$E4_N, 4)
DRM.E4_NI(par = c(4.065,exp(-1.6581),3.2634,log(0.2028)), x = summ.data$x/20, q = 0.2)
4.065*3.2634
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD_or <- full.laplace_MA(data_N, data_LN, prior.weights = prior.weights)
# pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD_or$model_fit_N
FLBMD_or$MA
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
round(SBMD_or$E4_N,3)
data_N6 <- data_N; data_LN6 <- data_LN
# data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
# data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
# data_N6$start$par4 <- log(0.2); data_LN6$start$par4 <- log(0.2)
# data_N6$data$truncd <- 0; data_LN6$data$truncd <- 0
data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
data_N6$start$par4 <- log(0.2); data_LN6$start$par4 <- log(0.2)
data_N6$data$truncd <- 0; data_LN6$data$truncd <- 0
prior.weights <- c(rep(1,4), rep(0,12))
FLBMD5 <- full.laplace_MA(data_N6, data_LN6, prior.weights = prior.weights)
pFLBMD5 <- plot.BMADR(FLBMD5, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD5$model_fit_N
pFLBMD5$model_fit_LN
SBMD5 <- sampling_MA(data_N6, data_LN6, prior.weights = prior.weights, nrchains = 5, nriterations = 5000)
pSBMD5 <- plot.BMADR(SBMD5, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD5$model_fit_N
SBMD5$corrs
round(FLBMD5$E4_N, 4)
round(SBMD5$E4_N, 4)
data_N6 <- data_N; data_LN6 <- data_LN
# data_N6$data$priormu[4] <- log(0.2); data_N6$data$priorSigma[4,4] <- 0.2
# data_LN6$data$priormu[4] <- log(0.2); data_LN6$data$priorSigma[4,4] <- 0.2
# data_N6$start$par4 <- log(0.2); data_LN6$start$par4 <- log(0.2)
# data_N6$data$truncd <- 0; data_LN6$data$truncd <- 0
data_N6$data$priormu[4] <- 0; data_N6$data$priorSigma[4,4] <- 1
data_LN6$data$priormu[4] <- 0; data_LN6$data$priorSigma[4,4] <- 1
data_N6$start$par4 <- 0; data_LN6$start$par4 <- 0
prior.weights <- c(rep(1,4), rep(0,12))
FLBMD5 <- full.laplace_MA(data_N6, data_LN6, prior.weights = prior.weights)
pFLBMD5 <- plot.BMADR(FLBMD5, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD5$model_fit_N
SBMD5 <- sampling_MA(data_N6, data_LN6, prior.weights = prior.weights, nrchains = 5, nriterations = 5000)
pSBMD5 <- plot.BMADR(SBMD5, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD5$model_fit_N
round(SBMD5$E4_N, 4)
round(FLBMD5$E4_N, 4)
pFLBMD5$model_fit_N
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
packageVersion('BMABMDR')
## Huang 2015 apoptotic cells data
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/apoptotic cell_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$apoptotic_cell_., s = data$SD, n = data$animals.n.)
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
prior.weights = c(rep(1,4), rep(0,12))
q = 0.2
pvec = c(0.05,0.5,0.95)
curve(dlnorm(x, meanlog = 1, sdlog = 1), from = 0, to = 5, ylim = c(0,3)) # default
plnorm(0.5, meanlog = 1, sdlog = 1) # prob of values below 0.5
# options with median = 1
curve(dlnorm(x, meanlog = 0, sdlog = 0.5), from = 0, to = 5, add = T, col = 'red')
plnorm(0.5, meanlog = 0, sdlog = 0.5)
curve(dlnorm(x, meanlog = 0, sdlog = 1), from = 0, to = 5, add = T, col = 'green')
plnorm(0.5, meanlog = 0, sdlog = 1)
curve(dlnorm(x, meanlog = 0, sdlog = sqrt(0.5)), from = 0, to = 5, add = T, col = 'orange')
plnorm(0.5, meanlog = 0, sdlog = sqrt(0.5))
curve(dlnorm(x, meanlog = 0, sdlog = sqrt(-log(0.5))), from = 0, to = 5, add = T, col = 'blue') # modus = 0.5
plnorm(0.5, meanlog = 0, sdlog = sqrt(-log(0.5)))
abline(v = 1, lty = 2, col = 'grey')
abline(v = 0.5, lty = 2)
abline(v = 0.2, lty = 3)
legend('topright', c('N(1,1)','N(0,0.5)','N(0,1)','N(0,sqrt(0.5)','N(0,sqrt(-log(0.5))'), col = c('black','red','green','orange','blue'), lty = rep(1,5))
curve(dlnorm(x, meanlog = 1, sdlog = 1), from = 0, to = 5, ylim = c(0,1)) # default
plnorm(0.5, meanlog = 1, sdlog = 1) # prob of values below 0.5
# options with median = 1
curve(dlnorm(x, meanlog = 0, sdlog = 0.5), from = 0, to = 5, add = T, col = 'red')
plnorm(0.5, meanlog = 0, sdlog = 0.5)
curve(dlnorm(x, meanlog = 0, sdlog = 1), from = 0, to = 5, add = T, col = 'green')
plnorm(0.5, meanlog = 0, sdlog = 1)
curve(dlnorm(x, meanlog = 0, sdlog = sqrt(0.5)), from = 0, to = 5, add = T, col = 'orange')
plnorm(0.5, meanlog = 0, sdlog = sqrt(0.5))
curve(dlnorm(x, meanlog = 0, sdlog = sqrt(-log(0.5))), from = 0, to = 5, add = T, col = 'blue') # modus = 0.5
plnorm(0.5, meanlog = 0, sdlog = sqrt(-log(0.5)))
abline(v = 1, lty = 2, col = 'grey')
abline(v = 0.5, lty = 2)
abline(v = 0.2, lty = 3)
legend('topright', c('N(1,1)','N(0,0.5)','N(0,1)','N(0,sqrt(0.5)','N(0,sqrt(-log(0.5))'), col = c('black','red','green','orange','blue'), lty = rep(1,5))
summ.data
summ.data$n=20
summ.data
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
summ.data$n=50
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
plot_prior(SBMD_or, data_N$data, 'E4_N')
round(SBMD_or, 4)
round(SBMD_or$E4_N, 4)
pSBMD_or$weights
SBMD_or$MA_bridge_sampling
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
pSBMD_or$model_fit_LN
pSBMD_or$weights
FLBMD_or <- full.laplace_MA(data_N, data_LN, prior.weights = prior.weights)
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
# pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD_or$model_fit_N
pFLBMD_or$weights
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/epitelium thickness_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$epitelium_thickness_., s = data$SD, n = data$animals.n.)
summ.data
summ.data$n = 50
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
q = 0.2
pvec = c(0.05,0.5,0.95)
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD_or <- full.laplace_MA(data_N, data_LN, prior.weights = prior.weights)
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
# q = 0.2
q = 0.05
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
# pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD_or$model_fit_N
pFLBMD_or$model_fit_LN
pFLBMD_or$weights
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
summ.data$n=20
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD_or <- full.laplace_MA(data_N, data_LN, prior.weights = prior.weights)
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
# pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD_or$model_fit_N
pFLBMD_or$model_fit_LN
pFLBMD_or$weights
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
pSBMD_or$model_fit_LN
pSBMD_or$weights
sqrt(0.5)
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
packageVersion('BMABMDR')
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/epitelium thickness_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$epitelium_thickness_., s = data$SD, n = data$animals.n.)
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
# q = 0.2
q = 0.05
pvec = c(0.05,0.5,0.95)
ndr=30000
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD <- full.laplace_MA(data_N2, data_LN2, prior.weights = prior.weights)
pFLBMD <- plot.BMADR(FLBMD, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
data_N2 <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN2 <- PREP_DATA_LN(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD <- full.laplace_MA(data_N2, data_LN2, prior.weights = prior.weights)
pFLBMD <- plot.BMADR(FLBMD, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
## Huang 2015 apoptotic cells data
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/apoptotic cell_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$apoptotic_cell_., s = data$SD, n = data$animals.n.)
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
q = 0.2
pvec = c(0.05,0.5,0.95)
data_N2 <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN2 <- PREP_DATA_LN(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD <- full.laplace_MA(data_N2, data_LN2, prior.weights = prior.weights)
pFLBMD <- plot.BMADR(FLBMD, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
SBMD <- sampling_MA(data_N2, data_LN2, prior.weights = prior.weights, ndraws = ndr, nrchains = nrch, nriterations = 5000, warmup = wu,
delta = dl, treedepth = trd, seed = 123)
pSBMD <- plot.BMADR(SBMD, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD$model_fit_N
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
packageVersion('BMABMDR')
## Huang 2015 apoptotic cells data
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/apoptotic cell_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$apoptotic_cell_., s = data$SD, n = data$animals.n.)
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
q = 0.2
pvec = c(0.05,0.5,0.95)
data_N2 <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F)#, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
data_N2 <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN2 <- PREP_DATA_LN(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
SBMD <- sampling_MA(data_N2, data_LN2, prior.weights = prior.weights, ndraws = ndr, nrchains = nrch, nriterations = 5000, warmup = wu,
delta = dl, treedepth = trd, seed = 123)
pSBMD <- plot.BMADR(SBMD, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD$model_fit_N
pSBMD$model_fit_LN
data_N2 <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5,
prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN2 <- PREP_DATA_LN(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5,
prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD <- full.laplace_MA(data_N2, data_LN2, prior.weights = prior.weights)
pFLBMD <- plot.BMADR(FLBMD, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
SBMD <- sampling_MA(data_N2, data_LN2, prior.weights = prior.weights, ndraws = ndr, nrchains = nrch, nriterations = 5000, warmup = wu,
delta = dl, treedepth = trd, seed = 123)
pSBMD <- plot.BMADR(SBMD, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD$model_fit_N
pSBMD$model_fit_LN
data_N2 <- PREP_DATA_N(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 1, d.std = 1, d.trunc = 5,
prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN2 <- PREP_DATA_LN(summ.data, q = q, prior.d = 'custom', extended = F, d.mean = 1, d.std = 1, d.trunc = 5,
prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD <- full.laplace_MA(data_N2, data_LN2, prior.weights = prior.weights)
pFLBMD <- plot.BMADR(FLBMD, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
SBMD <- sampling_MA(data_N2, data_LN2, prior.weights = prior.weights, ndraws = ndr, nrchains = nrch, nriterations = 5000, warmup = wu,
delta = dl, treedepth = trd, seed = 123)
pSBMD <- plot.BMADR(SBMD, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD$model_fit_N
pSBMD$model_fit_LN
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/resorption rate_Tallness_2005.txt', header = T); data
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/resorption rate_Tallness_2005.txt', header = T); data
?read.table
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/resorption rate_Tallness_2005.txt', header = T, sep='\t'); data
summ.data <- data.frame(x = data$BDE.99.dose.mg.kg.bw, y = data$resorption.rate.., n = data$animals)
plot(summ.data$x, summ.data$m)
plot(summ.data$x, summ.data$y/summ.data$n)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior.weights = c(rep(1,4), rep(0,12))
prior.weights = rep(1,16)
# q = 0.2
# q = 0.05
q = 0.1
pvec = c(0.05,0.5,0.95)
# prior.weights = c(rep(1,4), rep(0,12))
# prior.weights = rep(1,16)
prior.weights = rep(1,8)
# q = 0.2
# q = 0.05
q = 0.1
pvec = c(0.05,0.5,0.95)
data_Q <- PREP_DATA_QA(summ.data, q, prior.d = 'N11', extended = T)
summ.data
data_Q <- PREP_DATA_QA(summ.data, q=q, prior.d = 'N11', extended = T)
FLBMD_Q <- full.laplaceQ_MA(data_Q, prior.weights)
pFLBMD_Q <- plot.BMADRQ(FLBMD_Q, 'LP', title = '')
pFLBMD_Q$model_fit
pFLBMD_Q$MA_fit
SBMD_Q <- samplingQ_MA(data_Q prior.weights)
SBMD_Q <- samplingQ_MA(data_Q, prior.weights)
SBMD_Q$MA_bridge_sampling
pSBMD_Q <- plot.BMADRQ(SBMD_Q, 'BS', title = '')
pSBMD_Q$model_fit
data_Q <- PREP_DATA_QA(summ.data, q=q, prior.d = 'N11', extended = F)
FLBMD_Q <- full.laplaceQ_MA(data_Q, prior.weights)
pFLBMD_Q <- plot.BMADRQ(FLBMD_Q, 'LP', title = '')
pFLBMD_Q$model_fit
SBMD_Q <- samplingQ_MA(data_Q, prior.weights)
pSBMD_Q <- plot.BMADRQ(SBMD_Q, 'BS', title = '')
pSBMD_Q$model_fit
data_Q <- PREP_DATA_QA(summ.data, q=q, prior.d = 'custom', extended = F, mean.d=0)
data_Q <- PREP_DATA_QA(summ.data, q=q, prior.d = 'custom', extended = F)
data_Q <- PREP_DATA_QA(summ.data, q=q, prior.d = 'custom', extended = F, d.mean = 0, d.std = 1, d.trunc = 5)
FLBMD_Q <- full.laplaceQ_MA(data_Q, prior.weights)
pFLBMD_Q <- plot.BMADRQ(FLBMD_Q, 'LP', title = '')
pFLBMD_Q$model_fit
pFLBMD_Q$MA_fit
FLBMD_Q$MA
round(FLBMD_Q$E4_Q)
round(FLBMD_Q$E4_Q,4)
SBMD_Q <- samplingQ_MA(data_Q, prior.weights)
pSBMD_Q <- plot.BMADRQ(SBMD_Q, 'BS', title = '')
pSBMD_Q$model_fit
SBMD_Q$E4_Q
SBMD_Q$MA_bridge_sampling
data_Q <- PREP_DATA_QA(summ.data, q=q, prior.d = 'custom', extended = F, d.mean = log(0.5), d.std = 1, d.trunc = 0)
FLBMD_Q <- full.laplaceQ_MA(data_Q, prior.weights)
pFLBMD_Q <- plot.BMADRQ(FLBMD_Q, 'LP', title = '')
pFLBMD_Q$model_fit
FLBMD_Q$E4_Q
FLBMD_Q$MA
0.0001406
SBMD_Q <- samplingQ_MA(data_Q, prior.weights)
pSBMD_Q <- plot.BMADRQ(SBMD_Q, 'BS', title = '')
pSBMD_Q$model_fit
