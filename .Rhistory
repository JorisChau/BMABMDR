cfg["population.maxevents"]<-cfg$population.simtime*cfg$population.nummen*cfg$population.numwomen*4 #If 4 events happen per person per year, something's wrong.
cfg["population.eyecap.fraction"]<-0.2 # specifies with how many persons of the opposite sex (who are sexually active), specified as a fraction, someone can possibly have relationships
## Person attributes
# condom use
cfg["person.condomuse.dist.type"] <- 'fixed'
cfg["person.condomuse.concordancefactor"] <- 1
cfg["person.condomuse.artfactor"] <- 0.5
cfg["person.condomuse.prepfactor"] <- 0.5
# sexual role
cfg["person.sexualrole.dist.type"] <- 'discrete.inline'
# preferred age gap
cfg["person.agegap.man.dist.type"] <- 'fixed' # default 0
cfg["person.agegap.woman.dist.type"] <- 'fixed'
cfg["person.agegap.man.msm.dist.type"] <- 'fixed'
# eagerness to form a relationship
cfg["person.eagerness.man.type"] <- 'independent' # or 'joint'
# cfg["person.eagerness.man.joint.dist2d.type"] <- 'binormalsymm'
# eag.mean <- runif(1, 15, 100); eag.rho <- runif(1, -1, 1); eag.sig <- runif(1, 0, 50)
# cfg["person.eagerness.man.joint.dist2d.binormalsymm.mean"] <- eag.mean
# cfg["person.eagerness.man.joint.dist2d.binormalsymm.rho"] <- 0.8
# cfg["person.eagerness.man.joint.dist2d.binormalsymm.sigma"] <- eag.sig
## Relationship formation
# MSM
cfg["formationmsm.hazard.type"] <- 'simple'
cfg["formationmsm.hazard.simple.alpha_0"] <- 1.3
cfg["formationmsm.hazard.simple.alpha_7"] <- log(0.2)
cfg["formation.hazard.type"] <- 'simple'
cfg["formation.hazard.simple.alpha_0"] <- 2.8
# heterosexual
cfg["formation.hazard.type"] <- 'simple'
## PrEP (include eligibility !! Acceptance will be high among those eligible)
cfg["person.prep.accept.threshold.dist.type"] <- 'fixed'
cfg["person.prep.accept.threshold.dist.fixed.value"] <- 0.1 # default 0.3
cfg["prepoffered.baseline"] <- 0
cfg["prepoffered.beta"] <- 0
cfg["prepoffered.t_max"] <- 200
cfg["prepscreening.interval.dist.type"] <- 'fixed'
cfg["prepscreening.interval.dist.fixed.value"] <- 0.25 # HIV/STI screening every 3 months
## ART
cfg["person.art.accept.threshold.dist.type"] <- 'fixed'
cfg["person.art.accept.threshold.dist.fixed.value"] <- 0.9 # 90% of accepting ART when eligible; default 0.5
## CD4 count
cfg["person.cd4.start.dist.type"] <- 'uniform' # default U(700, 1300); at time of infection
cfg["person.cd4.end.dist.type"] <- 'uniform' # default U(0, 100); at time of AIDS death
## Viral load for initial 'seed' and SPVL inheritability (defaults)
# SPVL values are picked from this distribution on a base 10 logarithmic scale
cfg["person.vsp.model.type"] <- 'logdist2d'
cfg["person.vsp.model.logdist2d.dist2d.type"] <- 'binormalsymm'
cfg["person.vsp.model.logdist2d.dist2d.binormalsymm.mean"]<- 4 #parameter SA Wim
cfg["person.vsp.model.logdist2d.dist2d.binormalsymm.rho"]<- 0.33 #parameter SA Wim
cfg["person.vsp.model.logdist2d.dist2d.binormalsymm.sigma"]<- 1 #parameter SA Wim
cfg["person.vsp.model.logdist2d.dist2d.binormalsymm.min"]<- 1 #parameter SA Wim
cfg["person.vsp.model.logdist2d.dist2d.binormalsymm.max"]<- 8 #parameter SA Wim
cfg["person.vsp.model.logdist2d.usealternativeseeddist"] <- 'no'
## HIV transmission
# cfg["person.hiv.b0.dist.type"] <- 'fixed' # default value 0; this param allows transmission to depend more on susceptibility for both infections
# cfg["person.hiv.b1.dist.type"] <- 'fixed' # default value 0; this param allows transmission to depend more on susceptibility for HIV only
cfg["hivtransmission.param.d1"] <- 0 # weight of number of partners of infectious person
cfg["hivtransmission.param.d2"] <- 0 # weight of number of partners of susceptible person
cfg["hivtransmission.param.e1"] <- 0 # influence of co-infection in infectious person
cfg["hivtransmission.param.e2"] <- 0 # influence of co-infection in susceptible person
cfg["hivtransmission.param.f1"] <- 0 # influence of woman's age on susceptibility
cfg["hivtransmission.param.f2"] <- 0 # influence of woman's age on susceptibility
cfg["hivtransmission.param.g1"] <- 0 # set to 1 to include influence of individual susceptibility to HIV and HSV2
cfg["hivtransmission.param.g2"] <- 0 # set to 1 to include influence of individual susceptibility to HIV only
cfg["hivtransmission.param.h1"] <- 0 # influence of condom use of infectious person
cfg["hivtransmission.param.h2"] <- 0 # influence of condom use of susceptible person
cfg["hivtransmission.param.i"] <- 0 # influence of PrEP use of susceptbile person
cfg["hivtransmission.maxageref.diff"] <- 1
## STI transmission
cfg["gonorrheatransmission.hazard.a"] <- 0
cfg["gonorrheatransmission.hazard.b"] <- 0
cfg["gonorrheatransmission.hazard.t_max"] <- 200
## HIV disease parameters
cfg["mortality.aids.survtime.C"]<-65 #results in survival time of 10-11 years for AIDS (default 1325.0)
cfg["mortality.aids.survtime.k"]<- -0.2 #results in survival time of 10-11 years for AIDS (default -0.49)
cfg["person.survtime.logoffset.dist.type"]<-"normal" # offset to the survival time that differs per person (instead of exact mapping from VL to survival time)
cfg["person.survtime.logoffset.dist.normal.mu"]<-0
cfg["person.survtime.logoffset.dist.normal.sigma"]<-0.1
# Disease progression
cfg["chronicstage.acutestagetime"] <- 0.25 # default 3 months (duration acute stage)
cfg["aidsstage.start"] <- 1.25 # default 15 months before AIDS mortality
cfg["aidsstage.final"] <- 0.5 # default 6 months before AIDS mortality
# Viral load progression (defaults)
cfg["person.vsp.toacute.x"] <- 10 # increase in transmission hazard during acute stage
cfg["person.vsp.toaids.x"] <- 7 # increase in transmission hazard during initial aids stage
cfg["person.vsp.tofinalaids.x"] <- 12 # increase in transmission hazard during final aids stage --> redundant?? (not sexually active)
cfg["person.vsp.maxvalue"] <- 1e9
# "The viral load during the other stages is based on the set point viral load:",
# "   V = [ max(ln(x)/b + Vsp^(-c), maxvalue^(-c)) ]^(-1/c)",
# "The b and c parameters are specified in the parameters from the transmission",
# "event."
## STI disease parameters
cfg["gonorrheaprogression.symptomaticinfectionduration.dist.type"] <- 'fixed'
cfg["gonorrheaprogression.symptomaticinfectionduration.dist.fixed.value"] <- 1
cfg["gonorrheaprogression.asymptomaticinfectionduration.dist.type"] <- 'fixed'
cfg["gonorrheaprogression.asymptomaticinfectionduration.dist.fixed.value"] <- 0.5
cfg["person.gonorrhea.fractionmensymptomatic"] <- 0.9
cfg["person.gonorrhea.fractionwomensymptomatic"] <- 0.2
## HIV seeding
cfg['hivseed.time'] <- 0
cfg['hivseed.type'] <- 'fraction'
cfg['hivseed.fraction'] <- 0.05
cfg['hivseed.fractionchronic'] <- 1
cfg['hivseed.fractionaids'] <- 0
cfg['hivseed.fractionfinalaids'] <- 0
cfg['hivseed.fractiondiagnosed'] <- 0.5
## STI seeding ??
## HIV diagnosis
cfg["diagnosis.baseline"] <- 0
# healthseeking propensity
cfg["person.healthseekingpropensity.dist.type"] <- 'fixed'
cfg["person.healthseekingpropensity.dist.fixed.value"] <- 0.1 # meaning ?? (higher value = higher final popSize = less AIDS-deaths? = more people treated?)
#################################################
### RUN SIMULATION
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
exp(0.5)
## HIV diagnosis
cfg["diagnosis.baseline"] <- 0.5
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
0.2**0.7
(-2)**0.7
exp(-2)
exp(-2)**0.7
exp(-2)
log(0.7)
0.2**log(0.7)
0.3**log(0.7)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
?lsit
?list
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
?simpact.run
${SIMPACT_OUTPUT_PREFIX}
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
Sys.setenv(PATH=paste("C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Debug;C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Release",Sys.getenv("PATH"),sep=";"))
Sys.setenv(PYTHONPATH="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\python")
Sys.setenv(SIMPACT_DATA_DIR="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\data\\")
library("RSimpactCyan")
simpact.available()
setwd("G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/SIMPACT/")
source("readthedata.R")
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
source("G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/functions_simpact_output.R")
alive(30)
??sqldf
library(sqldf)
alive(30)
datalist<-readthedata(res)
p <- datalist$ptable # unique persons
r <- datalist$rtable # relationships
t <- datalist$ttable
e <- datalist$etable # events
vl <- datalist$vltable
alive(30)
# persons alive and infected at time t
inf<-infected(37)
inf
# persons alive at evaltime x and infected before evaltime y
alinf<-aliveandinfected(inf,al)
# persons alive at time t
al<-alive(30)
# persons infected before time t
inf<-infected(37)
# persons alive at evaltime x and infected before evaltime y
alinf<-aliveandinfected(inf,al)
# values for VL for the period before time t
VLstudy<-VLstudyperiod(37)
v <- datalist$vltable
# values for VL for the period before time t
VLstudy<-VLstudyperiod(37)
#transmissions between 01/01/2000 and 31/12/2006
transm<-e[which(e$eventname=="transmission" & e$eventtime >= 30 & e$eventtime < 37),]
d3<-dim(transm)[1]
d3
transm
head(e)
colnames(e) <- c("eventtime", "eventname", "p1name", "p1ID", "p1gender",
#              "p1age", "p2name", "p2ID", "p2gender", "p2age")
colnames(e) <- c("eventtime", "eventname", "p1name", "p1ID", "p1gender","p1age", "p2name", "p2ID", "p2gender", "p2age")
)
colnames(e) <- c("eventtime", "eventname", "p1name", "p1ID", "p1gender","p1age", "p2name", "p2ID", "p2gender", "p2age")
#transmissions between 01/01/2000 and 31/12/2006
transm<-e[which(e$eventname=="transmission" & e$eventtime >= 30 & e$eventtime < 37),]
d3<-dim(transm)[1]
d3
table(e$eventname)
e$eventname[1:30]
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
datalist<-readthedata(res)
p <- datalist$ptable # unique persons
r <- datalist$rtable # relationships
t <- datalist$ttable
e <- datalist$etable # events
colnames(e) <- c("eventtime", "eventname", "p1name", "p1ID", "p1gender","p1age", "p2name", "p2ID", "p2gender", "p2age")
v <- datalist$vltable
#transmissions between 01/01/2000 and 31/12/2006
transm<-e[which(e$eventname=="transmission" & e$eventtime >= 30 & e$eventtime < 37),]
d3<-dim(transm)[1]
d3
### HIV infections (+ alive?)
# sum(p$InfectTime != 'Inf' & p$InfectTime != 0 & p$AIDSDeath == -1)
# sum(p$InfectTime == 'Inf' & p$AIDSDeath == -1)
#
# p$HIV <- ifelse(p$InfectTime == 'Inf', 0, 1)
# table(p$HIV, p$MSM)
table(p$InfectType) # 0 = seed, 1 = partner, 2 = mother, -1 = none
table(p$InfectType, p$MSM)
sum(e$eventname=='transmission')
e[e$eventname=='transmission',]
Sys.setenv(PATH=paste("C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Debug;C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Release",Sys.getenv("PATH"),sep=";"))
Sys.setenv(PYTHONPATH="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\python")
Sys.setenv(SIMPACT_DATA_DIR="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\data\\")
library("RSimpactCyan")
simpact.available()
setwd("G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/SIMPACT/")
source("readthedata.R")
library(sqldf)
source("G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/functions_simpact_output.R")
#################################################
### READ CONFIGURATION FILE
source('G:/My Drive/UHasselt/PhD/HIV/SIALON II/KBF_SialonII/simpact_test_cfg.R')
res <- simpact.run(cfg, destDir = "G:\\My Drive\\UHasselt\\PhD\\HIV\\SIALON II\\KBF_SialonII\\SIMPACT\\output_sim",
identifierFormat = "%T-%y%m%d_%p_%r%r%r%r"
)
datalist<-readthedata(res)
p <- datalist$ptable # unique persons
r <- datalist$rtable # relationships
t <- datalist$ttable
e <- datalist$etable # events
colnames(e) <- c("eventtime", "eventname", "p1name", "p1ID", "p1gender","p1age", "p2name", "p2ID", "p2gender", "p2age")
v <- datalist$vltable
# persons alive at time t
al<-alive(30)
# persons infected before time t
inf<-infected(37)
# persons alive at evaltime x and infected before evaltime y
alinf<-aliveandinfected(inf,al)
# values for VL for the period before time t
VLstudy<-VLstudyperiod(37)
dim(p); head(p)
summary(p$FormEagMSM); summary(p$FormEag)
dim(r); head(r)
table(r$MSM)/sum(table(r$MSM))
# Add indicator for MSM (1 = MSMO, 2 = MSMW, 3 = hetero)
p$MSM <- NA
# t$MSM <- NA
for(id in p$ID){
if(p$Gender[p$ID == id] == 1){ # Women
p$MSM[p$ID == id] <- 3
}else if(p$Gender[p$ID == id] == 0){ # Men
if(id %in% r$ID1[r$MSM == 1] | id %in% r$ID2[r$MSM == 1]){
p$MSM[p$ID == id] <- 1
# if also in hetero relationship
if(id %in% r$ID1[r$MSM == 0] | id %in% r$ID2[r$MSM == 0]){
p$MSM[p$ID == id] <- 2
}
}else{
p$MSM[p$ID == id] <- 3
}
}
}
table(p$MSM)/sum(table(p$MSM))
table(p$MSM,p$Gender)
c(
# eag.mean, eag.rho, eag.sig,
sum(r$MSM==1)/dim(r)[1], # prop of rels that are MSM
sum(p$MSM==1)/dim(p)[1], # prop MSMO
sum(p$MSM==2)/dim(p)[1], # prop MSMW
sum(p$MSM==3)/dim(p)[1] # prop hetero
)
### HIV infections (+ alive?)
# sum(p$InfectTime != 'Inf' & p$InfectTime != 0 & p$AIDSDeath == -1)
# sum(p$InfectTime == 'Inf' & p$AIDSDeath == -1)
#
# p$HIV <- ifelse(p$InfectTime == 'Inf', 0, 1)
# table(p$HIV, p$MSM)
table(p$InfectType) # 0 = seed, 1 = partner, 2 = mother, -1 = none
table(p$InfectType, p$MSM)
#transmissions between 01/01/2000 and 31/12/2006
transm<-e[which(e$eventname=="transmission" & e$eventtime >= 30 & e$eventtime < 37),]
d3<-dim(transm)[1]
d3
### Events
table(e$V2)
### Events
table(e$eventname)
### Viral loads / HIV infection stage + ART start/dropout
head(vl); dim(vl)
table(vl$Desc)
### Viral loads / HIV infection stage + ART start/dropout
head(v); dim(v)
table(v$Desc)
### Degree distributions
x <- 41 #2011
rels1 <- relsandconcur1(x)
rels2 <- relsandconcur2(x)
rels1and2 <- data.frame(ID=c(rels1$ID1, rels2$ID2), rbind(rels1[,-1], rels2[,-1]))
al <- alive(x)
degree <- relsandpop(rels1and2, al)
no_partners<-100*sum(is.na(degree$rels))/dim(degree)[1]
one_partner<-100*length(which(degree$rels==1))/dim(degree)[1]
two_three_partners<-100*length(which(degree$rels>=2 & degree$rels<=3))/dim(degree)[1]
four_five_partners<-100*length(which(degree$rels>=4 & degree$rels<=5))/dim(degree)[1]
six_ten_partners<-100*length(which(degree$rels>=6 & degree$rels<=10))/dim(degree)[1]
more_than_ten_partners<-100*length(which(degree$rels>10))/dim(degree)[1]
no_partners
one_partner
two_three_partners
four_five_partners
six_ten_partners
more_than_ten_partners
degree_dist <- c(no_partners, one_partner, two_three_partners, four_five_partners, six_ten_partners, more_than_ten_partners)
sum(degree_dist)
hist(degree_dist)
hist(degree_dist, breaks = 10)
head(rels)
head(rels1)
head(rels2)
head(rels1and2)
head(r)
head(degree)
hist(degree$rels)
hist(degree$rels, breaks = 7)
hist(degree$rels, breaks = 7, freq = F)
library(devtools)
install_github("wdelva/RSimpactHelp”, dependencies = TRUE)
install_github("wdelva/RSimpactHelp", dependencies = TRUE)
install_github("wdelva/RSimpactHelp", dependencies = TRUE)
install.packages("readcsvcolumns", repos="http://R-Forge.R-project.org")
source('RSimpactHelperFunctions.R')
ART.coverage.calculator(datalist)
source('RSimpactHelperFunctions.R')
ART.coverage.calculator(datalist)
library(dplyr)
install.packages('vctrs')
install.packages("vctrs")
library(dplyr)
source('RSimpactHelperFunctions.R')
ART.coverage.calculator(datalist)
e$eventname[1:50]
e$eventname[200]
e$eventname[200:300]
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
Sys.getenv("PATH")
## Compile package and generate the documentation
rstan_config() # recompile stan models
## Compile package and generate the documentation
rstan_config() # recompile stan models
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
.Last.error
Sys.getenv('PATH')
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
Sys.getenv("PATH")
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
install.packages('forcats')
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages('stringi')
roxygen2::roxygenize()
roxygen2::roxygenize()
install.packages("stringi")
install.packages("stringi")
roxygen2::roxygenize()
warnings()
# devtools::reload()
# devtools::check()
devtools::build() # build source package
Sys.getenv('BINPREF')
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
Sys.setenv(PATH=paste("C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Debug;C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Release",Sys.getenv("PATH"),sep=";"))
Sys.setenv(PYTHONPATH="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\python")
Sys.setenv(SIMPACT_DATA_DIR="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\data\\")
library("RSimpactCyan")
source("https://raw.githubusercontent.com/j0r1/RSimpactCyanBootstrap/master/initsimpact.R")
install.packages("RSimpactCyan")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
Sys.setenv(BINPREF = "C:\\rtools40\\mingw64\\bin")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
Sys.setenv(BINPREF = "C:\\rtools40\\mingw64\\bin\\")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
Sys.setenv(BINPREF = "C:/rtools40/mingw32/bin/;C:/rtools40/mingw64/bin/")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
Sys.getenv('BINPREF')
Sys.getenv('PATH')
Sys.getenv('BINPREF')
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/;")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
system("uname -m")
str(.Platform)
Sys.info()[["machine"]]
system("arch")
system("uname -m")
sessionInfo()
cat('Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
Sys.getenv('BINPREF')
Sys.getenv('PATH')
Sys.getenv('HOME')
Sys.setenv(PATH = "C:/rtools40/usr/bin/;")
Sys.getenv('PATH')
Sys.setenv(PATH = "C:\\rtools40\\usr\\bin\\;")
install.packages("rPithon", repos="http://research.edm.uhasselt.be/jori")
install.packages("RSimpactCyan", repos="http://research.edm.uhasselt.be/jori")
Sys.setenv(PATH=paste("C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Debug;C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\build\\Release",Sys.getenv("PATH"),sep=";"))
Sys.setenv(PYTHONPATH="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\python")
Sys.setenv(SIMPACT_DATA_DIR="C:\\Users\\lucp9385\\Documents\\simpactcyan-master\\data\\")
library("RSimpactCyan")
simpact.available()
Sys.getenv('PATH')
