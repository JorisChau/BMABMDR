names(md_cls) <-  c("E4", "IE4", "H4",
"LN4", "G4", "QE4",
"P4", "L4")
mod_names = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
"QuadExp", "Probit", "Logistic")
names(mod_names) = c("E4", "IE4", "H4",
"LN4", "G4", "QE4",
"P4", "L4")
dist_names = c("LogNormal","Normal")
names(dist_names) = c("LN","N")
if(min(mod.obj$dataN$dose) == 0){
plot.labs = dose*mod.obj$max.dose
}else{
plot.labs = c(0, dose*mod.obj$max.dose)
}
if(weight_type == 'BS' && conv == TRUE){
names(mod.obj$convergence) <- unname(get_models('continuous'))
converged.mods <- names(mod.obj$convergence[mod.obj$convergence==1])
mod.obj$models_included <- mod.obj$models_included[which(mod.obj$models_included %in% converged.mods)]
}
## plot
if(clustered == F){
ymin = 10^min(mod.obj$dataN$lg10m - 2*mod.obj$dataN$lg10s, na.rm=T)
ymax = 10^max(mod.obj$dataN$lg10m + 2*mod.obj$dataN$lg10s, na.rm=T)
# plot for Normal distribution
pplotN <- ggplot(data = preds2[preds2$Distribution=="N" & paste0(preds2$Model,"_N") %in% mod.obj$models_included,],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = Model,
color = Model)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE, linetype = 1) +
labs(color = "Model", x = expression(dose),
y = expression(response), title = "Normal distribution",
caption = "data and vertical bars based on arithmetic sample means +- standard deviation \n red dot and horizontal green bar indicate the model-averaged BMD and its 95%CI") +
geom_segment(data = preds_min[preds_min$Distribution=="N",],
mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose),#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbar(data = orig_ptdataN,
mapping = aes(x = dose2*mod.obj$max.dose, ymin = m-sd,
ymax = m+sd),
width = NA, position = pd, size = 1,
inherit.aes = FALSE) +
geom_point(data = orig_ptdataN, mapping = aes(x = dose2*mod.obj$max.dose, y = m) ,
size = 2, color = 1, shape = 21,
fill = brewer.pal(9, "Set1")[2],
inherit.aes = FALSE) +
# geom_jitter(data = orig_ptdata, mapping = aes(x = dose2*mod.obj$max.dose, y = m) ,
#              size = 2, color = 1, shape = 21,
#              fill = brewer.pal(9, "Set1")[2], position = position_jitter(h = 0.01, width = 0),
#              inherit.aes = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
# scale_linetype_manual(values = lty,
# labels = c('LogNormal', 'Normal')) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
if(log == F){
pplotN <- pplotN + scale_y_continuous(trans = 'identity', labels = scales::comma)
}else{
pplotN <- pplotN + scale_y_continuous(trans = 'log10', labels = scales::comma)
}
ymin = 10^min(mod.obj$dataLN$lg10m - 2*mod.obj$dataLN$lg10s, na.rm=T)
ymax = 10^max(mod.obj$dataLN$lg10m + 2*mod.obj$dataLN$lg10s, na.rm=T)
# plot for LogNormal distribution
pplotLN <- ggplot(data = preds2[preds2$Distribution=="LN" & paste0(preds2$Model,"_LN") %in% mod.obj$models_included,],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = Model,
color = Model)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE, linetype = 2) +
labs(color = "Model", title = "LogNormal distribution", x = expression(dose),
y = expression(response),
caption = "data and vertical bars based on geometric sample means +- standard deviation \n red dot and horizontal green bar indicate the model-averaged BMD and its 95%CI") +
geom_segment(data = preds_min[preds_min$Distribution=="LN",],
mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbar(data = orig_ptdataLN,
mapping = aes(x = dose2*mod.obj$max.dose, ymin = 10^(log10m-log10s),
ymax = 10^(log10m+log10s)),
width = NA, position = pd, size = 1,
inherit.aes = FALSE) +
geom_point(data = orig_ptdataLN, mapping = aes(x = dose2*mod.obj$max.dose, y = 10^log10m) ,
size = 2, color = 1, shape = 21,
fill = brewer.pal(9, "Set1")[2],
inherit.aes = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
# scale_linetype_manual(values = lty,
# labels = c('LogNormal')) +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
scale_colour_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
## Plot for both distributions
pplot <- ggplot(data = preds2[which(paste(preds2$Model, preds2$Distribution, sep = '_') %in% mod.obj$models_included),],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = interaction(Model, Distribution),
color = Model, linetype = Distribution)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE) +
labs(color = "Model", linetype = "Distribution", x = expression(dose),
y = expression(response), title = "", caption = "red dot and horizontal green bar indicate the model-averaged BMD and its 95%CI") +
geom_segment(data = preds_min, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = log10(min_response),
#                                           group = interaction(Model, Distribution),
#                                           color = Model),
#           linetype = "dotted", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
scale_linetype_manual(values = lty,
# labels = c('LogNormal', 'Normal')
labels = dist_names[names(dist_names)%in%unique(preds2$Distribution)]) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
}else if(clustered == T){
# plot for Normal distribution
pplotN <- ggplot(data = preds2[preds2$Distribution=="N" & paste0(preds2$Model,"_N") %in% mod.obj$models_included,],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = Model,
color = Model)) +
geom_line(alpha = 0.6,
linewidth = 1,
show.legend = TRUE, linetype = 1) +
labs(color = "Model", x = expression(dose),
y = expression(response), title = "Normal distribution",
caption = "green dots show the individual data, black dots represent the litter means \n diamonds represent the arithmetic sample mean \n red dot and horizontal green bar indicate the model-averaged BMD and its 95%CI") +
geom_segment(data = preds_min[preds_min$Distribution=="N",],
mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose),#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
geom_jitter(data = orig_ptdata, mapping = aes(x = dose2*mod.obj$max.dose, y = y),
size = 1, color = 3, shape = 20,
# fill = brewer.pal(9, "Set1")[2],
position = position_jitter(h = 0.01, width = 0),
inherit.aes = FALSE) +
geom_point(data = means.litter, mapping = aes(x = dose*mod.obj$max.dose, y = mresp),
size = 2, color = 1, shape = 21,
fill = 1,
inherit.aes = FALSE) +
geom_point(data = means.all, mapping = aes(x = dose*mod.obj$max.dose, y = mresp),
size = 3, color = 2, shape = 23,
fill = 2,
inherit.aes = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$response)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
if(log == F){
pplotN <- pplotN + scale_y_continuous(trans = 'identity', labels = scales::comma)
}else{
pplotN <- pplotN + scale_y_continuous(trans = 'log10', labels = scales::comma)
}
# plot for LogNormal distribution
pplotLN <- ggplot(data = preds2[preds2$Distribution=="LN" & paste0(preds2$Model,"_LN") %in% mod.obj$models_included,],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = Model,
color = Model)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE, linetype = 2) +
labs(color = "Model", title = "LogNormal distribution", x = expression(dose),
y = expression(response),
caption = "green dots show the individual data, black dots represent the litter means \n diamonds represent the geometric sample mean \n red dot and horizontal green bar indicate the model-averaged BMD and its 95%CI") +
geom_segment(data = preds_min[preds_min$Distribution=="LN",],
mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
geom_jitter(data = orig_ptdata, mapping = aes(x = dose2*mod.obj$max.dose, y = 10^log10(exp(yl))),
size = 1, color = 3, shape = 20,
# fill = brewer.pal(9, "Set1")[2],
position = position_jitter(h = 0.01, width = 0),
inherit.aes = FALSE) +
geom_point(data = means.litter, mapping = aes(x = dose*mod.obj$max.dose, y = 10^log10(exp(mlresp))),
size = 2, color = 1, shape = 21,
fill = 1,
inherit.aes = FALSE) +
geom_point(data = means.all, mapping = aes(x = dose*mod.obj$max.dose, y = 10^log10(exp(mlresp))),
size = 3, color = 2, shape = 23,
fill = 2,
inherit.aes = FALSE) +
# geom_point(data = orig_ptdata, mapping = aes(x = dose2*mod.obj$max.dose, y = 10^log10m) ,
#            size = 2, color = 1, shape = 21,
#            fill = brewer.pal(9, "Set1")[2],
#            inherit.aes = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$response)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
# scale_linetype_manual(values = lty,
# labels = c('LogNormal')) +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
## Plot for both distributions
pplot <- ggplot(data = preds2[which(paste(preds2$Model, preds2$Distribution, sep = '_') %in% mod.obj$models_included),],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = interaction(Model, Distribution),
color = Model, linetype = Distribution)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE) +
labs(color = "Model", linetype = "Distribution", x = expression(dose),
y = expression(response), title = "", caption = "red dot and horizontal green bar indicate the model-averaged BMD and its 95%CI") +
geom_segment(data = preds_min, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = log10(min_response),
#                                           group = interaction(Model, Distribution),
#                                           color = Model),
#           linetype = "dotted", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$response)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
scale_linetype_manual(values = lty,
# labels = c('LogNormal', 'Normal')
labels = dist_names[names(dist_names)%in%unique(preds2$Distribution)]) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
}
cmax <- max(preds$model_averaged$model_averaged)
cmin <- min(preds$model_averaged$model_averaged)
ylim.prim <- c(cmin, cmax)
# ylim.sec <- c(min(BMDMixture2$y2), max(BMDMixture2$y2))
ylim.sec <- c(min(BMDMixture2$y), max(BMDMixture2$y))
b <- diff(ylim.prim)/diff(ylim.sec)
a <- ylim.prim[1] - b*ylim.sec[1]
ylim.sec
# BMDMixture2$yres = a + BMDMixture2$y2*b
BMDMixture2$yres = a + BMDMixture2$y*b
dplot <- ggplot(data = preds$model_averaged, aes(x = Dose*mod.obj$max.dose, y = model_averaged,
group = 1)) +
geom_line(show.legend = FALSE, linetype = "dashed", size = 3) +
#geom_col(data = BMDMixture2, aes(x = Dose2, y = yres, fill = Model), alpha = 0.6,
#         inherit.aes = FALSE, color = NA) +
#geom_area(data = BMDMixture2,
#           aes(x = Dose, y = yres, group = Model, fill = Model),
#           color = NA, inherit.aes = FALSE, alpha = 0.5) +
#geom_histogram(data = BMDMixture,
#               aes(x = BMDMixture, fill = Model), #y = ..density..,
#               color = NA, alpha = 0.5, inherit.aes = FALSE, bins = sqrt(nrow(BMDMixture))) +
geom_ribbon(data = BMDMixture2, aes(x = Dose, y = yres, ymin = min(yres), ymax = yres, fill = Model),
color=NA, alpha = 0.5) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = lg10predicted,
#                                           group = interaction(Model, Distribution)),
#           linetype = "dashed", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE, color = 1) +
# geom_line(data = preds_min2, mapping = aes(x = Dose, y = log10MA),
#           linetype = "dotted", alpha = 1,
#           size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_segment(data = preds_min2, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = MA,
xend = max(Dose*mod.obj$max.dose),
#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = preds$model_averaged$model_averaged[1],
# group = interaction(Model, Distribution),
# color = Model
),
linetype = "dotted",
size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*mean(mod.obj$dataN$response), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE)  +
scale_y_continuous(expression(response),
sec.axis = sec_axis(#~.*1.2,
# ~ ((. /max(BMDMixture$y)) *(cmax*1.2)),
~ (. - a)/b,
name = "Rescaled Density", #trans = 'log10',
labels = scales::comma)
) +
labs(x = expression(dose)) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose),
ylim =  c(min(BMDMixture2$yres)*0.9, max(BMDMixture2$yres)*1.1)) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 15, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
# title = element_text(size = 15, face = "bold")
) +
scale_fill_manual(values = unname(mods_fills), name = NULL)#, labels = c(""))
dplot
dplot
# q = 0.2
q = 0.05
head(BMDMixture2)
yres
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
