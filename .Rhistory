## Huang 2015 apoptotic cells data
data <- read.table('C:/Users/lucp9385/Documents/BBMD/FINAL CODE/apoptotic cell_Huang_2015.txt', header = T); data
summ.data <- data.frame(x = data$BDE.47_dose.mg.Kg.d., m = data$apoptotic_cell_., s = data$SD, n = data$animals.n.)
# plot(summ.data$x, summ.data$y/summ.data$n)
plot(summ.data$x, summ.data$m)
## Sampling specifications
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
prior.weights = c(rep(1,4), rep(0,12))
q = 0.2
pvec = c(0.05,0.5,0.95)
data_N <- PREP_DATA_N(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
data_LN <- PREP_DATA_LN(summ.data, q = q, prior.d = 'N11', extended = F)#, prior.BMD = c(0,0.0005,0.001), shape.BMD = 0.0001)#, bkg = c(2,4,6))
FLBMD_or <- full.laplace_MA(data_N, data_LN, prior.weights = prior.weights)
pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'increasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
# pFLBMD_or <- plot.BMADR(FLBMD_or, type = 'decreasing', weight_type = 'LP', all = FALSE, title = '', log = FALSE)
pFLBMD_or$model_fit_N
pFLBMD_or$model_fit_LN
pFLBMD_or$weights
pFLBMD_or$MA_fit
SBMD_or <- sampling_MA(data_N, data_LN, prior.weights = prior.weights)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
pSBMD_or$model_fit_LN
pSBMD_or$weights
pSBMD_or$MA_fit
pFLBMD_or$MA_fit
summary(SBMD_or$MA_post_bs)
dplot
dplot+geom_hline(yintercept=5)
summ.data
dplot+geom_hline(yintercept=4)
dplot+geom_hline(yintercept=12)
dplot+geom_hline(yintercept=4)
dplot+geom_hline(yintercept=6)
a
b
?sec_axis
ggplot(data = preds$model_averaged, aes(x = Dose*mod.obj$max.dose, y = model_averaged,
group = 1)) +
geom_line(show.legend = FALSE, linetype = "dashed", size = 3) +
#geom_col(data = BMDMixture2, aes(x = Dose2, y = yres, fill = Model), alpha = 0.6,
#         inherit.aes = FALSE, color = NA) +
#geom_area(data = BMDMixture2,
#           aes(x = Dose, y = yres, group = Model, fill = Model),
#           color = NA, inherit.aes = FALSE, alpha = 0.5) +
#geom_histogram(data = BMDMixture,
#               aes(x = BMDMixture, fill = Model), #y = ..density..,
#               color = NA, alpha = 0.5, inherit.aes = FALSE, bins = sqrt(nrow(BMDMixture))) +
geom_ribbon(data = BMDMixture2, aes(x = Dose, y = yres, ymin = min(yres), ymax = yres, fill = Model),
color=NA, alpha = 0.5)
ggplot(data = preds$model_averaged, aes(x = Dose*mod.obj$max.dose, y = model_averaged,
group = 1)) +
geom_line(show.legend = FALSE, linetype = "dashed", size = 3) +
#geom_col(data = BMDMixture2, aes(x = Dose2, y = yres, fill = Model), alpha = 0.6,
#         inherit.aes = FALSE, color = NA) +
#geom_area(data = BMDMixture2,
#           aes(x = Dose, y = yres, group = Model, fill = Model),
#           color = NA, inherit.aes = FALSE, alpha = 0.5) +
#geom_histogram(data = BMDMixture,
#               aes(x = BMDMixture, fill = Model), #y = ..density..,
#               color = NA, alpha = 0.5, inherit.aes = FALSE, bins = sqrt(nrow(BMDMixture))) +
geom_ribbon(data = BMDMixture2, aes(x = Dose, y = yres, ymin = min(yres), ymax = yres, fill = Model),
color=NA, alpha = 0.5) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = lg10predicted,
#                                           group = interaction(Model, Distribution)),
#           linetype = "dashed", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE, color = 1) +
# geom_line(data = preds_min2, mapping = aes(x = Dose, y = log10MA),
#           linetype = "dotted", alpha = 1,
#           size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_segment(data = preds_min2, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = MA,
xend = max(Dose*mod.obj$max.dose),
#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = preds$model_averaged$model_averaged[1],
# group = interaction(Model, Distribution),
# color = Model
),
linetype = "dotted",
size = 3, inherit.aes = FALSE, show.legend = FALSE)
ggplot(data = preds$model_averaged, aes(x = Dose*mod.obj$max.dose, y = model_averaged,
group = 1)) +
geom_line(show.legend = FALSE, linetype = "dashed", size = 3) +
#geom_col(data = BMDMixture2, aes(x = Dose2, y = yres, fill = Model), alpha = 0.6,
#         inherit.aes = FALSE, color = NA) +
#geom_area(data = BMDMixture2,
#           aes(x = Dose, y = yres, group = Model, fill = Model),
#           color = NA, inherit.aes = FALSE, alpha = 0.5) +
#geom_histogram(data = BMDMixture,
#               aes(x = BMDMixture, fill = Model), #y = ..density..,
#               color = NA, alpha = 0.5, inherit.aes = FALSE, bins = sqrt(nrow(BMDMixture))) +
geom_ribbon(data = BMDMixture2, aes(x = Dose, y = yres, ymin = min(yres), ymax = yres, fill = Model),
color=NA, alpha = 0.5) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = lg10predicted,
#                                           group = interaction(Model, Distribution)),
#           linetype = "dashed", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE, color = 1) +
# geom_line(data = preds_min2, mapping = aes(x = Dose, y = log10MA),
#           linetype = "dotted", alpha = 1,
#           size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_segment(data = preds_min2, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = MA,
xend = max(Dose*mod.obj$max.dose),
#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = preds$model_averaged$model_averaged[1],
# group = interaction(Model, Distribution),
# color = Model
),
linetype = "dotted",
size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*mean(mod.obj$dataN$response), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE)
ggplot(data = preds$model_averaged, aes(x = Dose*mod.obj$max.dose, y = model_averaged,
group = 1)) +
geom_line(show.legend = FALSE, linetype = "dashed", size = 3) +
#geom_col(data = BMDMixture2, aes(x = Dose2, y = yres, fill = Model), alpha = 0.6,
#         inherit.aes = FALSE, color = NA) +
#geom_area(data = BMDMixture2,
#           aes(x = Dose, y = yres, group = Model, fill = Model),
#           color = NA, inherit.aes = FALSE, alpha = 0.5) +
#geom_histogram(data = BMDMixture,
#               aes(x = BMDMixture, fill = Model), #y = ..density..,
#               color = NA, alpha = 0.5, inherit.aes = FALSE, bins = sqrt(nrow(BMDMixture))) +
geom_ribbon(data = BMDMixture2, aes(x = Dose, y = yres, ymin = min(yres), ymax = yres, fill = Model),
color=NA, alpha = 0.5) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = lg10predicted,
#                                           group = interaction(Model, Distribution)),
#           linetype = "dashed", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE, color = 1) +
# geom_line(data = preds_min2, mapping = aes(x = Dose, y = log10MA),
#           linetype = "dotted", alpha = 1,
#           size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_segment(data = preds_min2, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = MA,
xend = max(Dose*mod.obj$max.dose),
#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = preds$model_averaged$model_averaged[1],
# group = interaction(Model, Distribution),
# color = Model
),
linetype = "dotted",
size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*mean(mod.obj$dataN$response), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE)  +
# scale_y_continuous(expression(response),
#                    sec.axis = sec_axis(#~.*1.2,
#                      # ~ ((. /max(BMDMixture$y)) *(cmax*1.2)),
#                      ~ (. - a)/b,
#                      name = "Rescaled Density", #trans = 'log10',
#                      labels = scales::comma)
# ) +
labs(x = expression(dose)) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose),
ylim =  c(min(BMDMixture2$yres)*0.9, max(BMDMixture2$yres)*1.1)) +
# coord_cartesian(xlim = c(min(mod.obj$MA_post),
#                          2*mod.obj$max.dose),
#                 ylim =  c(min(BMDMixture2$yres)*0.9, max(BMDMixture2$yres)*1.1)) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 15, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
# title = element_text(size = 15, face = "bold")
) +
scale_fill_manual(values = unname(mods_fills), name = NULL)
min(BMDMixture2$yres)*0.9
max(BMDMixture2$yres)*1.1
min(preds_min$Dose*mod.obj$max.dose)
2*mod.obj$max.dose
log10(20)
log10(40)
pSBMD_or$MA_fit
summ.data
pSBMD_or$MA_fit + geom_hline(yintercept=8.2)
pSBMD_or$MA_fit + geom_hline(yintercept=12.2)
head(BMDMixture2)
orig_ptdataN
dplot <- ggplot(data = preds$model_averaged, aes(x = Dose*mod.obj$max.dose, y = model_averaged,
group = 1)) +
geom_line(show.legend = FALSE, linetype = "dashed", size = 3) +
#geom_col(data = BMDMixture2, aes(x = Dose2, y = yres, fill = Model), alpha = 0.6,
#         inherit.aes = FALSE, color = NA) +
#geom_area(data = BMDMixture2,
#           aes(x = Dose, y = yres, group = Model, fill = Model),
#           color = NA, inherit.aes = FALSE, alpha = 0.5) +
#geom_histogram(data = BMDMixture,
#               aes(x = BMDMixture, fill = Model), #y = ..density..,
#               color = NA, alpha = 0.5, inherit.aes = FALSE, bins = sqrt(nrow(BMDMixture))) +
geom_ribbon(data = BMDMixture2, aes(x = Dose, y = yres, ymin = min(yres), ymax = yres, fill = Model),
color=NA, alpha = 0.5) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = lg10predicted,
#                                           group = interaction(Model, Distribution)),
#           linetype = "dashed", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE, color = 1) +
# geom_line(data = preds_min2, mapping = aes(x = Dose, y = log10MA),
#           linetype = "dotted", alpha = 1,
#           size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_segment(data = preds_min2, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = MA,
xend = max(Dose*mod.obj$max.dose),
#max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = preds$model_averaged$model_averaged[1],
# group = interaction(Model, Distribution),
# color = Model
),
linetype = "dotted",
size = 3, inherit.aes = FALSE, show.legend = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*mean(mod.obj$dataN$response), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD,
y = respBMD$model_averaged$model_averaged_response,#min(preds$model_averaged$model_averaged),
group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE)  +
scale_y_continuous(expression(response),
sec.axis = sec_axis(#~.*1.2,
# ~ ((. /max(BMDMixture$y)) *(cmax*1.2)),
~ (. - a)/b,
name = "Rescaled Density", #trans = 'log10',
labels = scales::comma)
) +
labs(x = expression(dose)) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose),
# ylim =  c(min(BMDMixture2$yres)*0.9, max(BMDMixture2$yres)*1.1)) +
ylim = c(orig_ptdataN$m[1]-orig_ptdataN$s[1], max(BMDMixture2$yres)*1.1)) +
# coord_cartesian(xlim = c(min(mod.obj$MA_post),
#                          2*mod.obj$max.dose),
#                 ylim =  c(min(BMDMixture2$yres)*0.9, max(BMDMixture2$yres)*1.1)) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 15, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
# title = element_text(size = 15, face = "bold")
) +
scale_fill_manual(values = unname(mods_fills), name = NULL)#, labels = c(""))
dplot
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
library(BMABMDR)
pSBMD_or <- plot.BMADR(SBMD_or, type = 'increasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
# pSBMD_or <- plot.BMADR(SBMD_or, type = 'decreasing', weight_type = 'BS', all = FALSE, title = '', conv = FALSE)
pSBMD_or$model_fit_N
pSBMD_or$model_fit_LN
pSBMD_or$weights
pSBMD_or$MA_fit
curve(dlnorm(x, meanlog = 1, sdlog = 1), from = 0, to = 5, ylim = c(0,1)) # default
dose = c(0,6.25,12.5,25,50,100)
mean = c(10.87143,10.16669,10.81050,10.41179,12.38305,18.47681)
sd = c(1.804554,1.805939,3.858265,1.626007,2.045695,2.322449)
n = rep(10,6)
summ.data = data.frame(x = dose, y = mean, s = sd, n = n)
plot(summ.data$x, summ.data$y, type = 'l')
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior model weights: example including only Normal distribution
prior.weights = c(rep(1,4), rep(0,12))
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q)
FLBMD=full.laplace_MA(data_N,
data_LN,
prior.weights,
ndraws=ndr,
seed=123,
pvec=pvec)
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# test whether best-fitting model fits wel (BF < 10 means equally well as saturated model; BF > 10 means best fit is better than saturated model)
FLBMD$bf
# output as dataframe/list
BMDWeights(FLBMD, 'continuous')
summary.BMADR(FLBMD, type = 'continuous')
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", type = 'increasing', include_data = T, all = F, title = '', log = F)
pFLBMD$BMDs
pFLBMD$weights
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
pFLBMD$model_fit
pFLBMD$MA_fit
SBMD = sampling_MA(data_N, data_LN,
prior.weights,
ndraws=ndr, nrchains=nrch,
nriterations=nriter, warmup=wu, delta=dl,
treedepth=trd, seed=sd, pvec=pvec)
# plot output
pSBMD = plot.BMADR(SBMD, weight_type = "BS", type = 'increasing', include_data = T, all = F, title = '', conv = F)
pSBMD$MA_fit
# simulated data
par = c(10.58,0.38,1.91,2)
doses <- c(0,6.25,12.5,25,50,100)/100
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
sd = 2.28
covmat2 = covmat*sd^2
q = 0.1
means = DRM.E4_NI(par, doses, q)
set.seed(34545)
sim_data = c()
for(i in 1){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
prior.weights = c(rep(1,4), rep(0,12))
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
pFLBMD <- plot.BMADR(FLBMD, 'increasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '', log = F)
pFLBMD$BMDs
pFLBMD$weights
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
pFLBMD$model_fit
pFLBMD$MA_fit
SBMD <- sampling_MAc(data_N, data_LN, prior.weights = c(1,1,rep(0,14)))
pSBMD <- plot.BMADR(SBMD, 'increasing', clustered = T, weight_type = 'BS', include_data = T, all = F, title = '', log = F, conv = F)
pSBMD$MA_fit
dose = c(0, 5, 15, 50, 100)
y = c(0, 4, 6, 5, 12)
n = c(20, 20, 20, 20, 20)
summ.data = data.frame(x = dose, y = y, n = n)
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior model weights
prior.weights = rep(1,8)
# prior model weights
prior.weights = c(rep(1,4), rep(0,4))
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_Q = PREP_DATA_QA(summ.data,
sumstats = T,
q = q)
FLBMD_Q = full.laplaceQ_MA(data_Q,
prior.weights,
ndraws=ndr,
seed=123,
pvec=pvec)
# plot output
pFLBMD_Q = plot.BMADRQ(FLBMD_Q, weight_type = "LP", include_data = T, all = F, title = '')
pFLBMD_Q$BMDs
pFLBMD_Q$weights
pFLBMD_Q$model_fit
pFLBMD_Q$MA_fit
clusterdata <- data.frame(
dose = c(rep(c(0, 0.2, 0.6, 6, 60, 120), c(26, 22, 24, 26, 19, 16))),
y = c(1,1,0,0,0,0,0,2,1,3,0,0,0,0,0,0, 0, 1,0,0,0,0,
2,0,1,0,3, 0,3,0,1,0,1,1,0,4,0,0,1, 0,  0,  0,  0,  2,  0,  0,  0,
0,  0,  0,  4,  0,  4,  0,  1,  0,  0,  0,  0,1,  3, 1,  0,  0,  5,
0,  0,  1,  5,  0,  1,  0,  0,  6,  0,  1,  1,  0, 2,  0,  0,  0,  1,
11,  0,  5,  5,  0,  3,  0,  0,  3,  0,  0,  0,  2,  5,  3,  6,  1,  1, 10,  3,
4,  2,  3,  2,  2,  2,  9,  3,  2,  1,  0,  1,  3,  2, 3,  3,  7,  0,
5,  3,  2,  6,  3,  1,  2,  6,  3,  3, 2,  2),
n = c(12,12,12,13,1, 13,10,14, 12, 12, 14, 13, 12, 11, 15, 14, 11, 11, 12, 11, 14, 12, 13, 13, 14, 13,
8, 14, 10, 13, 14, 12, 10, 10, 11, 10, 12, 12, 14, 14,  9,  8, 12,  9, 13,  9, 13, 12, 12, 13, 10,
13,  9, 11,  9, 10, 12, 14,  5,  9,  9,  8,  7, 13, 14, 12, 13, 15, 11, 11,  7, 14,  8,  9, 12,
6,  9,  9, 13, 10,  4,  8, 10, 11,  7, 10, 10,  7, 12,  7, 11, 14,  4,  7,  6,  2,  5,  9,  6,  1,
1, 10,  3,  4,  3,  5,  2,  4,  2,  9,  3,  6,  1,  4,  1, 10,  2, 3,  3,  7,  1,  5,  3,  2,  6,
8,  1,  2,  6,  3,  3,  2, 2),
liter = c(1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1)
)
clusterdataQ <- PREP_DATA_QA(data = clusterdata, sumstats = TRUE,
q = 0.1, bkg = NULL, shape.a = 4, shape.BMD = 0.0001,
cluster = TRUE)
pw <- c(rep(1, 2), rep(0, 6))
### Laplace Approximation
testbb_laplace <- full.laplaceQ_MA(data.Q = clusterdataQ, prior.weights = pw)
# plot output
pSBMD_CQ <- plot.BMADRQ(testbb_laplace, weight_type = 'LP', title = 'Quantal (Full Laplace)', all = F)
pSBMD_CQ$BMDs
pSBMD_CQ$weights
pSBMD_CQ$model_fit
pSBMD_CQ$MA_fit
summ.data <- data.frame(
x = data.test$Dose,
y = data.test$Mean,
s = data.test$SD,
n = data.test$N,
cov = data.test$group
)
data.test <- read.csv('test_data.csv', header = T, sep = ';')
summ.data <- data.frame(
x = data.test$Dose,
y = data.test$Mean,
s = data.test$SD,
n = data.test$N,
cov = data.test$group
)
data.test <- read.csv('./data/test_data.csv', header = T, sep = ';')
summ.data <- data.frame(
x = data.test$Dose,
y = data.test$Mean,
s = data.test$SD,
n = data.test$N,
cov = data.test$group
)
q = 0.2
summ.data
prior.weights = c(rep(1,4), rep(0,12))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = F,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
basic.plot(FLBMD, increasing = T)
basic.plot(FLBMD, 'E4_N', increasing = T)
log(10)
ln(10)
?log
