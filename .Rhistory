summ.data
q = 0.05
prior.weights = c(rep(1,4), rep(0,4), rep(1,4), rep(0,4))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
x = FLBMD
model_name = 'E4_N'
increasing = F
covar <- as.factor(unique(x$data[,5]))
temp <- temp1 <- temp2 <- temp3 <- NULL
x$data$geom.y <- NtoLN(x$data$y, x$data$s)[1:dim(x$data)[1]]
x$data$geom.s <- NtoLN(x$data$y, x$data$s)[(dim(x$data)[1]+1):(2*dim(x$data)[1])]
maxDose <- x$maxDose
x$data
FLBMD$summary
FLBMD$MA
FLBMD$data
data <- read.table('~/BBMD/FINAL CODE/Smith 2009 lung cancer.txt', header = T)
data <- read.table('~/BBMD/FINAL CODE/Smith 2009 lung cancer.txt')
data <- read.table('~/BBMD/FINAL CODE/Smith 2009 lung cancer.txt', header = T, sep = '\t')
data
summ.data = data.frame(x = data$Exposure.Âµg.kg.bw.per.day, y = data$Adj.cases, n = data$N)
summ.data
plot(summ.data$x, summ.data$y/summ.data$n)
dataQuantal <- PREP_DATA_QA(summ.data, q = 0.01, extended = T)#, prior.d = 'EPA')
laplaceQuantal <- full.laplaceQ_MA(dataQuantal)
dataQuantal <- PREP_DATA_QA(summ.data, q = 0.005, extended = T)#, prior.d = 'EPA')
laplaceQuantal <- full.laplaceQ_MA(dataQuantal)
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
library(gamlss)
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
summ.data <- data.frame(x = data$Dose,
y = data$MeanBW,
s = data$SdBW,
n = data$N,
cov = data$Sex)
summ.data
q = 0.05
prior.weights = c(rep(1,4), rep(0,4), rep(1,4), rep(0,4))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
source('R/fun_Laplace.R')
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$summary
FLBMD$MA
require(devtools)
install_version("ggplot2", version = "3.3.6", repos = "http://cran.us.r-project.org")
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
library(gamlss)
packageVersion('ggplot2')
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
summ.data <- data.frame(x = data$Dose,
y = data$MeanBW,
s = data$SdBW,
n = data$N,
cov = data$Sex)
summ.data
q = 0.05
prior.weights = c(rep(1,4), rep(0,4), rep(1,4), rep(0,4))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
basic.plot(FLBMD, 'E4_N', increasing = F)
basic.plot(FLBMD, 'H4_LN', increasing = F)
load(file.path(dataDir, "das1.rda"))
data.test <- das1$data
ind.data <- data.frame(
x = data.test$Dose,
y = data.test$LDH,
#          s = data.test$SD,
#          n = data.test$N,
cov = data.test$sex
)
dataDir <- '~/GitHub/BMABMDR/data/'
load(file.path(dataDir, "das1.rda"))
data.test <- das1$data
ind.data <- data.frame(
x = data.test$Dose,
y = data.test$LDH,
#          s = data.test$SD,
#          n = data.test$N,
cov = data.test$sex
)
ind.data <- ind.data[which(!is.na(ind.data$y)),]
q = 0.05
prior.weights = c(rep(1,4), rep(0,12))
load("~/BBMD/FINAL CODE/TESTING/das5.rda")
# # data.input <- das5$data[das5$data$sex==1,]
data.input <- das5$data
data.input <- data.frame(dose = data.input$dose,
response = data.input$foetalweight,
litter = data.input$number)
data.input <- data.input[data.input$dose != 0, ]
plot(data.input$dose, data.input$response)
plot(data.input$dose, data.input$response, xlab = 'dose', ylab = 'fetal weight')
# # data.input <- das5$data[das5$data$sex==1,]
data.input <- das5$data
data.input <- data.frame(dose = data.input$dose,
response = data.input$foetalweight,
litter = data.input$number)
plot(data.input$dose, data.input$response)
plot(data.input$dose, data.input$response, xlab = 'dose', ylab = 'fetal weight')
library(dplyr)
data.plot <- data.input %>%
group_by(dose, litter) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot$dose, data.plot$mresp, pch = 15, col = 2)
data.plot2 <- data.input %>%
group_by(dose) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot2$dose, data.plot2$mresp, pch = 18, cex = 2, col = 3)
data.input.test.DR <- data.input
data.input.test.DR$litter <- 1
summarize.indiv.data(data.input, 'continuous', cluster = TRUE)
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
prior.weights = c(rep(1,8), 1, rep(1,7))
q = 0.05
pvec = c(0.05,0.5,0.95)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_N$shapiro.msg
data_N = PREP_DATA_N(data.input)
head(data.input)
data_N = PREP_DATA_N(data.input, sumstats = F)
data_N = PREP_DATA_N(data.input, sumstats = F, q = 0.05)
data_N$test.NLN
data_N$test.NLN$msg_5N_dose
datind = data.input
doseunique <- sort(unique(datind$x))
normtestres <- c()
# for each dose separately
for (dd in doseunique){
seldd <- (datind$x==dd)
if(sum(seldd)>2){
normtestres <- c(normtestres,shapiro.test(datind$y[seldd])$p.value)
}else{
normtestres <- c(normtestres, NA)
}
}
# global test of anova residuals, more data but pooling and possibly missing local deviations
normtestres <- c(normtestres, shapiro.test(lm(datind$y~as.factor(datind$x))$residuals)$p.value)
#normtestres<-data.frame(normtestres)
test05 <- (normtestres<0.05)
head(datind)
datind$x = datind$dose
datind$y = datind$response
doseunique <- sort(unique(datind$x))
normtestres <- c()
# for each dose separately
for (dd in doseunique){
seldd <- (datind$x==dd)
if(sum(seldd)>2){
normtestres <- c(normtestres,shapiro.test(datind$y[seldd])$p.value)
}else{
normtestres <- c(normtestres, NA)
}
}
# global test of anova residuals, more data but pooling and possibly missing local deviations
normtestres <- c(normtestres, shapiro.test(lm(datind$y~as.factor(datind$x))$residuals)$p.value)
#normtestres<-data.frame(normtestres)
test05 <- (normtestres<0.05)
test10 <- (normtestres<0.10)
normtestres <- cbind(normtestres,test05,test10)
colnames(normtestres) <- c("p-value Shapiro normality test","reject at 5%","reject at 10%")
rnames<-c()
for (dd in doseunique) rnames <- c(rnames,as.character(dd))
rnames <- c(rnames,"global")
rownames(normtestres) <- rnames
doseunique <- sort(unique(datind$x))
lognormtestres <- c()
# for each dose separately
for (dd in doseunique){
seldd <- (datind$x==dd)
if(sum(seldd)>2){
lognormtestres <- c(lognormtestres, shapiro.test(log(datind$y[seldd]))$p.value)
}else{
lognormtestres <- c(lognormtestres, NA)
}
}
# global test of anova residuals, more data but pooling and possibly missing local deviations
lognormtestres <- c(lognormtestres,shapiro.test(lm(log(datind$y)~as.factor(datind$x))$residuals)$p.value)
#lognormtestres<-data.frame(lognormtestres)
test05 <- (lognormtestres<0.05)
test10 <- (lognormtestres<0.10)
lognormtestres <- cbind(lognormtestres,test05,test10)
colnames(lognormtestres) <- c("p-value Shapiro log-normality test","reject at 5%","reject at 10%")
rnames <- c()
for (dd in doseunique) rnames<-c(rnames,as.character(dd))
rnames <- c(rnames,"global")
rownames(lognormtestres) <- rnames
normtestres
#normtestres
normtestres <- as.data.frame(normtestres)
msg_5N_overall <- paste0('there is no evidence against normality across dose levels at level 5%, p-value ', normtestres[(length(doseunique)+1),1])
msg_5N_overall
msg_5N_overall <- paste0('there is no evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
msg_5N_overall
msg_10N_overall <- paste0('there is no evidence against normality across dose levels at level 10%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
msg_5N_dose <- 'there is no evidence against normality for any of the dose levels at level 5%'
msg_10N_dose <- 'there is no evidence against normality for any of the dose levels at level 10%'
if(normtestres[(length(doseunique)+1),2] == 1){
msg_5N_overall <- paste0('there is evidence against normality across dose levels at level 5%, p-value ', normtestres[(length(doseunique)+1),1])
warning(paste0('there is evidence against normality across dose levels at level 5%, p-value ', normtestres[(length(doseunique)+1),1]))
}
msg_5N_overall <- paste0('there is evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
if(normtestres[(length(doseunique)+1),2] == 1){
msg_5N_overall <- paste0('there is evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
warning(paste0('there is evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4)))
}
if(normtestres[(length(doseunique)+1),3] == 1){
msg_10N_overall <- paste0('there is evidence against normality across dose levels at level 10%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
warning(paste0('there is evidence against normality across dose levels at level 10%, p-value ', round(normtestres[(length(doseunique)+1),1],4)))
}
paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), sep=', ')
paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), sep=', ', collapse = T)
?paste
paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', ')
if(sum(normtestres[(1:length(doseunique)),2], na.rm = T) > 0){
msg_5N_dose <- paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', '))
warnings(paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', ')))
}
paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', '))
paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', '))
msg_5N_dose
#normtestres
normtestres <- as.data.frame(normtestres)
msg_5N_overall <- paste0('there is no evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
msg_10N_overall <- paste0('there is no evidence against normality across dose levels at level 10%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
msg_5N_dose <- 'there is no evidence against normality for any of the dose levels at level 5%'
msg_10N_dose <- 'there is no evidence against normality for any of the dose levels at level 10%'
if(normtestres[(length(doseunique)+1),2] == 1){
msg_5N_overall <- paste0('there is evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
warning(paste0('there is evidence against normality across dose levels at level 5%, p-value ', round(normtestres[(length(doseunique)+1),1],4)))
}
if(normtestres[(length(doseunique)+1),3] == 1){
msg_10N_overall <- paste0('there is evidence against normality across dose levels at level 10%, p-value ', round(normtestres[(length(doseunique)+1),1],4))
warning(paste0('there is evidence against normality across dose levels at level 10%, p-value ', round(normtestres[(length(doseunique)+1),1],4)))
}
if(sum(normtestres[(1:length(doseunique)),2], na.rm = T) > 0){
msg_5N_dose <- paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', '))
warnings(paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', ')))
}
if(sum(normtestres[(1:length(doseunique)),3], na.rm = T) > 0){
msg_10N_dose <- paste0('there is evidence against normality at level 10% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),3] == 1), ]), collapse=', '))
warning(paste0('there is evidence against normality at level 10% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),3] == 1), ]), collapse=', ')))
}
if(sum(normtestres[(1:length(doseunique)),2], na.rm = T) > 0){
msg_5N_dose <- paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', '))
warning(paste0('there is evidence against normality at level 5% for dose ', paste(rownames(normtestres[which(normtestres[(1:length(doseunique)),2] == 1), ]), collapse=', ')))
}
#lognormtestres
lognormtestres <- as.data.frame(lognormtestres)
msg_5LN_overall <- paste0('there is no evidence against log-normality across dose levels at level 5%, p-value ', round(lognormtestres[(length(doseunique)+1),1],4))
msg_10LN_overall <- paste0('there is no evidence against log-normality across dose levels at level 10%, p-value ', round(lognormtestres[(length(doseunique)+1),1],4))
msg_5LN_dose <- 'there is no evidence against log-normality for any of the dose levels at level 5%'
msg_10LN_dose <- 'there is no evidence against log-normality for any of the dose levels at level 10%'
if(lognormtestres[(length(doseunique)+1),2] == 1){
msg_5LN_overall <- paste0('there is evidence against log-normality across dose levels at level 5%, p-value ', round(lognormtestres[(length(doseunique)+1),1],4))
warning(paste0('there is evidence against log-normality across dose levels at level 5%, p-value ', round(lognormtestres[(length(doseunique)+1),1],4)))
}
if(lognormtestres[(length(doseunique)+1),3] == 1){
msg_10LN_overall <- paste0('there is evidence against log-normality across dose levels at level 10%, p-value ', round(lognormtestres[(length(doseunique)+1),1],4))
warning(paste0('there is evidence against log-normality across dose levels at level 10%, p-value ', round(lognormtestres[(length(doseunique)+1),1],4)))
}
if(sum(lognormtestres[(1:length(doseunique)),2], na.rm = T) > 0){
msg_5LN_dose <- paste0('there is evidence against log-normality at level 5% for dose ', paste(rownames(lognormtestres[which(lognormtestres[(1:length(doseunique)),2] == 1), ]), collapse=', '))
warning(paste0('there is evidence against log-normality at level 5% for dose ', paste(rownames(lognormtestres[which(lognormtestres[(1:length(doseunique)),2] == 1), ]), collapse=', ')))
}
if(sum(lognormtestres[(1:length(doseunique)),3], na.rm = T) > 0){
msg_10LN_dose <- paste0('there is evidence against log-normality at level 10% for dose ', paste(rownames(lognormtestres[which(lognormtestres[(1:length(doseunique)),3] == 1), ]), collapse=', '))
warning(paste0('there is evidence against log-normality at level 10% for dose ', paste(rownames(lognormtestres[which(lognormtestres[(1:length(doseunique)),3] == 1), ]), collapse=', ')))
}
source('R/FUNs.R')
data_N = PREP_DATA_N(data.input, q = 0.05, sumstats = F)
data_N$test.NLN
data_N2 = PREP_DATA_N(data.input, q = 0.05, sumstats = F)
data_N2$test.NLN
NLN_test
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
library(gamlss)
load("~/BBMD/FINAL CODE/TESTING/das5.rda")
# # data.input <- das5$data[das5$data$sex==1,]
data.input <- das5$data
data.input <- data.frame(dose = data.input$dose,
response = data.input$foetalweight,
litter = data.input$number)
plot(data.input$dose, data.input$response)
plot(data.input$dose, data.input$response, xlab = 'dose', ylab = 'fetal weight')
library(dplyr)
data.plot <- data.input %>%
group_by(dose, litter) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot$dose, data.plot$mresp, pch = 15, col = 2)
data.plot2 <- data.input %>%
group_by(dose) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot2$dose, data.plot2$mresp, pch = 18, cex = 2, col = 3)
data.input.test.DR <- data.input
data.input.test.DR$litter <- 1
summarize.indiv.data(data.input, 'continuous', cluster = TRUE)
data_N = PREP_DATA_N(data.input, q = 0.05, sumstats = F)
data_N$test.NLN
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
prior.weights = c(rep(1,8), 1, rep(1,7))
q = 0.05
pvec = c(0.05,0.5,0.95)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
plot_prior(FLBMD, data_LN$data, 'E4_LN', parms = T, clustered = T)
plt <- plot.BMADR(FLBMD, type = 'decreasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '')
plt$BMDs
source('R/plottingfunctions.R')
plt <- plot.BMADR(FLBMD, type = 'decreasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '')
plt$BMDs
plt$weights
plt$model_fit
plt$model_fit_N
plt$model_fit_LN
plt$MA_fit
thyd <- data.frame(dose = c(0, 3, 12, 30),
x = c(6, 6, 34, 42),
n = c(50, 50, 50, 50)
)
bf = anydoseresponseQ(thyd$dose, thyd$x, thyd$n, cluster = FALSE)
thydQ <- PREP_DATA_QA(data = thyd, sumstats = TRUE, extended = T,
q = 0.1, bkg = NULL, shape.a = 4, prior.BMD = c(4.5,7.5,8), shape.BMD = 4,
cluster = FALSE)
pw <- rep(1,8)
test_laplace <- full.laplaceQ_MA(data.Q = thydQ, prior.weights = c(rep(1,6), 1, 1))
print.BMADR(test_laplace, 'quantal')
test_laplace$MA
pQ <- plot.BMADRQ(test_laplace, weight_type = 'LP', all = FALSE,
title = 'Thyroid Epithelial Cell Vacuolisation Data')
pQ$BMDs
pQ$weights
pQ$model_fit
pQ$MA_fit
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
summ.data <- data.frame(x = data$Dose,
y = data$HepatocyteHypertrophy,
n = data$N,
cov = data$Sex)
summ.data
q = 0.1
prior.weights = rep(1,8)
FLBMD <- full.laplace_MA_Q_Cov(summ.data,
sumstats = T,
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
