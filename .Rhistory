}
model_pars
DRM
x$summary$Submodel[x$summary$Model==model_name][1] == 'BMD_d'
for(i in 1:length(covar)){
pars <- c('par1[1]',
paste0('par2[',i,']'),
'par3',
paste0('par4[',i,']'))
if(grepl('_LN',model_name)){
temp1 <- c(temp1, exp(DRM(par = model_pars[pars], seq(0,1,0.01), x$q, x$shift)))
}else{
temp1 <- c(temp1, DRM(par = model_pars[pars], seq(0,1,0.01), x$q, x$shift))
}
}
# dataTemp <- data.frame(x = seq(0,1,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# p <- ggplot() + geom_point(data = x$data, aes(x = x/max(x), y = y, colour = cov)) +
#   geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))+
#   geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
#                 size = 1, width = NA, linetype = 'dotted')
dataTemp <- data.frame(x = seq(0,1,0.01)*max(x$data$x), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
dataTemp
# dataTemp <- data.frame(x = seq(0,1,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# p <- ggplot() + geom_point(data = x$data, aes(x = x/max(x), y = y, colour = cov)) +
#   geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))+
#   geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
#                 size = 1, width = NA, linetype = 'dotted')
dataTemp <- data.frame(x = seq(0,1,0.01)*x$maxDose, y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
dataTemp
ggplot() + geom_point(data = x$data, aes(x = x*x$maxDose, y = y, colour = cov))
maxDose <- x$maxDose
ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y, colour = cov))
ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y, colour = cov)) +
geom_line(data = dataTemp, aes(x = x*maxDose, y = y, colour = cov))
ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y, colour = cov)) +
geom_line(data = dataTemp, aes(x = x*maxDose, y = y, colour = cov)) +
geom_errorbar(data = x$data, mapping = aes(x = x*maxDose, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
size = 1, width = NA, linetype = 'dotted')
temp1 <- c(temp1, DRM(par = model_pars[pars], seq(0,maxDose,0.01)/maxDose, x$q, x$shift))
# dataTemp <- data.frame(x = seq(0,1,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# p <- ggplot() + geom_point(data = x$data, aes(x = x/max(x), y = y, colour = cov)) +
#   geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))+
#   geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
#                 size = 1, width = NA, linetype = 'dotted')
dataTemp <- data.frame(x = seq(0,1,0.01)*maxDose, y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# dataTemp <- data.frame(x = seq(0,1,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# p <- ggplot() + geom_point(data = x$data, aes(x = x/max(x), y = y, colour = cov)) +
#   geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))+
#   geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
#                 size = 1, width = NA, linetype = 'dotted')
dataTemp <- data.frame(x = seq(0,maxDose,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
temp1=c()
temp1 <- c(temp1, DRM(par = model_pars[pars], seq(0,maxDose,0.01)/maxDose, x$q, x$shift))
# dataTemp <- data.frame(x = seq(0,1,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# p <- ggplot() + geom_point(data = x$data, aes(x = x/max(x), y = y, colour = cov)) +
#   geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))+
#   geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
#                 size = 1, width = NA, linetype = 'dotted')
dataTemp <- data.frame(x = seq(0,maxDose,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
temp1
covar <- as.factor(unique(x$data[,5]))
temp <- temp1 <- temp2 <- temp3 <- NULL
x$data$geom.y <- NtoLN(x$data$y, sqrt(x$data$s2))[1:dim(x$data)[1]]
x$data$geom.s <- NtoLN(x$data$y, sqrt(x$data$s2))[(dim(x$data)[1]+1):(2*dim(x$data)[1])]
maxDose <- x$maxDose
temp1 <- c(temp1, DRM(par = model_pars[pars], seq(0,maxDose,0.01)/maxDose, x$q, x$shift))
temp1
DRM(par = model_pars[pars], seq(0,1,0.01), x$q, x$shift)
# dataTemp <- data.frame(x = seq(0,1,0.01), y = temp1, cov = rep(covar, each = length(seq(0,1,0.01))))
# p <- ggplot() + geom_point(data = x$data, aes(x = x/max(x), y = y, colour = cov)) +
#   geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))+
#   geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
#                 size = 1, width = NA, linetype = 'dotted')
dataTemp <- data.frame(x = seq(0,maxDose,0.01), y = temp1, cov = rep(covar, each = length(seq(0,maxDose,0.01))))
dataTemp
p <- ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y, colour = cov)) +
geom_line(data = dataTemp, aes(x = x*maxDose, y = y, colour = cov)) +
geom_errorbar(data = x$data, mapping = aes(x = x*maxDose, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
size = 1, width = NA, linetype = 'dotted')
p
ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y, colour = cov))
dataTemp
p <- ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y, colour = cov)) +
geom_line(data = dataTemp, aes(x = x, y = y, colour = cov)) +
geom_errorbar(data = x$data, mapping = aes(x = x, ymin = y - sqrt(s2), ymax = geom.y + sqrt(s2), colour = cov),
size = 1, width = NA, linetype = 'dotted')
p
source('./R/plot_model_fit.R')
basic.plot(FLBMD, 'E4_N', increasing = F)
source('./R/plot_model_fit.R')
basic.plot(FLBMD, 'E4_N', increasing = F)
basic.plot(FLBMD, 'E4_LN', increasing = F)
basic.plot(FLBMD, 'H4_LN', increasing = F)
source('./R/plot_model_fit.R')
dataDir <- '~/GitHub/BMABMDR/data/'
data <- read.csv(file.path(dataDir, "example_quantal.csv"))
# Each covariate level should be present in each dose group
data.input <- data.frame(
dose = rep(data$dose, 2),
y = rep(data$response, 2),
n = rep(data$size, 2),
covariate = c(rep('Male', 5), rep('Female', 5))
)
data.input
q = 0.1
# Fit models TODO: returns an error
modelFit <- full.laplace_MA_Q_Cov(
data = data.input,
q = q
)
modelFit$summary
# Plots
pt <- basic.plotQ(modelFit, model_name = 'E4_Q')
pt
source('./R/fun_Laplace.R')
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
data <- read.csv(file.path(dataDir, "example_quantal.csv"))
# Each covariate level should be present in each dose group
data.input <- data.frame(
dose = rep(data$dose, 2),
y = rep(data$response, 2),
n = rep(data$size, 2),
covariate = c(rep('Male', 5), rep('Female', 5))
)
q = 0.1
# Fit models TODO: returns an error
modelFit <- full.laplace_MA_Q_Cov(
data = data.input,
q = q
)
modelFit$summary
# Plots
pt <- basic.plotQ(modelFit, model_name = 'E4_Q')
pt
FLBMD$summary
source('./R/fun_Laplace.R')
# Fit models TODO: returns an error
modelFit <- full.laplace_MA_Q_Cov(
data = data.input,
q = q
)
modelFit$summary
x = modelFit
model_name = E4_N
model_name = E4_Q
model_name = 'E4_Q'
# Plots
pt <- basic.plotQ(modelFit, model_name = 'IE4_Q')
pt
# Plots
pt <- basic.plotQ(modelFit, model_name = 'LN4_Q')
pt
covar <- unique(x$data[,4])
model_pars <- get('x')[[paste0('par',model_name)]]
DRM <- get(paste0('DRM.', model_name))
temp <- temp1 <- temp2 <- temp3 <- NULL
maxDose <- x$maxDose
covar
model_pars
DRM <- get(paste0('DRM.', model_name))
temp <- temp1 <- temp2 <- temp3 <- NULL
maxDose <- x$maxDose
for(i in 1:length(covar)){
pars <- c(paste0('par1[',i,']'),
paste0('par2[',i,']'),
paste0('par3[',i,']')
)
# lines(seq(0,1,0.01), DRM(par = model_pars[pars], seq(0,1,0.01), x$q), col = i, lwd = 2)
temp2 <- c(temp2, DRM(par = model_pars[pars], seq(0,maxDose,0.01)/maxDose, x$q))
}
temp2
dataTemp <- data.frame(x = seq(0,maxDose,0.01), y = temp2, cov = rep(covar, each = length(seq(0,maxDose,0.01))))
p <- ggplot() + geom_point(data = x$data, aes(x = x*maxDose, y = y/n, colour = cov)) +
geom_line(data = dataTemp, aes(x = x, y = y, colour = cov))
p
head(dataTemp)
tail(dataTemp)
modelFit$parE4_Q
modelFit$summary
n=100; dp=2; doses=c(rep(0,n),rep(c(0,dp^(-4),dp^(-3),dp^(-2),dp^(-1),1),n))
simsigma=1; q=0.1
pvec=c(0.05,0.5,0.95)
BMD.true=0.12 # flat
min.resp = 5.3
ctrue = 0.65
a1 = 0.1; a2 = 0.3
BMD1 = 0.25; BMD2 = 0.16
d1 = d2 = 1
q = 0.1
source('~/BBMD/TRYOUT CODE/QUANTAL DR/simData.R')
sim_data1 <- sim_DRQ_data(DRM = "Exponential", DRM_par = c(a1, BMD1, d1),
# n = c(20, 20, 20, 20, 20),
n = rep(100, 5),
dose = c(0, 5, 15, 50, 100), q = q)
sim_data1$sex = rep('Male', 5)
sim_data2 <- sim_DRQ_data(DRM = "Exponential", DRM_par = c(a2, BMD2, d2),
# n = c(20, 20, 20, 20, 20),
n = rep(100, 5),
dose = c(0, 5, 15, 50, 100), q = q)
# sim_data2 = sim_data1
sim_data2$sex = rep('Female', 5)
summ.data <- data.frame(dose = c(sim_data1$dose.a, sim_data2$dose.a),
y = c(sim_data1$y.a, sim_data2$y.a),
n = c(sim_data1$n.a, sim_data2$n.a),
sex = c(sim_data1$sex, sim_data2$sex))
par(mfrow=c(1,1))
plot(summ.data$dose[summ.data$sex==1], summ.data$y[summ.data$sex==1]/summ.data$n[summ.data$sex==1], type = 'l', ylim = c(0,1))
summ.data
plot(summ.data$dose[summ.data$sex=='Male'], summ.data$y[summ.data$sex=='Male']/summ.data$n[summ.data$sex=='Male'], type = 'l', ylim = c(0,1))
lines(summ.data$dose[summ.data$sex=='Female'], summ.data$y[summ.data$sex=='Female']/summ.data$n[summ.data$sex=='Female'], col = 2)
modelFit <- full.laplace_MA_Q_Cov(
data = summ.data,
q = q
)
# Plots --> MODEL FIT?? covariate effects not reflected in fit
pt <- list()
modelFit$summary
modelFit$MA
basic.plotQ(modelFit, model_name = 'E4_N')
basic.plotQ(modelFit, model_name = 'E4_Q')
# Plots --> MODEL FIT?? covariate effects not reflected in fit
pt <- list()
k = 1
for (i in seq_along(get_models(type = "quantal"))){
pt[[k]] <- basic.plotQ(modelFit, model_name = get_models("quantal")[i])
k = k+1
}
pt
a1 = 0.1; a2 = 0.1
BMD1 = 0.25; BMD2 = 0.16
d1 = d2 = 1
q = 0.1
source('~/BBMD/TRYOUT CODE/QUANTAL DR/simData.R')
sim_data1 <- sim_DRQ_data(DRM = "Exponential", DRM_par = c(a1, BMD1, d1),
# n = c(20, 20, 20, 20, 20),
n = rep(100, 5),
dose = c(0, 5, 15, 50, 100), q = q)
sim_data1$sex = rep('Male', 5)
sim_data2 <- sim_DRQ_data(DRM = "Exponential", DRM_par = c(a2, BMD2, d2),
# n = c(20, 20, 20, 20, 20),
n = rep(100, 5),
dose = c(0, 5, 15, 50, 100), q = q)
# sim_data2 = sim_data1
sim_data2$sex = rep('Female', 5)
summ.data <- data.frame(dose = c(sim_data1$dose.a, sim_data2$dose.a),
y = c(sim_data1$y.a, sim_data2$y.a),
n = c(sim_data1$n.a, sim_data2$n.a),
sex = c(sim_data1$sex, sim_data2$sex))
par(mfrow=c(1,1))
plot(summ.data$dose[summ.data$sex=='Male'], summ.data$y[summ.data$sex=='Male']/summ.data$n[summ.data$sex=='Male'], type = 'l', ylim = c(0,1))
lines(summ.data$dose[summ.data$sex=='Female'], summ.data$y[summ.data$sex=='Female']/summ.data$n[summ.data$sex=='Female'], col = 2)
modelFit <- full.laplace_MA_Q_Cov(
data = summ.data,
q = q
)
modelFit$summary
modelFit$MA
basic.plotQ(modelFit, model_name = 'E4_Q')
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
summ.data <- data.frame(x = data$Dose,
y = data$HepatocyteHypertrophy,
n = data$N,
cov = data$Sex)
summ.data
q = 0.1
prior.weights = rep(1,8)
FLBMD <- full.laplace_MA_Q_Cov(summ.data,
sumstats = T,
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
par(mfrow=c(1,2))
basic.plotQ(FLBMD, 'E4_Q')
basic.plotQ(FLBMD, 'H4_Q')
basic.plotQ(FLBMD, GH4_Q')
basic.plotQ(FLBMD, 'G4_Q')
basic.plotQ(FLBMD, 'G4_Q')
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
data
data = data[data$Sex=='Male',]
data
summ.data <- data.frame(x = data$Dose,
y = data$MeanBW,
s = data$SdBW
n = data$N)
summ.data <- data.frame(x = data$Dose,
y = data$MeanBW,
s = data$SdBW,
n = data$N)
summ.data
source('./R/fun_Laplace.R')
data_N2 = PREP_DATA_N(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = T)#,
# bkg = c(5,NA,15), maxy = c(15,NA,25))
data_LN2 = PREP_DATA_LN(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = T)#,
# Laplace approximation
set.seed(5693)
FLBMD=full.laplace_MA(data_N2,data_LN2,prior.weights,ndraws=ndr,seed=123,pvec=pvec)
data_N2$data$priormu
data_N2$data$priorlb
data_N2$data$priorub
data_N2 = PREP_DATA_N(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
maxy = c(0, 0.5, 1), prior.BMD = c(0.0000001, 474.3, 400))#,
# bkg = c(5,NA,15), maxy = c(15,NA,25))
data_LN2 = PREP_DATA_LN(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
maxy = c(0, 0.5, 1), prior.BMD = c(0.0000001, 474.3, 400))#,
# Laplace approximation
set.seed(5693)
FLBMD=full.laplace_MA(data_N2,data_LN2,prior.weights,ndraws=ndr,seed=123,pvec=pvec)
data_N2 = PREP_DATA_N(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
maxy = c(0, 0.5, 1), prior.BMD = c(0.0000001, 474.3, 400), shape.BMD = 4)#,
# bkg = c(5,NA,15), maxy = c(15,NA,25))
data_LN2 = PREP_DATA_LN(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
maxy = c(0, 0.5, 1), prior.BMD = c(0.0000001, 474.3, 400), shape.BMD = 4)#,
# Laplace approximation
set.seed(5693)
FLBMD=full.laplace_MA(data_N2,data_LN2,prior.weights,ndraws=ndr,seed=123,pvec=pvec)
data_N2 = PREP_DATA_N(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
maxy = c(0, 0.5, 10), prior.BMD = c(0.0000001, 474.3, 400), shape.BMD = 4)#,
# bkg = c(5,NA,15), maxy = c(15,NA,25))
data_LN2 = PREP_DATA_LN(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
maxy = c(0, 0.5, 10), prior.BMD = c(0.0000001, 474.3, 400), shape.BMD = 4)#,
# Laplace approximation
set.seed(5693)
FLBMD=full.laplace_MA(data_N2,data_LN2,rep(1,16),ndraws=ndr,seed=123,pvec=pvec)
plot(summ.data$x, summ.data$y)
par(mfrow=c(1,1))
plot(summ.data$x, summ.data$y)
data_N2 = PREP_DATA_N(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
# maxy = c(0, 0.5, 10),
prior.BMD = c(0.0000001, 474.3, 400), shape.BMD = 4)#,
# bkg = c(5,NA,15), maxy = c(15,NA,25))
data_LN2 = PREP_DATA_LN(summ.data, sumstats = T, q = q, sd = T, prior.d = 'N11', extended = F, bkg = c(200, 305.7, 350),
# maxy = c(0, 0.5, 10),
prior.BMD = c(0.0000001, 474.3, 400), shape.BMD = 4)#,
data_N2$data$priorlb
data_N2$data$priorub
# Laplace approximation
set.seed(5693)
FLBMD=full.laplace_MA(data_N2,data_LN2,rep(1,16),ndraws=ndr,seed=123,pvec=pvec)
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
FLBMD=full.laplace_MA(data_N2,data_LN2,rep(1,16),ndraws=ndr,seed=123,pvec=pvec)
load(file.path(dataDir, "das1.rda"))
data.test <- das1$data
ind.data <- data.frame(
x = data.test$Dose,
y = data.test$LDH,
#          s = data.test$SD,
#          n = data.test$N,
cov = data.test$sex
)
ind.data <- ind.data[which(!is.na(ind.data$y)),]
data = ind.data
data = data[order(data[, 1]), ]
data$dose = data[,1]
data$resp = data[,2]
data$cov = data[,3]
indiv.data <- data %>%
dplyr::group_by(dose, cov) %>%
dplyr::arrange(by_group = dose) %>%
dplyr::summarise(mean = mean(resp, na.rm = T), sd = sd(resp, na.rm=T), n = n())
dose.a = indiv.data$dose
maxDose = max(dose.a)
mean.a = indiv.data$mean
sd.a = indiv.data$sd
n.a = indiv.data$n
N = length(dose.a)
dose.a = dose.a/maxDose
covar = indiv.data$cov
# test normality
datind <- data.frame(x = data$dose,
y = data$resp)
datind
testNLN <- NLN_test(datind)
datind = ind.data
datind = data
doseunique <- sort(unique(datind$x))
normtestres <- c()
# for each dose separately
for (dd in doseunique){
seldd <- (datind$x==dd)
if(sum(seldd)>2){
normtestres <- c(normtestres,shapiro.test(datind$y[seldd])$p.value)
}else{
normtestres <- c(normtestres, NA)
}
}
# global test of anova residuals, more data but pooling and possibly missing local deviations
normtestres <- c(normtestres, shapiro.test(lm(datind$y~as.factor(datind$x))$residuals)$p.value)
#normtestres<-data.frame(normtestres)
test05 <- (normtestres<0.05)
test10 <- (normtestres<0.10)
normtestres <- cbind(normtestres,test05,test10)
colnames(normtestres) <- c("p-value Shapiro normality test","reject at 5%","reject at 10%")
rnames<-c()
for (dd in doseunique) rnames <- c(rnames,as.character(dd))
rnames <- c(rnames,"global")
rownames(normtestres) <- rnames
doseunique <- sort(unique(datind$x))
lognormtestres <- c()
# for each dose separately
for (dd in doseunique){
seldd <- (datind$x==dd)
if(sum(seldd)>2){
lognormtestres <- c(lognormtestres, shapiro.test(log(datind$y[seldd]))$p.value)
}else{
lognormtestres <- c(lognormtestres, NA)
}
}
# global test of anova residuals, more data but pooling and possibly missing local deviations
lognormtestres <- c(lognormtestres,shapiro.test(lm(log(datind$y)~as.factor(datind$x))$residuals)$p.value)
#lognormtestres<-data.frame(lognormtestres)
test05 <- (lognormtestres<0.05)
test10 <- (lognormtestres<0.10)
lognormtestres <- cbind(lognormtestres,test05,test10)
colnames(lognormtestres) <- c("p-value Shapiro log-normality test","reject at 5%","reject at 10%")
rnames <- c()
for (dd in doseunique) rnames<-c(rnames,as.character(dd))
rnames <- c(rnames,"global")
rownames(lognormtestres) <- rnames
normtestres
normtestres[,2]
sum(normtestres[,2], na.rm = T)
normtestres[,3]
lognormtestres
q = 0.05
prior.weights = rep(1,16)
# Fit models TODO: returns an error
FLBMD <- full.laplace_MA_Cov(
data = ind.data,
sumstats = FALSE,
sd = TRUE, # option not used for Quantal data
q = q,
prior.d = 'N11'
)
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
## Compile package and generate the documentation
rstan_config() # recompile stan models
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
library(gamlss)
dataDir <- '~/GitHub/BMABMDR/data/'
data <- read.csv(file.path(dataDir, "example_quantal.csv"))
# Each covariate level should be present in each dose group
data.input <- data.frame(
dose = rep(data$dose, 2),
y = rep(data$response, 2),
n = rep(data$size, 2),
covariate = c(rep('Male', 5), rep('Female', 5))
)
data.input
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
summ.data <- data.frame(x = data$Dose,
y = data$HepatocyteHypertrophy,
n = data$N,
cov = data$Sex)
summ.data
q = 0.1
prior.weights = rep(1,8)
sumstats = T
prior.d = 'N11'
extended = T
ndraws = 30000
seed = 123
pvec = c(0.05, 0.5, 0.95)
