color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbar(data = orig_ptdataN,
mapping = aes(x = dose2*mod.obj$max.dose, ymin = m-sd,
ymax = m+sd),
width = NA, position = pd, size = 1,
inherit.aes = FALSE) +
geom_point(data = orig_ptdataN, mapping = aes(x = dose2*mod.obj$max.dose, y = m) ,
size = 2, color = 1, shape = 21,
fill = brewer.pal(9, "Set1")[2],
inherit.aes = FALSE) +
# geom_jitter(data = orig_ptdata, mapping = aes(x = dose2*mod.obj$max.dose, y = m) ,
#              size = 2, color = 1, shape = 21,
#              fill = brewer.pal(9, "Set1")[2], position = position_jitter(h = 0.01, width = 0),
#              inherit.aes = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
# scale_linetype_manual(values = lty,
# labels = c('LogNormal', 'Normal')) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
pplotN
if(log == F){
pplotN <- pplotN + scale_y_continuous(trans = 'identity', labels = scales::comma)
}else{
pplotN <- pplotN + scale_y_continuous(trans = 'log10', labels = scales::comma)
}
pplotN
ymin = 10^min(mod.obj$dataLN$lg10m - 2*mod.obj$dataLN$lg10s, na.rm=T)
ymax = 10^max(mod.obj$dataLN$lg10m + 2*mod.obj$dataLN$lg10s, na.rm=T)
# plot for LogNormal distribution
pplotLN <- ggplot(data = preds2[preds2$Distribution=="LN" & paste0(preds2$Model,"_LN") %in% mod.obj$models_included,],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = Model,
color = Model)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE, linetype = 2) +
labs(color = "Model", title = "LogNormal distribution", x = expression(dose),
y = expression(response),
caption = "data and vertical bars based on geometric sample means and standard deviations") +
geom_segment(data = preds_min[preds_min$Distribution=="LN",],
mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbar(data = orig_ptdataLN,
mapping = aes(x = dose2*mod.obj$max.dose, ymin = 10^(log10m-log10s),
ymax = 10^(log10m+log10s)),
width = NA, position = pd, size = 1,
inherit.aes = FALSE) +
geom_point(data = orig_ptdataLN, mapping = aes(x = dose2*mod.obj$max.dose, y = 10^log10m) ,
size = 2, color = 1, shape = 21,
fill = brewer.pal(9, "Set1")[2],
inherit.aes = FALSE) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
# scale_linetype_manual(values = lty,
# labels = c('LogNormal')) +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
scale_colour_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
pplotLN
## Plot for both distributions
pplot <- ggplot(data = preds2[which(paste(preds2$Model, preds2$Distribution, sep = '_') %in% mod.obj$models_included),],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = interaction(Model, Distribution),
color = Model, linetype = Distribution)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE) +
labs(color = "Model", linetype = "Distribution", x = expression(dose),
y = expression(response), title = "") +
geom_segment(data = preds_min, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = log10(min_response),
#                                           group = interaction(Model, Distribution),
#                                           color = Model),
#           linetype = "dotted", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
scale_linetype_manual(values = lty,
labels = c('LogNormal', 'Normal')) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
pplot
prior.weights
lty
## Plot for both distributions
pplot <- ggplot(data = preds2[which(paste(preds2$Model, preds2$Distribution, sep = '_') %in% mod.obj$models_included),],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = interaction(Model, Distribution),
color = Model, linetype = Distribution)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE) +
labs(color = "Model", linetype = "Distribution", x = expression(dose),
y = expression(response), title = "") +
geom_segment(data = preds_min, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = log10(min_response),
#                                           group = interaction(Model, Distribution),
#                                           color = Model),
#           linetype = "dotted", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
scale_linetype_manual(values = lty,
labels = names(lty)) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
pplot
unique(preds2$Distribution)
dist_names = c("LogNormal","Normal")
names(dist_names) = c("LN","N")
## Plot for both distributions
pplot <- ggplot(data = preds2[which(paste(preds2$Model, preds2$Distribution, sep = '_') %in% mod.obj$models_included),],
aes(x = Dose*mod.obj$max.dose, y = predicted, group = interaction(Model, Distribution),
color = Model, linetype = Distribution)) +
geom_line(alpha = 0.6,
size = 1,
show.legend = TRUE) +
labs(color = "Model", linetype = "Distribution", x = expression(dose),
y = expression(response), title = "") +
geom_segment(data = preds_min, mapping = aes(x = Dose[1]*mod.obj$max.dose, y = min_response,
xend = max(Dose*mod.obj$max.dose), #max(dgr[(dgr <= (lg10d[2]-((lg10d[2]-lg10d[1])/2)))]),
yend = predicted,
group = interaction(Model, Distribution),
color = Model),
linetype = "dotted", alpha = 0.6,
size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
# geom_line(data = preds_min, mapping = aes(x = dgrprime, y = log10(min_response),
#                                           group = interaction(Model, Distribution),
#                                           color = Model),
#           linetype = "dotted", alpha = 0.6,
#           size = 0.8, inherit.aes = FALSE, show.legend = FALSE) +
#ylim(ymin, ymax) +
geom_errorbarh(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(xmin = BMDL, xmax = BMDU,
y = Response,
group = Model),
linetype = "solid", show.legend = FALSE,
size = 2, height = 0.01*log10(mean(mod.obj$dataN$m)), inherit.aes = FALSE,
color = brewer.pal(9, "Set1")[3]) +
geom_point(data = dplyr::filter(BMDBMA, Type == weight_type),
aes(x = BMD, y = Response, group = Model),
size = 5, shape = 19,
color = brewer.pal(9, "Set1")[1],
show.legend = FALSE,
inherit.aes = FALSE) +
scale_linetype_manual(values = lty,
# labels = c('LogNormal', 'Normal')
labels = dist_names[names(dist_names)%in%unique(preds2$Distribution)]) +
scale_color_manual(values = md_cls,
# labels = c("Exp", "InvExp", "Hill", "LogNormal", "Gamma",
# "QuadExp", "Probit", "Logistic")
labels = mod_names[names(mod_names)%in%unique(preds2$Model)]) +
theme_minimal() +
coord_cartesian(xlim = c(min(preds_min$Dose*mod.obj$max.dose),
2*mod.obj$max.dose) ) +
# scale_x_continuous(trans = 'log10', labels = scales::comma,
#                    breaks = orig_ptdata$dose2[2:length(orig_ptdata$dose2)]*mod.obj$max.dose) +
scale_x_continuous(trans = 'log10', labels = plot.labs,
breaks = ddd*mod.obj$max.dose) +
scale_y_continuous(trans = 'log10', labels = scales::comma) +
theme(strip.text = element_text(size = 15, face = "bold"),
axis.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
panel.spacing = unit(5, "lines"),
legend.position = "top",
legend.direction = "horizontal",
title = element_text(size = 15, face = "bold"))
pplot
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
FLBMD = full.laplace_MA(data_N, data_LN, prior.weights = c(rep(0,4), rep(1,4), rep(1,4), rep(0,4)))
print.BMADR(FLBMD)
plt <- plot.BMADR(FLBMD, 'increasing', weight_type = 'LP', include_data = T, all = F, title = '')
plt$model_fit_N
plt$model_fit_N
plt$model_fit_LN
plt$model_fit
plt$model_fit_LN
plt$model_fit_N
plotly::ggplotly(plt$model_fit_LN)
plt$model_fit
load("~/BBMD/FINAL CODE/TESTING/das5.rda")
# # data.input <- das5$data[das5$data$sex==1,]
data.input <- das5$data
data.input <- data.frame(dose = data.input$dose,
response = data.input$foetalweight,
litter = data.input$number)
plot(data.input$dose, data.input$response)
plot(data.input$dose, data.input$response, xlab = 'dose', ylab = 'fetal weight')
library(dplyr)
data.plot <- data.input %>%
group_by(dose, litter) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot$dose, data.plot$mresp, pch = 15, col = 2)
data.plot2 <- data.input %>%
group_by(dose) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot2$dose, data.plot2$mresp, pch = 18, cex = 2, col = 3)
load("~/BBMD/FINAL CODE/TESTING/das5.rda")
# # data.input <- das5$data[das5$data$sex==1,]
data.input <- das5$data
data.input <- data.frame(dose = data.input$dose,
response = data.input$foetalweight,
litter = data.input$number)
plot(data.input$dose, data.input$response)
plot(data.input$dose, data.input$response, xlab = 'dose', ylab = 'fetal weight')
library(dplyr)
data.plot <- data.input %>%
group_by(dose, litter) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot$dose, data.plot$mresp, pch = 15, col = 2)
data.plot
load("~/BBMD/FINAL CODE/TESTING/das5.rda")
# # data.input <- das5$data[das5$data$sex==1,]
data.input <- das5$data
data.input <- data.frame(dose = data.input$dose,
response = data.input$foetalweight,
litter = data.input$number)
plot(data.input$dose, data.input$response)
plot(data.input$dose, data.input$response, xlab = 'dose', ylab = 'fetal weight')
library(dplyr)
data.plot <- data.input %>%
group_by(dose, litter) %>%
summarise(mresp = mean(response))
data.plot
head(data.input)
table(data.input$litter)
table(data.input$dose)
data.input
library(dplyr)
data.plot <- data.input %>%
group_by(dose, litter) %>%
summarise(mresp = mean(response))
data.plot
data.plot2 <- data.input %>%
group_by(dose) %>%
summarise(mresp = mean(response))
# plot(data.plot$dose/max(data.plot$dose), data.plot$mresp, xlab = 'Dose', ylab = 'Litter mean response')
points(data.plot2$dose, data.plot2$mresp, pch = 18, cex = 2, col = 3)
data.plot2
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
prior.weights = c(rep(1,4), 0, rep(0,11))
q = 0.05
pvec = c(0.05,0.5,0.95)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
plt <- plot.BMADR(FLBMD, type = 'decreasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '')
prior.weights = c(rep(0,4), rep(1,4), rep(1,2), rep(0,6))
q = 0.05
pvec = c(0.05,0.5,0.95)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
plt <- plot.BMADR(FLBMD, type = 'decreasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '')
plt$BMDs
plt$weights
plt$model_fit
plt$model_fit_N
plt$model_fit_LN
mod.obj = FLBMD
type = 'decreasing'
clustered  = T
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
plt <- plot.BMADR(FLBMD, type = 'decreasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '')
plt$BMDs
plt$weights
plt$model_fit
plt$model_fit_N
plt$model_fit_LN
plt$MA_fit
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
###########################
dose = c(1.636364, 2.997273, 5.451818, 12.27, 17.72727)
# y = c(3, 5, 3, 7, 11)
y = c(48, 48, 19, 29, 33)
n = c(2288, 2093, 907, 909, 691)
plot(dose,y/n)
summ.data = data.frame(x = dose, y = y, n = n)
data.Q = PREP_DATA_QA(data = summ.data, sumstats = TRUE,
q = 0.005, bkg = NULL, shape.a = 4, shape.BMD = 0.0001,
cluster = FALSE)
# pw <- rep(1,8)
test_laplace <- full.laplaceQ_MA(data.Q = data.Q, prior.weights = c(rep(0,4), rep(1,2), 0, 1))
print.BMADR(test_laplace, 'quantal')
pQ = plot.BMADRQ(test_laplace, weight_type = 'LP', all = FALSE,
title = '')
pQ$model_fit
pQ$MA_fit
# pw <- rep(1,8)
test_laplace <- full.laplaceQ_MA(data.Q = data.Q, prior.weights = c(rep(1,4), rep(1,2), 0, 1))
print.BMADR(test_laplace, 'quantal')
pQ = plot.BMADRQ(test_laplace, weight_type = 'LP', all = FALSE,
title = '')
pQ$model_fit
data.viable <- read.csv("~/BBMD/FINAL CODE/ViableEmbryos.csv", header = T)
head(data.viable); tail(data.viable); dim(data.viable)
data.viable <- data.frame(dose = data.viable$dose,
y = data.viable$y,
n = data.viable$n)
plot(data.viable$dose/max(data.viable$dose), data.viable$y/data.viable$n)
viableQ <- PREP_DATA_QA(data = data.viable, sumstats = TRUE,
q = 0.1, extended = T,
cluster = TRUE)
test_laplace <- full.laplaceQ_MA(data.Q = viableQ, prior.weights = c(rep(0,4),rep(1,4)))
print.BMADR(test_laplace, 'quantal')
pQ <- plot.BMADRQ(test_laplace, weight_type = 'LP', all = FALSE, title = '')
pQ$BMDs
pQ$weights
pQ$model_fit
pQ$model_fit2
pQ$MA_fit
# data <- read.csv('~/BBMD/FINAL CODE/RatStudyCovariates.csv', header = T)
data <- read.csv('~/BBMD/FINAL CODE/RatStudy.csv', header = T)
data
summ.data <- data.frame(x = data$Dose,
y = data$MeanBW,
s = data$SdBW,
n = data$N,
cov = data$Sex)
summ.data
q = 0.05
prior.weights = c(rep(1,2), rep(0,6), rep(0,4), rep(0,4))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
basic.plot(FLBMD, 'E4_N', increasing = F)
basic.plot(FLBMD, 'H4_LN', increasing = F)
prior.weights = c(rep(1,2), rep(0,6), rep(0,2), rep(1,2), rep(0,4))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
basic.plot(FLBMD, 'H4_LN', increasing = F)
?check_built
