# plot output
pSBMD_Q = plot.BMADRQ(SBMD_Q, weight_type = "BS", include_data = T, all = F, title = '')
pSBMD_Q$BMDs
pSBMD_Q$weights
pSBMD_Q$model_fit
pSBMD_Q$MA_fit
load(file.path(file.path(dataDir, "das1.rda")))
indData <- na.omit(das1$data[, c("Dose", "LDH")]) #BW instead of LDH works
argListPrepData <- list(
data = indData,
sumstats = FALSE,
sd = TRUE,
q = 0.05,
extended = TRUE
)
data_N <- do.call("PREP_DATA_N", argListPrepData)
data_LN <-  do.call("PREP_DATA_LN", argListPrepData)
argListFit <- list(
data.N = data_N,
data.LN = data_LN,
prior.weights = rep(1,16)
)
modelFit <- do.call("full.laplace_MA", argListFit)
modelPlot <- plot.BMADR(
mod.obj = modelFit,
weight_type = "LP",
type = ifelse(argListFit$data.N$data$is_increasing == 1, "increasing", "decreasing"),
title = '', all = F, log = T
)
modelPlot$model_fit_N
# Load data
summ.data <- read.csv(file.path(dataDir,'examplecontinuouswithcovariate.csv'))
# Subset data
summ.data <- summ.data[summ.data$Covariate == "Male", c("Dose", "Response3", "SD", "N")]
# Argument list
argList <- list(
data = summ.data,
sumstats = TRUE,
sd = TRUE,
q = 0.1
)
# Bartlett test
## normal distribution
b.Normal <- bartlett(sd = summ.data[,3], n = summ.data[,4])
## lognormal distribution
### Convert arithmetic to geometric summary stats
summ.data.LN <- data.frame(x = summ.data[,1],
y = NtoLN(summ.data[,2], summ.data[,3])[1:length(summ.data[,1])],
s = NtoLN(summ.data[,2], summ.data[,3])[(length(summ.data[,1])+1):(2*length(summ.data[,1]))],
n = summ.data[,4]
)
b.Lognormal <- bartlett(sd = log(summ.data.LN[,3]), n = summ.data.LN[,4])
# Data for default analyses
data_N = do.call("PREP_DATA_N", argList)
data_LN = do.call("PREP_DATA_LN", argList)
## Data for sensitivity analysis
summ.data.LN.sens1 <- summ.data.LN
summ.data.LN.sens1$s <- min(summ.data.LN.sens1$s) # minimum geometric sd
argList$data <- summ.data.LN.sens1
argList <- append(argList, list(geom.stats = T)) # specify that geometric summary stats are given as input
data_LN_sens1 <- do.call("PREP_DATA_LN", argList)
summ.data.LN.sens2 <- summ.data.LN
summ.data.LN.sens2$s <- max(summ.data.LN.sens2$s) # maximum geometric sd
argList$data <- summ.data.LN.sens2
data_LN_sens2 <- do.call("PREP_DATA_LN", argList)
analysisData <- list(data = list(
default = list(data_N = data_N, data_LN = data_LN, prior.weights = c(rep(1,8), rep(1,8))),
defaultAdaptedWeights = list(data_N = data_N, data_LN = data_LN, prior.weights = c(rep(1,8), rep(0,8))),  # set weights to 0 for Lognormal
minVar = list(data_N = data_N, data_LN = data_LN_sens1, prior.weights = c(rep(1,8), rep(1,8))),
maxVar = list(data_N = data_N, data_LN = data_LN_sens2, prior.weights = c(rep(1,8), rep(1,8)))
), warning = NULL
)
# Fit models
argListFit <- list(
data.N = analysisData$data$minVar$data_N,
data.LN = analysisData$data$minVar$data_LN,
prior.weights = c(rep(0,8), rep(1,8)),
ndraws = 30000
)
fittedModels <- do.call("full.laplace_MA", argListFit)
modelSummary <- summary.BMADR(fittedModels, type = "continuous")
modelSummary$BMDWeights
# simulated data
par = c(10.58,0.38,1.91,2)
doses <- c(0,6.25,12.5,25,50,100)/100
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
sd = 2.28
covmat2 = covmat*sd^2
q = 0.1
means = DRM.E4_NI(par, doses, q)
set.seed(34545)
sim_data = c()
for(i in 1){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
anydoseresponseC(data.input, use.mcmc = F)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
data_N$shapiro.msg; data_N$shapiro.p
data_LN$shapiro.msg; data_LN$shapiro.p
data_N$bartlett.msg; data_N$bartlett.p
data_LN$bartlett.msg; data_LN$bartlett.p
prior.weights = c(rep(1,16))
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# test whether best-fitting model fits wel (BF < 10 means equally well as saturated model; BF > 10 means best fit is better than saturated model)
FLBMD$bf
data_N$data$m
data_N$data
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
# simulated data
par = c(10.58,0.38,1.91,2)
doses <- c(0,6.25,12.5,25,50,100)/100
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
sd = 2.28
covmat2 = covmat*sd^2
q = 0.1
means = DRM.E4_NI(par, doses, q)
set.seed(34545)
sim_data = c()
for(i in 1){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
anydoseresponseC(data.input, use.mcmc = F)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
prior.weights = c(rep(1,16))
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
data.N = data_N
means.all <- data.N$data$data %>%
group_by(dose) %>%
summarise(mresp = mean(response))
dose.a = unique(data.N$data$data$dose)
mean.a = c()
for(m in 1:length(dose.a)){
mean.a[m] <- means.all$mresp[means.all$dose == dose.a[m]]
}
mean.a
means.all
library(dplyr)
means.all <- data.N$data$data %>%
group_by(dose) %>%
summarise(mresp = mean(response))
dose.a = unique(data.N$data$data$dose)
mean.a = c()
for(m in 1:length(dose.a)){
mean.a[m] <- means.all$mresp[means.all$dose == dose.a[m]]
}
means.all
data.N$data$data
data.N$data$data$dose
means.all <- data.N$data$data %>%
dplyr::group_by(dose) %>%
dplyr::summarise(mresp = mean(response))
means.all
dose.a = unique(data.N$data$data$dose)
mean.a = c()
for(m in 1:length(dose.a)){
mean.a[m] <- means.all$mresp[means.all$dose == dose.a[m]]
}
mean.a
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
# simulated data
par = c(10.58,0.38,1.91,2)
doses <- c(0,6.25,12.5,25,50,100)/100
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
sd = 2.28
covmat2 = covmat*sd^2
q = 0.1
means = DRM.E4_NI(par, doses, q)
set.seed(34545)
sim_data = c()
for(i in 1){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
anydoseresponseC(data.input, use.mcmc = F)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
prior.weights = c(rep(1,16))
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
warnings()
library('rstantools')
library('usethis')
library('roxygen2')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
## Compile package and generate the documentation
rstan_config() # recompile stan models
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
library(gamlss)
dose = c(0,6.25,12.5,25,50,100)
mean = c(10.87143,10.16669,10.81050,10.41179,12.38305,18.47681)
sd = c(1.804554,1.805939,3.858265,1.626007,2.045695,2.322449)
n = rep(10,6)
summ.data = data.frame(x = dose, y = mean, s = sd, n = n)
plot(summ.data$x, summ.data$y, type = 'l')
# Test for dose-response effect
anydoseresponseN(summ.data$x, summ.data$y, summ.data$s, summ.data$n) # normal distribution
anydoseresponseLN(summ.data$x, summ.data$y, summ.data$s, summ.data$n) # lognormal distribution
41+18.5
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior model weights
prior.weights = c(rep(1,8), rep(0,8))
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q)
FLBMD=full.laplace_MA(data_N,
data_LN,
prior.weights,
ndraws=ndr,
seed=123,
pvec=pvec)
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# test whether best-fitting model fits wel (BF < 10 means equally well as saturated model; BF > 10 means best fit is better than saturated model)
FLBMD$bf
# output as dataframe/list
BMDWeights(FLBMD, 'continuous')
summary.BMADR(FLBMD, type = 'continuous')
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", type = 'increasing', include_data = T, all = F, title = '')
pFLBMD$BMDs
pFLBMD$weights
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
pFLBMD$model_fit
pFLBMD$MA_fit
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", type = 'increasing', include_data = T, all = F, title = '', log = F)
pFLBMD$model_fit_N
SBMD = sampling_MA(data_N, data_LN,
prior.weights,
ndraws=ndr, nrchains=nrch,
nriterations=nriter, warmup=wu, delta=dl,
treedepth=trd, seed=sd, pvec=pvec)
# MA estimates
SBMD$MA_bridge_sampling
SBMD$MA_laplace
# convergence & divergence
SBMD$convergence
SBMD$divergences*100 # percentage of iterations that were divergent
# model-specific fit
SBMD$E4_N
# test whether best-fitting model fits wel (BF < 10 means equally well as saturated model; BF > 10 means best fit is better than saturated model)
SBMD$bf
# output as dataframe/list
BMDWeights(SBMD, 'continuous')
summary.BMADR(SBMD, 'continuous')
# plot output
pSBMD = plot.BMADR(SBMD, weight_type = "BS", type = 'increasing', include_data = T, all = F, title = '')
pSBMD$BMDs
pSBMD$weights
pSBMD$model_fit_N
pSBMD$model_fit_LN
pSBMD$model_fit
pSBMD$MA_fit
# plot prior vs posterior
plot_prior(SBMD, data_N$data, "E4_N", parms = T)
plot_prior(SBMD, data_LN$data, "P4_LN", parms = T)
# simulated data
par = c(10.58,0.38,1.91,2)
doses <- c(0,6.25,12.5,25,50,100)/100
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
sd = 2.28
covmat2 = covmat*sd^2
q = 0.1
means = DRM.E4_NI(par, doses, q)
set.seed(34545)
sim_data = c()
for(i in 1){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
anydoseresponseC(data.input, use.mcmc = F)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
data_N$shapiro.msg; data_N$shapiro.p
data_LN$shapiro.msg; data_LN$shapiro.p
data_N$bartlett.msg; data_N$bartlett.p
data_LN$bartlett.msg; data_LN$bartlett.p
prior.weights = c(rep(1,16))
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
pFLBMD <- plot.BMADR(FLBMD, 'increasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '')
pFLBMD$BMDs
pFLBMD$weights
pFLBMD$model_fit_N
pFLBMD <- plot.BMADR(FLBMD, 'increasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '', log = F)
pFLBMD$model_fit_N
dose = c(0, 5, 15, 50, 100)
y = c(0, 4, 6, 5, 12)
n = c(20, 20, 20, 20, 20)
summ.data = data.frame(x = dose, y = y, n = n)
# Test for dose-response effect (not optimal yet)
anydoseresponseQ(summ.data$x, summ.data$y, summ.data$n)
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior model weights
prior.weights = rep(1,8)
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_Q = PREP_DATA_QA(summ.data,
sumstats = T,
q = q)
FLBMD_Q = full.laplaceQ_MA(data_Q,
prior.weights,
ndraws=ndr,
seed=123,
pvec=pvec)
# MA estimates
FLBMD_Q$MA
# model weights
round(FLBMD_Q$weights,4)
# model-specific fit
FLBMD_Q$E4_Q
# output as dataframe/list
BMDWeights(FLBMD_Q, 'quantal')
summary.BMADR(FLBMD_Q, 'quantal')
# plot output
pFLBMD_Q = plot.BMADRQ(FLBMD_Q, weight_type = "LP", include_data = T, all = F, title = '')
pFLBMD_Q$BMDs
pFLBMD_Q$weights
pFLBMD_Q$model_fit
pFLBMD_Q$MA_fit
clusterdata <- data.frame(
dose = c(rep(c(0, 0.2, 0.6, 6, 60, 120), c(26, 22, 24, 26, 19, 16))),
y = c(1,1,0,0,0,0,0,2,1,3,0,0,0,0,0,0, 0, 1,0,0,0,0,
2,0,1,0,3, 0,3,0,1,0,1,1,0,4,0,0,1, 0,  0,  0,  0,  2,  0,  0,  0,
0,  0,  0,  4,  0,  4,  0,  1,  0,  0,  0,  0,1,  3, 1,  0,  0,  5,
0,  0,  1,  5,  0,  1,  0,  0,  6,  0,  1,  1,  0, 2,  0,  0,  0,  1,
11,  0,  5,  5,  0,  3,  0,  0,  3,  0,  0,  0,  2,  5,  3,  6,  1,  1, 10,  3,
4,  2,  3,  2,  2,  2,  9,  3,  2,  1,  0,  1,  3,  2, 3,  3,  7,  0,
5,  3,  2,  6,  3,  1,  2,  6,  3,  3, 2,  2),
n = c(12,12,12,13,1, 13,10,14, 12, 12, 14, 13, 12, 11, 15, 14, 11, 11, 12, 11, 14, 12, 13, 13, 14, 13,
8, 14, 10, 13, 14, 12, 10, 10, 11, 10, 12, 12, 14, 14,  9,  8, 12,  9, 13,  9, 13, 12, 12, 13, 10,
13,  9, 11,  9, 10, 12, 14,  5,  9,  9,  8,  7, 13, 14, 12, 13, 15, 11, 11,  7, 14,  8,  9, 12,
6,  9,  9, 13, 10,  4,  8, 10, 11,  7, 10, 10,  7, 12,  7, 11, 14,  4,  7,  6,  2,  5,  9,  6,  1,
1, 10,  3,  4,  3,  5,  2,  4,  2,  9,  3,  6,  1,  4,  1, 10,  2, 3,  3,  7,  1,  5,  3,  2,  6,
8,  1,  2,  6,  3,  3,  2, 2),
liter = c(1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1)
)
anydoseresponseQ(clusterdata$dose, clusterdata$y, clusterdata$n, cluster = T, use.mcmc = F)
clusterdataQ <- PREP_DATA_QA(data = clusterdata, sumstats = TRUE,
q = 0.1, bkg = NULL, shape.a = 4, shape.BMD = 0.0001,
cluster = TRUE)
pw <- rep(1, 8)
### Laplace Approximation
testbb_laplace <- full.laplaceQ_MA(data.Q = clusterdataQ, prior.weights = pw)
# MA estimates
testbb_laplace$MA
# model weights
round(testbb_laplace$weights,4)
# model-specific fit
testbb_laplace$E4_Q
# output as dataframe/list
BMDWeights(testbb_laplace, 'quantal')
summary.BMADR(testbb_laplace, 'quantal')
data.test <- read.csv('test_data.csv', header = T, sep = ';')
summ.data <- data.frame(
x = data.test$Dose,
y = data.test$Mean,
s = data.test$SD,
n = data.test$N,
cov = data.test$group
)
