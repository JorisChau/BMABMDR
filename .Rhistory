prior.weights,
ndraws=ndr, nrchains=nrch,
nriterations=nriter, warmup=wu, delta=dl,
treedepth=trd, seed=sd, pvec=pvec)
# MA estimates
SBMD$MA_bridge_sampling
SBMD$MA_laplace
# convergence & divergence
SBMD$convergence
SBMD$divergences*100 # percentage of iterations that were divergent
# model-specific fit
SBMD$E4_N
# test whether best-fitting model fits wel (BF < 10 means equally well as saturated model; BF > 10 means best fit is better than saturated model)
SBMD$bf
# output as dataframe/list
BMDWeights(SBMD, 'continuous')
summary.BMADR(SBMD, 'continuous')
# plot output
pSBMD = plot.BMADR(SBMD, weight_type = "BS", type = 'increasing', include_data = T, all = F, title = '', conv = F)
pSBMD$BMDs
pSBMD$weights
pSBMD$model_fit_N
pSBMD$model_fit_LN
pSBMD$model_fit
pSBMD$MA_fit
# plot prior vs posterior
plot_prior(SBMD, data_N$data, "E4_N", parms = T)
plot_prior(SBMD, data_LN$data, "P4_LN", parms = T)
# simulated data
par = c(10.58,0.38,1.91,2)
doses <- c(0,6.25,12.5,25,50,100)/100
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
sd = 2.28
covmat2 = covmat*sd^2
q = 0.1
means = DRM.E4_NI(par, doses, q)
set.seed(34545)
sim_data = c()
for(i in 1){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
# preliminary tests
data_N$shapiro.msg; data_N$shapiro.p
data_LN$shapiro.msg; data_LN$shapiro.p
data_N$bartlett.msg; data_N$bartlett.p
data_LN$bartlett.msg; data_LN$bartlett.p
prior.weights = c(rep(1,4), rep(0,12))
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
FLBMD$w.msg
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# test whether best-fitting model fits wel (BF < 10 means equally well as saturated model; BF > 10 means best fit is better than saturated model)
FLBMD$bf
# output as dataframe/list
BMDWeights(FLBMD, 'continuous')
pFLBMD <- plot.BMADR(FLBMD, 'increasing', clustered = T, weight_type = 'LP', include_data = T, all = F, title = '', log = F)
pFLBMD$BMDs
pFLBMD$weights
pFLBMD$model_fit_N
pFLBMD$model_fit_LN
pFLBMD$model_fit
pFLBMD$MA_fit
SBMD <- sampling_MAc(data_N, data_LN, prior.weights = c(1,1,rep(0,14)))
SBMD$convergence
dose = c(0, 5, 15, 50, 100)
y = c(0, 4, 6, 5, 12)
n = c(20, 20, 20, 20, 20)
summ.data = data.frame(x = dose, y = y, n = n)
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior model weights
prior.weights = c(rep(1,4), rep(1,4))
# bmr
q = 0.1
# prior model weights
prior.weights = c(rep(1,4), rep(0,4))
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_Q = PREP_DATA_QA(summ.data,
sumstats = T,
q = q)
FLBMD_Q = full.laplaceQ_MA(data_Q,
prior.weights,
ndraws=ndr,
seed=123,
pvec=pvec)
# MA estimates
FLBMD_Q$MA
# model weights
round(FLBMD_Q$weights,4)
# model-specific fit
FLBMD_Q$E4_Q
# output as dataframe/list
BMDWeights(FLBMD_Q, 'quantal')
summary.BMADR(FLBMD_Q, 'quantal')
# plot output
pFLBMD_Q = plot.BMADRQ(FLBMD_Q, weight_type = "LP", include_data = T, all = F, title = '')
pFLBMD_Q$BMDs
pFLBMD_Q$weights
pFLBMD_Q$model_fit
pFLBMD_Q$MA_fit
# plot prior vs posterior
plot_priorQ(FLBMD_Q, data_Q$data, "E4_Q")
SBMD_Q = samplingQ_MA(data_Q,
prior.weights,
ndraws=ndr, nrchains=nrch,
nriterations=nriter, warmup=wu, delta=dl,
treedepth=trd, seed=sd, pvec=pvec)
# MA estimates
SBMD_Q$MA_bridge_sampling
SBMD_Q$MA_laplace
warnings()
# plot output
pSBMD_Q = plot.BMADRQ(SBMD_Q, weight_type = "BS", include_data = T, all = F, title = '', conv = FALSE)
pSBMD_Q$BMDs
pSBMD_Q$weights
pSBMD_Q$model_fit
pSBMD_Q$MA_fit
# plot prior vs posterior
plot_priorQ(SBMD_Q, data_Q$data, "E4_Q")
data.test <- read.csv('./data/test_data.csv', header = T, sep = ';')
summ.data <- data.frame(
x = data.test$Dose,
y = data.test$Mean,
s = data.test$SD,
n = data.test$N,
cov = data.test$group
)
q = 0.2
prior.weights = c(rep(1,4), rep(0,12))
FLBMD <- full.laplace_MA_Cov(summ.data,
sumstats = T,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T, extended.value = 3,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
basic.plot(FLBMD, 'E4_N', increasing = F)
basic.plot(FLBMD, 'E4_N', increasing = T)
data.test <- read.csv('../AllData (1).csv', header = T)
analysisData <- data.test[, c("oralexpo", "response", "sex")]
colnames(analysisData) <- c("dose", "response", "covariate")
q = 0.05
# data.test <- read.csv('./data/test_data.csv', header = T, sep = ';')
# summ.data <- data.frame(
#   x = data.test$Dose,
#   y = data.test$Mean,
#   s = data.test$SD,
#   n = data.test$N,
#   cov = data.test$group
# )
# q = 0.2
prior.weights = c(rep(1,4), rep(0,12))
FLBMD <- full.laplace_MA_Cov(analysisData,
sumstats = F,
sd = T, # option not used for Quantal data
q = q,
prior.d = 'N11',
extended = T, extended.value = 3,
ndraws = 30000,
seed = 123,
pvec = c(0.05, 0.5, 0.95),
prior.weights = prior.weights)
FLBMD$MA
FLBMD$summary
basic.plot(FLBMD, 'E4_N', increasing = F)
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# https://cran.r-project.org/bin/windows/base/howto-R-4.3.html
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
new_path <- gsub('rtools40', 'rtools43', old_path)
new_path <- gsub('R-4.1.0', 'R-4.3.1', new_path)
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
#worked with R 4.1.x:
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# new_path <- paste("C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", old_path, sep=";")
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
new_path
new_path <- paste("C:\\rtools43\\usr\\bin", new_path, sep=";")
new_path
#worked with R 4.1.x:
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
new_path <- paste("C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", new_path, sep=";")
new_path
Sys.setenv(PATH = new_path)
Sys.getenv("PATH")
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
new_path
library('rstantools')
library('usethis')
library('roxygen2')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
Sys.getenv("PATH")
library('rstantools')
library('usethis')
library('roxygen2')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
library('rstantools')
library('usethis')
library('roxygen2')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
old_path
new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
Sys.getenv("PATH")
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
library('rstantools')
library('usethis')
library('roxygen2')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin")
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
new_path <- paste("C:\\rtools43\\x86_64-w64-mingw32.static.posix\\bin")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
Sys.getenv("PATH")
library('rstantools')
library('usethis')
library('roxygen2')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
new_path <- paste("C:\\rtools43\\x86_64-w64-mingw32.static.posix\\bin", old_path, sep = ";")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
Sys.getenv("PATH")
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin/")
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# https://cran.r-project.org/bin/windows/base/howto-R-4.3.html
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
new_path <- paste("C:\\rtools43\\x86_64-w64-mingw32.static.posix\\bin", old_path, sep = ";")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# https://cran.r-project.org/bin/windows/base/howto-R-4.3.html
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
new_path <- paste("C:\\rtools43\\x86_64-w64-mingw32.static.posix\\bin", old_path, sep = ";")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
Sys.getenv("PATH")
library(inline)
detach("package:inline", unload = TRUE)
install.packages("V8")
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# https://cran.r-project.org/bin/windows/base/howto-R-4.3.html
## Not working -> install 'V8' package -> TRY AGAIN
# library('V8')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
new_path <- paste("C:\\rtools43\\x86_64-w64-mingw32.static.posix\\bin", old_path, sep = ";")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# https://cran.r-project.org/bin/windows/base/howto-R-4.3.html
## Not working -> install 'V8' package -> TRY AGAIN
# library('V8')
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
# Sys.setenv(BINPREF = "C:/rtools43/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools43/x86_64-w64-mingw32.static.posix/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\rtools43\\usr", old_path, sep=";")
new_path <- paste("C:\\rtools43\\x86_64-w64-mingw32.static.posix\\bin", old_path, sep = ";")
# new_path <- paste(old_path, "C:\\rtools43\\mingw32\\bin;C:\\rtools43\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
library(BMABMDR)
roxygen2::roxygenize()
warnings()
library(BMABMDR)
?full_Laplace
?full.laplace_MA
