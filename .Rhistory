init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
# Fit shape to quantiles
qnr <- 1000
q.y.new <- quantile(y.new, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l2 <- q.y.new[1:qnr]
qdat_r2 <- q.y.new[2:(qnr+1)]
qdat_m2 <- (qdat_l2 + qdat_r2)/2
# compare original data and consecutive mean quantiles
summary(y.new); summary(qdat_m2)
par(mfrow=c(2,2))
hist(y.new); hist(qdat_m2)
plot(density(y.new)); plot(density(qdat_m2))
q.data2 <- qdat_m2
data_quantiles2 <- list(N = length(q.data2), y = q.data2, min_obs = min(q.data2), max_obs = max(q.data2))
fit.pert.mult2 <- rstan::sampling(mod_pert2, data = data_quantiles2, init = init_ll, chains = 3)
head(as.matrix(fit.pert.mult2))
est.shape.mult2 <- median(as.matrix(fit.pert.mult2)[,1])
est.mode.mult2 <- median(as.matrix(fit.pert.mult2)[,2])
### PLOT FIT ###
par(mfrow = c(1,1))
hist(y.new, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.6), main = '')
curve(dpert(x, min = min(q.data2), mode = est.mode.mult2, max = max(q.data2), shape = est.shape.mult2), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
# curve(dpert(x, min = min(y.new), mode = getmode(y.new), max = max(y.new), shape = est.shape2), col = 3, lty = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
# curve(dpert(x, min = min(y.new), mode = getmode(y.new), max = max(y.new), shape = est.shape3), col = 4, lty = 3, from = min(y.new), to = max(y.new), add = T, lwd = 2)
# curve(dpert(x, min = min(y.new), mode = getmode(y.new), max = max(y.new), shape = est.shape7), col = 5, lty = 4, from = min(y.new), to = max(y.new), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4), cex = 1)
save.image("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_test_pert_101023.RData")
library('rstantools')
library('usethis')
library('roxygen2')
# library(dplyr)
# ?rstan_create_package
# rstan_create_package('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR',
# roxygen=T, travis=T, license=T, auto_config=T)
# Set working directory to the new package directory
setwd('C:\\Users\\lucp9385\\Documents\\GitHub\\BMABMDR')
list.files(all.files=T)
# file.show('DESCRIPTION')
# file.show('Read-and-delete-me')
# file.remove('Read-and-delete-me')
## Save all Stan files in the 'inst/stan' subdirectory
# when installing the package these will be saved in the list 'stanmodels' that is used by R to function the package
## All functions to be used by R should be saved in the 'R/' directory
Sys.getenv("BINPREF") # should be "C:/Rtools/mingw64/bin/"
# Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
# Sys.setenv(BINPREF = "C:/rtools40/mingw$(WIN)/bin/")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
# new_path <- paste("C:\\Rtools\\usr\\bin", old_path, sep=";")
new_path <- paste(old_path, "C:\\rtools40\\mingw32\\bin;C:\\rtools40\\mingw64\\bin", sep=";")
# # new_path
Sys.setenv(PATH = new_path)
####################################################################################
####################################################################################
### Instructions for publishing a package on CRAN: https://r-pkgs.org/release.html
# https://cran.r-project.org/web/packages/rstantools/vignettes/minimal-rstan-package.html
## Compile package and generate the documentation
rstan_config() # recompile stan models
# example(source)
# try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# # roxygen2::roxygenize(load_code = sourceDir) # generate documentation
pkgbuild::compile_dll()
roxygen2::roxygenize()
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_test_pert_101023.RData")
par(mfrow = c(1,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = getmode(y), max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = getmode(s.data), max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = getmode(q.data), max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = getmode(q.data2), max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
# Fit shape to sample of full data
s.data <- sample(y, size = 1000, replace = FALSE)
hist(s.data)
data_sample <- list(N = length(s.data), y = s.data, min_obs = min(s.data), max_obs = max(s.data), mode_obs = getmode(s.data))
fit.pert2 <- rstan::sampling(mod_pert, data = data_sample, init = init_ll, chains = 3)
head(as.matrix(fit.pert2))
est.shape2 <- median(as.matrix(fit.pert2)[,1])
mod_pert <- stan_model("pert.stan")
library(rstan)
library(mc2d)
fit.pert2 <- rstan::sampling(mod_pert, data = data_sample, init = init_ll, chains = 3)
# Fit shape to sample of full data
s.data <- sample(y, size = 1000, replace = FALSE)
hist(s.data)
data_sample <- list(N = length(s.data), y = s.data, min_obs = min(s.data), max_obs = max(s.data), mode_obs = getmode(s.data))
fit.pert2 <- rstan::sampling(mod_pert, data = data_sample, init = init_ll, chains = 3)
mod_pert
est.shape2
head(as.matrix(fit.pert2))
load("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_test_pert_101023.RData")
head(as.matrix(fit.pert2))
est.shape2 <- median(as.matrix(fit.pert2)[,1])
par(mfrow = c(1,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = getmode(y), max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = getmode(s.data), max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = getmode(q.data), max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = getmode(q.data2), max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
hist(q.data2, prob = T, xlab = "quantiles y", ylab = 'density')
# Fit shape to quantiles
qnr <- 100
q.y <- quantile(y, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l <- q.y[1:qnr]
qdat_r <- q.y[2:(qnr+1)]
qdat_m <- (qdat_l + qdat_r)/2
# compare original data and consecutive mean quantiles
summary(y); summary(qdat_m)
par(mfrow=c(2,2))
hist(y); hist(qdat_m)
plot(density(y)); plot(density(qdat_m))
q.data <- qdat_m
data_quantiles <- list(N = length(q.data), y = q.data, min_obs = min(q.data), max_obs = max(q.data), mode_obs = getmode(q.data))
qnr <- 1000
q.y <- quantile(y, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l <- q.y[1:qnr]
qdat_r <- q.y[2:(qnr+1)]
qdat_m <- (qdat_l + qdat_r)/2
# compare original data and consecutive mean quantiles
summary(y); summary(qdat_m)
par(mfrow=c(2,2))
hist(y); hist(qdat_m)
plot(density(y)); plot(density(qdat_m))
q.data2 <- qdat_m
par(mfrow = c(1,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = getmode(y), max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = getmode(s.data), max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = getmode(q.data), max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = getmode(q.data2), max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
# Fit shape to sample of full data
s.data <- sample(y, size = 1000, replace = FALSE)
hist(s.data)
par(mfrow = c(1,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = getmode(y), max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = getmode(s.data), max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = getmode(q.data), max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = getmode(q.data2), max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
par(mfrow = c(2,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = getmode(y), max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = getmode(s.data), max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = getmode(q.data), max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = getmode(q.data2), max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
# par(mfrow = c(1,1))
hist(y2, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.8), main = '')
curve(dpert(x, min = min(y2), mode = getmode(y2), max = max(y2), shape = est.shape4), col = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(s.data2), mode = getmode(s.data2), max = max(s.data2), shape = est.shape5), col = 3, lty = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(q.data3), mode = getmode(q.data3), max = max(q.data3), shape = est.shape6), col = 4, lty = 3, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(q.data4), mode = getmode(q.data4), max = max(q.data4), shape = est.shape8), col = 5, lty = 4, from = min(y2), to = max(y2), add = T, lwd = 2)
par(mfrow=c(1,1))
# par(mfrow = c(1,1))
hist(y2, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.8), main = '')
curve(dpert(x, min = min(y2), mode = getmode(y2), max = max(y2), shape = est.shape4), col = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(s.data2), mode = getmode(s.data2), max = max(s.data2), shape = est.shape5), col = 3, lty = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(q.data3), mode = getmode(q.data3), max = max(q.data3), shape = est.shape6), col = 4, lty = 3, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(q.data4), mode = getmode(q.data4), max = max(q.data4), shape = est.shape8), col = 5, lty = 4, from = min(y2), to = max(y2), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
### PLOT FIT ###
par(mfrow = c(1,1))
hist(y.new, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.6), main = '')
curve(dpert(x, min = min(q.data2), mode = est.mode.mult2, max = max(q.data2), shape = est.shape.mult2), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
est.shape.mult2
hist(y.new)
initf2 <- function(chain_id = 1){
list(shape = 0.0001, mode = getmode(y.new))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
data_full_mult <- list(N = length(y.new), y = y.new, min_obs = min(y.new), max_obs = max(y.new))
fit.pert.mult <- rstan::sampling(mod_pert2, data = data_full_mult, init = init_ll, chains = 3)
head(as.matrix(fit.pert.mult))
est.shape.mult <- median(as.matrix(fit.pert.mult)[,1])
est.mode.mult <- median(as.matrix(fit.pert.mult)[,2])
# Fit shape to sample of full data
s.data.mult <- sample(y.new, size = 1000, replace = FALSE)
hist(s.data.mult)
data_sample_mult <- list(N = length(s.data.mult), y = s.data.mult, min_obs = min(s.data.mult), max_obs = max(s.data.mult))
fit.pert.mult3 <- rstan::sampling(mod_pert2, data = data_sample_mult, init = init_ll, chains = 3)
head(as.matrix(fit.pert.mult3))
est.shape.mult3 <- median(as.matrix(fit.pert.mult3)[,1])
est.mode.mult3 <- median(as.matrix(fit.pert.mult3)[,2])
# Fit shape to quantiles
qnr <- 1000
q.y.new <- quantile(y.new, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l2 <- q.y.new[1:qnr]
qdat_r2 <- q.y.new[2:(qnr+1)]
qdat_m2 <- (qdat_l2 + qdat_r2)/2
# compare original data and consecutive mean quantiles
summary(y.new); summary(qdat_m2)
par(mfrow=c(2,2))
hist(y.new); hist(qdat_m2)
plot(density(y.new)); plot(density(qdat_m2))
q.data.mult <- qdat_m2
data_quantiles2 <- list(N = length(q.data.mult), y = q.data.mult, min_obs = min(q.data.mult), max_obs = max(q.data.mult))
fit.pert.mult2 <- rstan::sampling(mod_pert2, data = data_quantiles2, init = init_ll, chains = 3)
head(as.matrix(fit.pert.mult2))
est.shape.mult2 <- median(as.matrix(fit.pert.mult2)[,1])
est.mode.mult2 <- median(as.matrix(fit.pert.mult2)[,2])
### PLOT FIT ###
par(mfrow = c(1,1))
hist(y.new, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.6), main = '')
curve(dpert(x, min = min(y.new), mode = est.mode.mult, max = max(y.new), shape = est.shape.mult), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(s.data.mult), mode = est.mode.mult3, max = max(s.data.mult), shape = est.shape.mult3), col = 3, lty = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(q.data.mult), mode = est.mode.mult2, max = max(q.data.mult), shape = est.shape.mult2), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
hist(y.new, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.3), main = '')
curve(dpert(x, min = min(y.new), mode = est.mode.mult, max = max(y.new), shape = est.shape.mult), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(s.data.mult), mode = est.mode.mult3, max = max(s.data.mult), shape = est.shape.mult3), col = 3, lty = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(q.data.mult), mode = est.mode.mult2, max = max(q.data.mult), shape = est.shape.mult2), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
### PLOT FIT ###
par(mfrow = c(1,1))
hist(y.new, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.3), main = '')
curve(dpert(x, min = min(y.new), mode = est.mode.mult, max = max(y.new), shape = est.shape.mult), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(s.data.mult), mode = est.mode.mult3, max = max(s.data.mult), shape = est.shape.mult3), col = 3, lty = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(q.data.mult), mode = est.mode.mult2, max = max(q.data.mult), shape = est.shape.mult2), col = 5, lty = 4, from = min(y.new), to = max(y.new), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '1000 quantiles'), col = c(2,3,5), lwd = c(2,2,2), lty = c(1,2,4), cex = 1)
## estimate shape only
initf2 <- function(chain_id = 1){
list(shape = 0.0001)
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
data_full_mult_s <- list(N = length(y.new), y = y.new, min_obs = min(y.new), max_obs = max(y.new), mode_obs = getmode(y.new))
fit.pert.mult_s <- rstan::sampling(mod_pert2, data = data_full_mult_s, init = init_ll, chains = 3)
fit.pert.mult_s <- rstan::sampling(mod_pert, data = data_full_mult_s, init = init_ll, chains = 3)
mod_pert
# Fit shape to sample of full data
s.data.mult.s <- sample(y.new, size = 1000, replace = FALSE)
hist(s.data.mult.s)
data_sample_mult_s <- list(N = length(s.data.mult.s), y = s.data.mult.s, min_obs = min(s.data.mult.s), max_obs = max(s.data.mult.s), mode_obs = getmode(s.data.mult.s))
fit.pert.mult.s3 <- rstan::sampling(mod_pert, data = data_sample_mult_s, init = init_ll, chains = 3)
# Fit shape to quantiles
qnr <- 1000
q.y.new <- quantile(y.new, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l2 <- q.y.new[1:qnr]
qdat_r2 <- q.y.new[2:(qnr+1)]
qdat_m2 <- (qdat_l2 + qdat_r2)/2
# compare original data and consecutive mean quantiles
summary(y.new); summary(qdat_m2)
par(mfrow=c(2,2))
hist(y.new); hist(qdat_m2)
plot(density(y.new)); plot(density(qdat_m2))
q.data.mult.s <- qdat_m2
data_quantiles.s2 <- list(N = length(q.data.mult.s), y = q.data.mult.s, min_obs = min(q.data.mult.s), max_obs = max(q.data.mult.s), mode_obs = getmode(q.data.mult.s))
fit.pert.mult.s2 <- rstan::sampling(mod_pert, data = data_quantiles.s2, init = init_ll, chains = 3)
fit.pert.mult.s2 <- rstan::sampling(mod_pert, data = data_quantiles.s2, chains = 3)
head(as.matrix(fit.pert.mult.s2))
est.shape.mult2 <- median(as.matrix(fit.pert.mult.s2)[,1])
est.mode.mult2 <- median(as.matrix(fit.pert.mult.s2)[,2])
est.shape.mult2
est.mode.mult2
est.shape.mult.s2 <- median(as.matrix(fit.pert.mult.s2)[,1])
fit.pert.mult_s <- rstan::sampling(mod_pert, data = data_full_mult_s, chains = 3)
head(as.matrix(fit.pert.mult_s))
est.shape.mult.s <- median(as.matrix(fit.pert.mult_s)[,1])
est.mode.mult.s <- median(as.matrix(fit.pert.mult_s)[,2])
fit.pert.mult.s3 <- rstan::sampling(mod_pert, data = data_sample_mult_s, chains = 3)
head(as.matrix(fit.pert.mult.s3))
est.shape.mult.s3 <- median(as.matrix(fit.pert.mult.s3)[,1])
est.mode.mult.s3 <- median(as.matrix(fit.pert.mult.s3)[,2])
### PLOT FIT ###
par(mfrow = c(1,1))
hist(y.new, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.3), main = '')
curve(dpert(x, min = min(y.new), mode = est.mode.mult, max = max(y.new), shape = est.shape.mult.s), col = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(s.data.mult.s), mode = getmode(q.data.mult.s), max = max(s.data.mult.s), shape = est.shape.mult.s3), col = 3, lty = 2, from = min(y.new), to = max(y.new), add = T, lwd = 2)
curve(dpert(x, min = min(q.data.mult.s), mode = getmode(s.data.mult.s), max = max(q.data.mult.s), shape = est.shape.mult.s2), col = 5, lty = 4, from = min(y.new), to = max(y.new), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '1000 quantiles'), col = c(2,3,5), lwd = c(2,2,2), lty = c(1,2,4), cex = 1)
est.shape.mult.s2
save.image("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_test_pert_101023.RData")
## Case 1: Symmetric
true.min <- 2
true.mode <- 5
true.max <- 8
true.shape <- 4
y <- rpert(30000, min = true.min, mode = true.mode, max = true.max, shape = true.shape)
hist(y)
# Fit shape to full data
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(y))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
data_full <- list(N = length(y), y = y, min_obs = min(y), max_obs = max(y))
fit.pert1 <- rstan::sampling(mod_pert2, data = data_full, init = init_ll, chains = 3)
head(as.matrix(fit.pert1))
est.shape1 <- median(as.matrix(fit.pert1)[,1])
# Fit shape to sample of full data
s.data <- sample(y, size = 1000, replace = FALSE)
hist(s.data)
data_sample <- list(N = length(s.data), y = s.data, min_obs = min(s.data), max_obs = max(s.data), mode_obs = getmode(s.data))
fit.pert2 <- rstan::sampling(mod_pert, data = data_sample, init = init_ll, chains = 3)
head(as.matrix(fit.pert2))
est.shape2 <- median(as.matrix(fit.pert2)[,1])
# Fit shape to quantiles
qnr <- 100
q.y <- quantile(y, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l <- q.y[1:qnr]
qdat_r <- q.y[2:(qnr+1)]
qdat_m <- (qdat_l + qdat_r)/2
# compare original data and consecutive mean quantiles
summary(y); summary(qdat_m)
par(mfrow=c(2,2))
hist(y); hist(qdat_m)
plot(density(y)); plot(density(qdat_m))
q.data <- qdat_m
data_quantiles <- list(N = length(q.data), y = q.data, min_obs = min(q.data), max_obs = max(q.data), mode_obs = getmode(q.data))
ptm = proc.time()
fit.pert3 <- rstan::sampling(mod_pert, data = data_quantiles, init = init_ll, chains = 3)
proc.time() - ptm
head(as.matrix(fit.pert3))
est.shape3 <- median(as.matrix(fit.pert3)[,1])
qnr <- 1000
q.y <- quantile(y, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l <- q.y[1:qnr]
qdat_r <- q.y[2:(qnr+1)]
qdat_m <- (qdat_l + qdat_r)/2
# compare original data and consecutive mean quantiles
summary(y); summary(qdat_m)
par(mfrow=c(2,2))
hist(y); hist(qdat_m)
plot(density(y)); plot(density(qdat_m))
q.data2 <- qdat_m
data_quantiles2 <- list(N = length(q.data2), y = q.data2, min_obs = min(q.data2), max_obs = max(q.data2), mode_obs = getmode(q.data2))
ptm = proc.time()
fit.pert7 <- rstan::sampling(mod_pert, data = data_quantiles2, init = init_ll, chains = 3)
proc.time() - ptm
data_sample <- list(N = length(s.data), y = s.data, min_obs = min(s.data), max_obs = max(s.data), mode_obs = getmode(s.data))
fit.pert2 <- rstan::sampling(mod_pert2, data = data_sample, init = init_ll, chains = 3)
head(as.matrix(fit.pert2))
est.shape2 <- median(as.matrix(fit.pert2)[,1])
# Fit shape to quantiles
qnr <- 100
q.y <- quantile(y, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l <- q.y[1:qnr]
qdat_r <- q.y[2:(qnr+1)]
qdat_m <- (qdat_l + qdat_r)/2
# compare original data and consecutive mean quantiles
summary(y); summary(qdat_m)
par(mfrow=c(2,2))
hist(y); hist(qdat_m)
plot(density(y)); plot(density(qdat_m))
q.data <- qdat_m
data_quantiles <- list(N = length(q.data), y = q.data, min_obs = min(q.data), max_obs = max(q.data), mode_obs = getmode(q.data))
fit.pert3 <- rstan::sampling(mod_pert2, data = data_quantiles, init = init_ll, chains = 3)
head(as.matrix(fit.pert3))
est.shape3 <- median(as.matrix(fit.pert3)[,1])
qnr <- 1000
q.y <- quantile(y, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l <- q.y[1:qnr]
qdat_r <- q.y[2:(qnr+1)]
qdat_m <- (qdat_l + qdat_r)/2
# compare original data and consecutive mean quantiles
summary(y); summary(qdat_m)
par(mfrow=c(2,2))
hist(y); hist(qdat_m)
plot(density(y)); plot(density(qdat_m))
q.data2 <- qdat_m
data_quantiles2 <- list(N = length(q.data2), y = q.data2, min_obs = min(q.data2), max_obs = max(q.data2), mode_obs = getmode(q.data2))
fit.pert7 <- rstan::sampling(mod_pert2, data = data_quantiles2, init = init_ll, chains = 3)
head(as.matrix(fit.pert7))
est.shape7 <- median(as.matrix(fit.pert7)[,1])
par(mfrow = c(1,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = getmode(y), max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = getmode(s.data), max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = getmode(q.data), max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = getmode(q.data2), max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
## Case 2: Skewed
true.min2 <- 2
true.mode2 <- 2.1
true.max2 <- 8
true.shape2 <- 4
y2 <- rpert(30000, min = true.min2, mode = true.mode2, max = true.max2, shape = true.shape2)
hist(y2)
# Fit shape to full data
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(y2))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
data_full2 <- list(N = length(y2), y = y2, min_obs = min(y2), max_obs = max(y2), mode_obs = getmode(y2))
fit.pert4 <- rstan::sampling(mod_pert2, data = data_full2, init = init_ll, chains = 3)
head(as.matrix(fit.pert4))
est.shape4 <- median(as.matrix(fit.pert4)[,1])
est.mode2 <- median(as.matrix(fit.pert1)[,2])
est.mode1 <- median(as.matrix(fit.pert1)[,2])
est.mode2 <- median(as.matrix(fit.pert2)[,2])
est.mode3 <- median(as.matrix(fit.pert3)[,2])
est.mode7 <- median(as.matrix(fit.pert7)[,2])
par(mfrow = c(1,1))
hist(y, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.4), main = '')
curve(dpert(x, min = min(y), mode = est.mode1, max = max(y), shape = est.shape1), col = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(s.data), mode = est.mode2, max = max(s.data), shape = est.shape2), col = 3, lty = 2, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data), mode = est.mode3, max = max(q.data), shape = est.shape3), col = 4, lty = 3, from = min(y), to = max(y), add = T, lwd = 2)
curve(dpert(x, min = min(q.data2), mode = est.mode7, max = max(q.data2), shape = est.shape7), col = 5, lty = 4, from = min(y), to = max(y), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
## Case 2: Skewed
true.min2 <- 2
true.mode2 <- 2.1
true.max2 <- 8
true.shape2 <- 4
y2 <- rpert(30000, min = true.min2, mode = true.mode2, max = true.max2, shape = true.shape2)
hist(y2)
# Fit shape to full data
initf2 <- function(chain_id = 1){
list(shape = 1, mode = getmode(y2))
}
init_ll <- lapply(1:3, function(id) initf2(chain_id = id))
data_full2 <- list(N = length(y2), y = y2, min_obs = min(y2), max_obs = max(y2), mode_obs = getmode(y2))
fit.pert4 <- rstan::sampling(mod_pert2, data = data_full2, init = init_ll, chains = 3)
head(as.matrix(fit.pert4))
est.shape4 <- median(as.matrix(fit.pert4)[,1])
est.mode4 <- median(as.matrix(fit.pert4)[,2])
# Fit shape to sample of full data
s.data2 <- sample(y2, size = 1000, replace = FALSE)
hist(s.data2)
data_sample2 <- list(N = length(s.data2), y = s.data2, min_obs = min(s.data2), max_obs = max(s.data2), mode_obs = getmode(s.data2))
fit.pert5 <- rstan::sampling(mod_pert2, data = data_sample2, init = init_ll, chains = 3)
head(as.matrix(fit.pert5))
est.shape5 <- median(as.matrix(fit.pert5)[,1])
est.mode5 <- median(as.matrix(fit.pert5)[,2])
# Fit shape to quantiles
qnr <- 100
q.y2 <- quantile(y2, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l2 <- q.y2[1:qnr]
qdat_r2 <- q.y2[2:(qnr+1)]
qdat_m2 <- (qdat_l2 + qdat_r2)/2
# compare original data and consecutive mean quantiles
summary(y2); summary(qdat_m2)
par(mfrow=c(2,2))
hist(y2); hist(qdat_m2)
plot(density(y2)); plot(density(qdat_m2))
q.data3 <- qdat_m2
data_quantiles2 <- list(N = length(q.data3), y = q.data3, min_obs = min(q.data3), max_obs = max(q.data3), mode_obs = getmode(q.data3))
fit.pert6 <- rstan::sampling(mod_pert2, data = data_quantiles2, init = init_ll, chains = 3)
head(as.matrix(fit.pert6))
est.shape6 <- median(as.matrix(fit.pert6)[,1])
est.mode6 <- median(as.matrix(fit.pert6)[,2])
qnr <- 1000
q.y2 <- quantile(y2, seq(0,1,1/qnr))
# taking the average of two consecutive quantiles
qdat_l2 <- q.y2[1:qnr]
qdat_r2 <- q.y2[2:(qnr+1)]
qdat_m2 <- (qdat_l2 + qdat_r2)/2
# compare original data and consecutive mean quantiles
summary(y2); summary(qdat_m2)
par(mfrow=c(2,2))
hist(y2); hist(qdat_m2)
plot(density(y2)); plot(density(qdat_m2))
q.data4 <- qdat_m2
data_quantiles4 <- list(N = length(q.data4), y = q.data4, min_obs = min(q.data4), max_obs = max(q.data4), mode_obs = getmode(q.data4))
fit.pert8 <- rstan::sampling(mod_pert2, data = data_quantiles4, init = init_ll, chains = 3)
head(as.matrix(fit.pert8))
est.shape8 <- median(as.matrix(fit.pert8)[,1])
est.mode8 <- median(as.matrix(fit.pert8)[,2])
par(mfrow = c(2,1))
# par(mfrow = c(1,1))
hist(y2, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.8), main = '')
curve(dpert(x, min = min(y2), mode = est.shape4, max = max(y2), shape = est.shape4), col = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(s.data2), mode = est.shape5, max = max(s.data2), shape = est.shape5), col = 3, lty = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(q.data3), mode = est.shape6, max = max(q.data3), shape = est.shape6), col = 4, lty = 3, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(q.data4), mode = est.shape8, max = max(q.data4), shape = est.shape8), col = 5, lty = 4, from = min(y2), to = max(y2), add = T, lwd = 2)
legend('topright', c('Full posterior', 'Sample N = 1000', '100 quantiles','1000 quantiles'), col = c(2,3,4,5), lwd = c(2,2,2,2), lty = c(1,2,3,4))
par(mfrow = c(2,1))
# par(mfrow = c(1,1))
hist(y2, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.8), main = '')
curve(dpert(x, min = min(y2), mode = est.mode4, max = max(y2), shape = est.shape4), col = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
par(mfrow = c(1,1))
hist(y2, prob = T, xlab = "y", ylab = "Density", ylim = c(0,0.8), main = '')
curve(dpert(x, min = min(y2), mode = est.mode4, max = max(y2), shape = est.shape4), col = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
curve(dpert(x, min = min(s.data2), mode = est.mode5, max = max(s.data2), shape = est.shape5), col = 3, lty = 2, from = min(y2), to = max(y2), add = T, lwd = 2)
est.mode5
est.shape5
curve(dpert(x, min = min(q.data3), mode = est.mode6, max = max(q.data3), shape = est.shape6), col = 4, lty = 3, from = min(y2), to = max(y2), add = T, lwd = 2)
s.data2
min(s.data2)
max(s.data2)
est.mode5
est.mode8
est.mode5 <- median(as.matrix(fit.pert5)[,2])
head(as.matrix(fit.pert5))
est.shape5 <- median(as.matrix(fit.pert5)[,1])
est.mode5 <- median(as.matrix(fit.pert5)[,2])
est.mode5
getmode(s.data2)
est.mode6
est.mode8
est.shape8
est.shape6
est.shape5
est.shape4
est.mode4
hist(s.data2)
head(as.matrix(fit.pert5))
est.shape5 <- median(as.matrix(fit.pert5)[,1])
est.mode5 <- median(as.matrix(fit.pert5)[,2])
est.shape5
est.mode5
save.image("G:/My Drive/UHasselt/Consultancy/EFSA/BMD INFPRIOR/TRYOUT ANALYSIS/WS_test_pert_101023_s+m.RData")
