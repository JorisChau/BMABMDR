# ****************************************************************
# Date: 12-10-2023
# Author: jchau
# 
# Job description:
# 1. setup R
# 2. install R-package dependencies
# 3. run R CMD check
# 4. if R CMD check fails, upload check results
# 5. if R CMD check successful and R-version is 'release' (default), 
#    upload source R-package as artifact
# 6. if R CMD check successful and binary R-package is built 
#    upload binary R-package as artifact
# ****************************************************************

name: check-build-windows-job
  
on:
  workflow_call:
    inputs:
      rver:
        description: 'R-version used to execute job'
        required: true
        type: string
        default: 'release'
      build_source:
        description: 'Build/upload source version of R-package'
        required: true
        type: boolean
        default: false
      build_binary: 
        description: 'Build/upload binary version of R-package'
        required: true
        type: boolean
        default: true
      check_args:
        description: 'Additional arguments passed to R CMD check, already includes --no-manual --no-build-vignettes by default'
        required: false
        type: string

jobs:
  check-upload:
    runs-on: windows-latest
    name: windows-latest (R-${{ inputs.rver }})
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_VER: ${{ inputs.rver }}
    steps:
      - uses: actions/checkout@v2
      # - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ inputs.rver }}
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: | 
            any::pkgbuild
      - name: build R-package (source)
        id: build-source 
        run: |
          pkg <- pkgbuild::build()
          cat("name=", basename(pkg), "\n", "path=", file.path(pkg), "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
          if(Sys.getenv("BUILD_SOURCE") == "true") {
            dir.create("pkg_source")
            file.copy(from = pkg, to = file.path("pkg_source", basename(pkg)))
          }
        shell: Rscript {0}
        env: 
          BUILD_SOURCE: ${{ inputs.build_source }}
      - name: check R-package
        run: |
          mkdir ${{ inputs.rver }}
          R CMD check ${{ steps.build-source.outputs.path }} --no-manual --no-build-vignettes ${{ inputs.check_args }} --output=${{ inputs.rver }}
        shell: cmd
      - name: upload R-package (source)
        if: success() && inputs.build_source
        uses: actions/upload-artifact@v3
        with: 
          name: src
          path: pkg_source
          if-no-files-found: ignore
      - name: build R-package (binary)
        id: build-binary
        if: success() && inputs.build_binary
        run: pkgbuild::build(binary = TRUE, dest_path = Sys.getenv("R_VER"))
        shell: Rscript {0}
      - name: upload check results + R-package (binary) 
        if: success() && inputs.build_binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.rver }}
          path: ${{ inputs.rver }}
          if-no-files-found: error
