for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
dim(sim_data)
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
dim(simulated_data)
head(simulated_data)
plot(simulated_data$dose, simulated_data$resp)
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
dim(data.input)
head(data.input)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 10
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
dim(sim_data)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N(data.input, q, prior.d = 'N11')
?PREP_DATA_N_C
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_N <- BMABMDR::PREP_DATA_N_C(data.input, q, prior.d = 'N11')
rm(list=ls())
# install package from zip file
install.packages("~/GitHub/BMABMDR_0.0.0.9014.tar.gz", repos = NULL, type = "source")
library(BMABMDR)
library(gamlss)
## available models?
get_models('continuous')
get_models('quantal')
dose = c(0,6.25,12.5,25,50,100)
mean = c(10.87143,10.16669,10.81050,10.41179,12.38305,18.47681)
sd = c(1.804554,1.805939,3.858265,1.626007,2.045695,2.322449)
n = rep(10,6)
summ.data = data.frame(x = dose, y = mean, s = sd, n = n)
plot(summ.data$x, summ.data$y, type = 'l')
# sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
# prior model weights
prior.weights = c(rep(1,4), rep(1,4), rep(1,8))
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q,
prior.d = 'N11',
extended = T)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q,
prior.d = 'N11',
extended = T)
FLBMD=full.laplace_MA(data_N,
data_LN,
prior.weights,
ndraws=ndr,
seed=123,
pvec=pvec,
plot=F)
# MA estimates
FLBMD$MA
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", include_data = T, all = F, title = '')
pFLBMD$BMDs
pFLBMD$model_fit
pFLBMD$MA_fit
SBMD = sampling_MA(data_N, data_LN,
prior.weights,
ndraws=ndr, nrchains=nrch,
nriterations=nriter, warmup=wu, delta=dl,
treedepth=trd, seed=sd, pvec=pvec,
plot=F)
# plot output
pSBMD = plot.BMADR(SBMD, weight_type = "BS", include_data = T, all = F, title = '')
pSBMD$BMDs
pSBMD$model_fit
pSBMD$MA_fit
# Simulated data
par = c(10.58, 0.38, 1.91, 3.5)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
rm(list=ls())
library(BMABMDR)
library(gamlss)
rm(list=ls())
# install package from zip file
install.packages("~/GitHub/BMABMDR_0.0.0.9014.tar.gz", repos = NULL, type = "source")
library(BMABMDR)
library(gamlss)
## available models?
get_models('continuous')
get_models('quantal')
# Simulated data
par = c(10.58, 0.38, 1.91, 3.5)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.8, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
# Laplace approximation
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
?full.laplace_MAc
par = c(10.58, 0.38, 1.91, 3.5)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.2, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
# Laplace approximation
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# output as dataframe/list
BMDWeights(FLBMD, 'continuous')
summary.BMADR(FLBMD)
?summary.BMADR
summary.BMADR(FLBMD, clustered = T)
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", include_data = T, all = F, title = '')
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", clustered = T, include_data = T, all = F, title = '')
rm(list=ls())
library(BMABMDR)
library(gamlss)
## available models?
get_models('continuous')
get_models('quantal')
# Simulated data
par = c(10.58, 0.38, 1.91, 3.5)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.2, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
# Laplace approximation
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# output as dataframe/list
BMDWeights(FLBMD, 'continuous')
summary.BMADR(FLBMD, clustered = T) ## TO FIX: unused argument clustered = T in par_med(); also for plot
# Simulated data
par = c(10.58, 0.38, 1.91, 2)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.2, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
# Laplace approximation
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# Simulated data
par = c(10.58, 0.38, 1.91, 1.3)
doses <- c(0,6.25,12.5,25,50,100)/100
# Correlation
dim = 10 # number of observations per litter
ngroup = 20 # number of litters per dose
covmat = matrix(0.2, nrow = dim, ncol = dim) # correlation of 0.5
diag(covmat) = 1
library(mvtnorm)
nsims = 1
sd = 2.28
covmat2 = covmat*sd^2
means = DRM.H4_NI(par, doses, q = 0.1, shift = 0)
sim_data = c()
for(i in 1:nsims){
datmat = c()
cnt = 1
for(j in 1:length(doses)){
for(k in 1:ngroup){
datmat = rbind(datmat,
cbind(rep(doses[j], dim), rep(cnt, dim),
## CHANGE MEANS !!!
as.vector(rmvnorm(1, mean = rep(means[j], dim), sigma = covmat2))
)
)
cnt = cnt+1
}
}
sim_data = rbind(sim_data, as.vector(datmat[,3]))
}
## Sampling specification
ndr=30000
nrch=3;nriter=3000;wu=1000;dl=0.8;trd=10;sd=123
### Prior weights: vector with prior weight (0/1) for each of the 16 models
prior.weights = c(rep(1, 16))
q = 0.1
pvec = c(0.05,0.5,0.95)
simulated_data = data.frame(dose = rep(doses, each = dim*ngroup),
litter = rep(c(1:(ngroup*length(doses))), each = dim),
resp = sim_data[1,])
data.input <- data.frame(dose = simulated_data$dose,
response = simulated_data$resp,
litter = simulated_data$litter)
plot(data.input$dose, data.input$response)
data_N <- PREP_DATA_N_C(data.input, q, prior.d = 'N11')
data_LN <- PREP_DATA_LN_C(data.input, q, prior.d = 'N11')
# Laplace approximation
FLBMD <- full.laplace_MAc(data_N, data_LN, prior.weights)
# MA estimates
FLBMD$MA
# model weights
round(FLBMD$weights,4)
# model-specific fit
FLBMD$E4_N
# output as dataframe/list
BMDWeights(FLBMD, 'continuous')
summary.BMADR(FLBMD, clustered = T) ## TO FIX: unused argument clustered = T in par_med(); also for plot
# plot output
pFLBMD = plot.BMADR(FLBMD, weight_type = "LP", clustered = T, include_data = T, all = F, title = '')
rm(list=ls())
# install package from zip file
install.packages("~/GitHub/BMABMDR_0.0.0.9014.tar.gz", repos = NULL, type = "source")
